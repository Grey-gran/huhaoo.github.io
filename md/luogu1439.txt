---
title: luogu1439
date: 2018-01-03 13:00:43
tags:
  - luogu
  - DP
mathjax: on
---

> 给出1-n的两个排列P1和P2，求它们的最长公共子序列。

<!--more-->

$O(n^2)$的算法大家估计都会，就不说了。

-----

正解是$O(n\dot \ log_2n)$的，可能有点难想。

```
5 
3 2 1 4 5
1 2 3 4 5
```

这是输入，输出是`3`。

手推一下，发现就是：

```
3 4 5
2 4 5
1 4 5
```

这三种情况，发现它们都是上升序列！！！

再来一个样例：

```
5
3 2 1 4 5
5 4 3 2 1
```

算出来是：

```
3 2 1
```

不符合刚才的规律！

观察样例，第二行满足：$\forall i,a_i=i$

我们可以把所有的数据的第一个排列变为以上形式，之后的最长公共子序列就会变成第二个序列的最长上升子序列！

`Code:`

```cpp
#define N 100010
int n,t[N],s[N],top;
int main()
{
	n=read();
	fr(i,1,n)
		t[read()]=i;
	top=0;
	fr(i,1,n)
	{
		int a=t[read()];//一一对应到第一个序列
		if(a>s[top])
			s[++top]=a;
		else
		{
			int l=1,r=top+1;
			while(l<r)
			{
				int mid=(l+r)>>1;
				if(s[mid]<a)
					l=mid+1;
				else
					r=mid;
			}
			s[l]=a;
		}//O(n log n)求最长上升子序列
	}
	printf("%d\n",top);
	return 0;
}
```

