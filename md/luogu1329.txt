---
title: luogu1329|数列
date: 2018-01-17 14:51:32
tags:
  - DP
  - luogu
mathjax: on
---

准备搞数论，发现式子一个也不会推。。。

然后看到了这题，发现可做，于是我又做了一个`省选/NOI-`的假数论题

<!--more-->

用前缀和（好像叫差分，不敢确定）思想

样例的第一个序列是`0 -1 0 1`

我们假设原序列为$A$，设序列$B$满足$\forall i\in[2,n],B_i=A_i-A_{i-1}$

然后那个序列就变成了`-1 1 1`

考虑每个位置对答案的贡献

我们发现，假如在一个位置`+1(s)` 相当于将它后面的数都`+1(s)`，`-1(s)`同理

那么每个位置$(i)$对答案的贡献为$\pm (n-i+1)$

然后可以这样`DP`，然后答案要按字典序

所以反过来`DP`，找路径就是从$1$开始找的，就不用记录排序了

然后`c++`没有负数组，所以要将数组元素手动平移

然后找到$100$组就推掉，不然`TLE`

代码如下：

```c++
#define P 6000
#define N 110
long long n,s,f[N][P<<2],ans[N],cnt;
void print(int i,int j)
{
	if(cnt>=100)
		return;//大于100就退掉
	if(i==n)
	{
		cnt++;
		int th=0;
		fr(i,1,n)
			printf("%d%c",th+=ans[i],i==n?'\n':' ');
            //因为ans是用前缀和方式存的，所以输出也要用前缀和的方式输出
		return;
	}
	int k=n-i;
	if(j>k&&f[i+1][j-k])//没有方案到最终状态就不搜
	{
		ans[i+1]=-1;
		print(i+1,j-k);
	}
	if(f[i+1][j+k])
	{
		ans[i+1]=1;
		print(i+1,j+k);
	}
}
int main()
{
	n=read();
	s=read()+P;
	f[n][s]=1;
	fd(i,n,2)//反过来推
		fr(j,1,P<<1)
			if(f[i][j])
			{
				int k=n-i+1;
				if(j>k)
					f[i-1][j-k]+=f[i][j];
				f[i-1][j+k]+=f[i][j];
			}
	printf("%lld\n",f[1][P]);
	print(1,P);
	return 0;
}
```

