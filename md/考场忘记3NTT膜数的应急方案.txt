---
title: 考场忘记3NTT膜数的应急方案
date: 2019-11-06 11:56:20
tags:
---

除开通用的求原根和快速幂板子就$10$行左右

<!--more-->

```cpp
#define i64 long long
i64 power(i64 a,i64 b,i64 p)//快速幂
{
	i64 r=1;
	while(b)
	{
		if(b&1)
			r=r*a%p;
		a=a*a%p;
		b>>=1;
	}
	return r;
}
int check(i64 p)//判断质数
{
	fr(i,2,sqrt(p))
		if(p%i==0)
			return 0;
	return 1;
}
i64 getg(i64 n)//求原根
{
	i64 a[20],c=0;
	i64 k=n-1;
	fr(i,2,sqrt(k))
		if(k%i==0)
		{
			a[++c]=i;
			while(k%i==0)
				k/=i;
			end_i=sqrt(k);
		}
	if(k!=1)
		a[++c]=k;
	fr(g,2,n)
	{
		int flag=1;
		fr(i,1,c)
			if(power(g,(n-1)/a[i],n)==1)
			{
				flag=0;
				break;
			}
		if(flag)
			return g;
	}
	return -1;
}
void find_ntt_mod(i64 p,i64 cnt,i64 g)//2^p|mod-1 ~~g=g~~
{
	i64 i=1;
	while(cnt)
	{
		if(check((i<<p)+1)&&getg((i<<p)+1)==g)
		{
			printf("%lld*2^%lld=%lld,g=%lld\n",i,p,(i<<p)+1,getg((i<<p)+1));
			cnt--;
		}
		i++;
	}
}
int main()
{
	find_ntt_mod(21,30,3);
	return 0;
}
```

跑出来

```
11*2^21=23068673,g=3
50*2^21=104857601,g=3
53*2^21=111149057,g=3
65*2^21=136314881,g=3
80*2^21=167772161,g=3
89*2^21=186646529,g=3
95*2^21=199229441,g=3
101*2^21=211812353,g=3
119*2^21=249561089,g=3
131*2^21=274726913,g=3
221*2^21=463470593,g=3
224*2^21=469762049,g=3
284*2^21=595591169,g=3
308*2^21=645922817,g=3
326*2^21=683671553,g=3
341*2^21=715128833,g=3
353*2^21=740294657,g=3
428*2^21=897581057,g=3
446*2^21=935329793,g=3
470*2^21=985661441,g=3
476*2^21=998244353,g=3
479*2^21=1004535809,g=3
521*2^21=1092616193,g=3
554*2^21=1161822209,g=3
575*2^21=1205862401,g=3
578*2^21=1212153857,g=3
581*2^21=1218445313,g=3
584*2^21=1224736769,g=3
611*2^21=1281359873,g=3
620*2^21=1300234241,g=3
```

可以看出最常用的`469762049,998244353,1004535809`都在里面
