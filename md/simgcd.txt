---
title: 类gcd算法
date: 2019-02-12 09:46:29
tags:
- 类gcd
- math
mathjax: on
---

> 给定$n,a,b,c$，求：
> 
> $$
> f_{n,a,b,c}=\sum_{i=0}^n\lfloor\dfrac{ai+b}c\rfloor\\
> g_{n,a,b,c}=\sum_{i=0}^ni\lfloor\dfrac{ai+b}c\rfloor\\
> h_{n,a,b,c}=\sum_{i=0}^n\lfloor\dfrac{ai+b}c\rfloor^2
> $$
>

<!--more-->

先考虑 $f$

若 $a\ge c$ 或 $b\ge c$

那么设$ a=p_ac+q_a,b=p_bc+q_b$

$$
f_{n,a,b,c}=\sum_{i=0}^n\lfloor\dfrac{p_aci+q_ai+p_bc+q_b}{c}\rfloor=\sum_{i=0}^n\lfloor p_ai+p_b+\dfrac{q_ai+q_b}{c}\rfloor=\\\dfrac{n(n+1)}2p_a+(n+1)p_b+f_{n,q_a,q_b,c}
$$

显然只需考虑 $a,b<c$

![此处mathjax出了些问题](simgcd/math1.png)

太麻烦，记 $m=\lceil\dfrac{na-c+b+1}{c}\rceil-1$

$$
f_{n,a,b,c}=\sum_{0\le j\le m}(n-\lfloor\dfrac{cj+c-b-1}{a}\rfloor)\\=n(m+1)-\sum_{j=0}^m\lfloor\dfrac{cj+c-b-1}{a}\rfloor\\=n(m+1)-f_{m,c,c-b-1,a}
$$

当然，在 $an+b<c$ 时， $f_{n,a,b,c}=0$

然后考虑 $g$

显然，先化为 $a,b<c$

$$
g_{n,a,b,c}=\sum_{i=0}^ni\lfloor\dfrac {ai+b}c\rfloor=\sum_{i=0}^ni\lfloor\dfrac{p_aci+q_ai+p_bc+q_b}{c}\rfloor\\=\sum_{i=0}^ni(p_ai+p_b)+\lfloor\dfrac{q_ai+q_b}c\rfloor\\=\dfrac{i(i+1)(2i+1)}6p_a+\dfrac{i(i+1)}{2}p_b+g_{n,q_a,q_b,c}
$$

于是 $a,b<c$

然后模仿 $f$

$$
g_{n,a,b,c}=\sum_{i=0}^ni\lfloor\dfrac{ai+b}c\rfloor=\sum_{0\le i\le n}\sum_{j\ge1}i[ai+b\ge cj]\\=\sum_{0\le i\le n}\sum_{j\ge0}i[ai+b\ge cj+c]=\sum_{j\ge0}\sum_{0\le i\le n}i[ai+b\ge cj+c]\\=\sum_{j\ge0}\sum_{0\le i\le n}i[ai>cj+c-b-1]=\sum_{j\ge 0}\sum_{0\le i\le n}i[i>\dfrac{cj+c-b-1}{a}]\\=\sum_{j\ge 0}\sum_{\frac{cj+c-b-1}a<i\le n}i\\=\sum_{0\le j<\frac{na-c+b+1}c}\dfrac{(n+\lfloor\frac{cj+c-b-1}{a}\rfloor+1)(n-\lfloor\frac{cj+c-b-1}a\rfloor)}2\\=\dfrac12\sum_{0\le j<\frac{na-c+b+1}c}(n^2+n-\lfloor\frac{cj+c-b-1}{a}\rfloor^2-\lfloor\frac{cj+c-b-1}{a}\rfloor)
$$

记 $m=\lceil\dfrac{na-c+b+1}{c}\rceil-1$

$$
g_{n,a,b,c}=\dfrac12\sum_{0\le j\le m}(n^2+n-\lfloor\frac{cj+c-b-1}{a}\rfloor^2-\lfloor\frac{cj+c-b-1}{a}\rfloor)\\=\dfrac12((m+1)(n^2+n)-\sum_{0\le j\le m}\lfloor\frac{cj+c-b-1}{a}\rfloor^2-\sum_{0\le j\le m}\lfloor\frac{cj+c-b-1}{a}\rfloor)\\=\dfrac12((m+1)(n^2+n)-h_{m,c,c-b-1,a}-f_{m,c,c-b-1,a})
$$

出现了 $h$ ……先不管吧

最后推 $h$

按照惯例，先化为 $a,b<c$

$$
h_{n,a,b,c}=\sum_{i=0}^n\lfloor\dfrac{ai+b}c\rfloor^2=\sum_{i=0}^n\lfloor\dfrac{p_aci+q_ai+p_bc+q_b}{c}\rfloor^2\\=\sum_{i=0}^n\lfloor p_ai+p_b+\dfrac{q_ai+q_b}{c}\rfloor^2=\sum_{i=0}^n(p_ai+p_b+\lfloor\dfrac{q_ai+q_b}{c}\rfloor)^2\\=\sum_{i=0}^n((p_ai+p_b)^2+2(p_ai+p_b)\lfloor\dfrac{q_ai+q_b}{c}\rfloor+\lfloor\dfrac{q_ai+q_b}{c}\rfloor^2)\\=\sum_{i=0}^n(p_a^2i^2+2p_ap_bi+p_b^2+2p_ai\lfloor\dfrac{q_ai+q_b}{c}\rfloor+2p_b\lfloor\dfrac{q_ai+q_b}{c}\rfloor+\lfloor\dfrac{q_ai+q_b}{c}\rfloor^2)\\=p_a^2\dfrac{n(n+1)(2n+1)}{6}+p_ap_bn(n+1)+(n+1)p_b^2+2p_ag_{n,q_a,q_b,c}+2p_bf_{n,q_a,q_b,c}+h_{n,q_a,q_b,c}
$$

然后当 $a,b<c$ 时，发现 $x^2$ 太不好处理了！

于是我们上网找到了一种方法：

$$
x^2=2\sum_{i=0}^xi-x
$$

然后就可以开始（不）和谐地推算了

$$
h_{n,a,b,c}=\sum_{i=0}^n\lfloor\dfrac{ai+b}c\rfloor^2=\sum_{0\le i\le n}(2\sum_{0\le j\le \lfloor\frac{ai+b}c\rfloor}j-\lfloor\dfrac{ai+b}c\rfloor)\\=2\sum_{0\le i\le n}\sum_{0\le j\le\lfloor\frac{ai+b}c\rfloor}j-\sum_{0\le i\le n}\lfloor\dfrac{ai+b}c\rfloor\\-\sum_{0\le i\le n}\lfloor\dfrac{ai+b}c\rfloor=-f_{n,a,b,c}\\\sum_{0\le i\le n}\sum_{0\le j\le \lfloor\frac{ai+b}c\rfloor}j=\sum_{j\ge 0}j\sum_{0\le i\le n}[j\le\lfloor\dfrac{ai+b}c\rfloor]\\=\sum_{j\ge 1}j\sum_{0\le i\le n}[cj-1<ai+b]=\sum_{j\ge 0}(j+1)\sum_{0\le i\le n}[ai>cj+c-b-1]\\=\sum_{j\ge0}(j+1)\sum_{0\le i\le n}[i>\dfrac{cj+c-b-1}a]=\sum_{0\le j\le\lfloor\frac{an+b}c\rfloor-1}(j+1)(n-\lfloor\dfrac{cj+c-b-1}a\rfloor)\\=n\dfrac{\lfloor\frac{an+b}c\rfloor\lfloor\frac{an+b}c+1\rfloor}2-\sum_{j=0}^{\lfloor\frac{an+b}{c}\rfloor-1}(j+1)\lfloor\dfrac{cj+c-b-1}a\rfloor\\=n\dfrac{\lfloor\frac{an+b}c\rfloor\lfloor\frac{an+b}c+1\rfloor}2-g_{\lfloor\frac{an+b}c-1\rfloor,c,c-b-1,a}-f_{\lfloor\frac{an+b}c-1\rfloor,c,c-b-1,a}
$$

记 $m=\lfloor\dfrac{an+b}{c}\rfloor-1$ 于是

$$
h_{n,a,b,c}=n(m+1)(m+2)-2g_{m,c,c-b-1,a}-2f_{m,c,c-b-1,a}-f_{n,a,b,c}
$$

$g,h$ 边界与 $f$ 相同

复杂度：

显然，只考虑 $a,c$ ，它是这样变化的（ $h$ 稍微有些区别，不过多的是 $O(\lg n)$ 级别的）：

$$
(a,c)\rightarrow(c,a)\rightarrow(c~\mathrm{mod}~a,a)\rightarrow\dots
$$

是不是像极了gcd啊？

所以 $f$ 可以 $O(\lg n)$ 求， $g,h$ 因为内带 $f$ ，所以只能 $O(\lg^2n)$ 求

至于 $g,h$ 怎么 $O(\lg n)$ 求，只要把 $f,g,h$ 一起求就好了

[模板地址](https://www.luogu.org/problemnew/show/P5170)

[`code`](https://github.com/huhaoo/luogu/blob/master/5170.cpp)

```cpp
#define mod 998244353
#define p2 499122177
#define p6 166374059
void calc(long long n,long long a,long long b,long long c,long long &f,long long &g,long long &h,int opt)
{
	long long _f,_g,_h;
	if(a*n+b<c)
	{
		f=g=h=0;
		return;
	}
	if(a>=c||b>=c)
	{
		calc(n,a%c,b%c,c,_f,_g,_h,1);
		f=(n*(n+1)/2%mod*(a/c)%mod+(n+1)*(b/c)%mod+_f)%mod;
		g=(n*(n+1)%mod*(n+n+1)%mod*p6%mod*(a/c)%mod+n*(n+1)/2%mod*(b/c)%mod+_g)%mod;
		h=((a/c)*(a/c)%mod*n%mod*(n+1)%mod*(n+n+1)%mod*p6%mod+(a/c)*(b/c)%mod*n%mod*(n+1)%mod+(n+1)*(b/c)%mod*(b/c)%mod+2*(a/c)*_g%mod+2*(b/c)*_f%mod+_h)%mod;
		return;
	}
	long long m=(n*a+b)/c-1;
	calc(m,c,c-b-1,a,_f,_g,_h,1);
	f=(n*(m+1)%mod-_f+mod)%mod;
	g=((m+1)*(n+1)%mod*n%mod-_h-_f+mod+mod)*p2%mod;
	h=(n*(m+1)%mod*(m+2)%mod-2*_g-2*_f-f+5ll*mod)%mod;
}
int main()
{
	long long t,n,a,b,c,f,g,h;
	t=read();
	while(t--)
	{
		n=read();
		a=read();
		b=read();
		c=read();
		calc(n,a,b,c,f,g,h,1);
		printf("%lld %lld %lld\n",f,h,g);
	}
	return 0;
}
```













