<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Mathematica&amp;Geogebra入门教程</title>
      <link href="/2019/03/07/math-geo/"/>
      <url>/2019/03/07/math-geo/</url>
      <content type="html"><![CDATA[<p>想$O(1)$做一道（解析）几何题（吊打标算）却力不从心？</p><p>想手画$3d$图形却被自己迷到？</p><p>来试试mathematica&amp;geogebra吧！</p><a id="more"></a><h3 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h3><p><del><strong>Google</strong>或必应<strong>境外版</strong>搜搜吧</del></p><h3 id="Mathematica『入门』教学"><a href="#Mathematica『入门』教学" class="headerlink" title="Mathematica『入门』教学"></a>Mathematica『入门』教学</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><ul><li>我也不太会</li><li>并不觉得多好用</li><li>偷懒最好别用</li><li>像python一样是解释类语言</li></ul><h4 id="一些函数-amp-用法"><a href="#一些函数-amp-用法" class="headerlink" title="一些函数&amp;用法"></a>一些函数&amp;用法</h4><p>下面可以点击看官方教程</p><ul><li><p><a href="https://reference.wolfram.com/language/ref/Sum.html" target="_blank" rel="noopener">求和</a></p></li><li><p><a href="https://reference.wolfram.com/language/tutorial/SolvingEquations.html" target="_blank" rel="noopener">解方程</a></p></li><li><p><a href="https://reference.wolfram.com/language/tutorial/Inequalities-ManipulatingEquationsAndInequalities.html" target="_blank" rel="noopener">解不等式</a></p></li><li><p><a href="https://reference.wolfram.com/language/tutorial/StructuralOperationsOnPolynomials.html" target="_blank" rel="noopener">多项式运算</a></p></li><li><p><a href="https://reference.wolfram.com/language/tutorial/DefiniteIntegrals.html" target="_blank" rel="noopener">积分</a></p><p><del>用windwos的同学可以下载<a href="https://tieba.baidu.com/p/6036924165" target="_blank" rel="noopener">这辆车</a>玩玩</del></p></li></ul><h3 id="Geogebra『从入门到跳楼』"><a href="#Geogebra『从入门到跳楼』" class="headerlink" title="Geogebra『从入门到跳楼』"></a>Geogebra『从入门到<del>跳楼</del>』</h3><h4 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h4><ul><li>挺好用的</li><li>除了精度都挺好（精度也能设置）</li></ul><h4 id="2D"><a href="#2D" class="headerlink" title="2D"></a>2D</h4><h5 id="鼠标操作"><a href="#鼠标操作" class="headerlink" title="鼠标操作"></a>鼠标操作</h5><p>左中键移动，右键（区间）选取</p><p>单击选中，双击重新定义</p><h5 id="键盘操作"><a href="#键盘操作" class="headerlink" title="键盘操作"></a>键盘操作</h5><p><code>Ctrl-A</code>全选</p><p><code>Ctrl-C</code>复制</p><p><code>Ctrl-V</code>粘贴（位置随机）</p><p><code>Ctrl-Z</code>回退</p><p><code>Ctrl-Y</code>重做</p><p><code>Up/Left/Down/Right Arrow</code>上/左/下/右移动</p><h5 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h5><p><code>A=(x,y)</code>新建点<code>A</code>，坐标<code>(x,y)</code>，<code>A</code>可以省略，省略自动标号</p><p><code>f(x)</code>绘制$y=f(x)$</p><p><code>p(x,y)</code>如果$[p(x,y)]$，就绘制$(x,y)$最终组成一个图像（即$x,y$的方程，如$x^2+y^2=1$就会绘制一个圆）</p><h5 id="图上绘制"><a href="#图上绘制" class="headerlink" title="图上绘制"></a>图上绘制</h5><p>自己找，就在顶上那一排</p><p>不过注意它是<strong>自动吸附</strong>的</p><h4 id="3D"><a href="#3D" class="headerlink" title="3D"></a>3D</h4><h5 id="鼠标操作-1"><a href="#鼠标操作-1" class="headerlink" title="鼠标操作"></a>鼠标操作</h5><p>左右键改变角度，中键移动</p><p>单击选中，双击重新定义</p><h5 id="键盘操作-1"><a href="#键盘操作-1" class="headerlink" title="键盘操作"></a>键盘操作</h5><p>同2D</p><h5 id="常用命令-1"><a href="#常用命令-1" class="headerlink" title="常用命令"></a>常用命令</h5><p><code>A=(x,y,z)</code>新建点<code>A</code>，坐标<code>(x,y,z)</code>，<code>A</code>可以省略，省略自动标号</p><p><code>f(x,y)</code>绘制$z=f(x,y)​$</p><p><code>p(x,y,z)</code>如果$[p(x,y,z)]$，就绘制$(x,y,z)$最终组成一个图像（即$x,y,z$的方程，如$x^2+y^2+z^2=1$就会绘制一个圆）</p><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><p>教学部分结束了，来做道题巩固一下吧！</p><h4 id="Great-Circle"><a href="#Great-Circle" class="headerlink" title="Great Circle"></a><a href="http://poj.org/problem?id=2298" target="_blank" rel="noopener">Great Circle</a></h4><blockquote><p>求地球上两个城市间最短路径上纬度最大的点的纬度值，答案不唯一输出<code>undefined</code></p></blockquote><p>怎么做呢？</p><p>一步步来吧！</p><h5 id="转化为解析几何"><a href="#转化为解析几何" class="headerlink" title="转化为解析几何"></a>转化为解析几何</h5><p>以球心为原点（记为$A$），地球半径为单位长，<code>N</code>方向为$z$正方向建系，且$B$记为$(1,0,0)$</p><p>首先先把经纬度转为球上坐标</p><p>首先纬度直接关系到$z$值</p><p>先过城市（记为$C(x,y,z)$）向$z$作垂线，垂足记为$D​$</p><p>再连接$AC$，根据纬度定义，$\angle ACD$就是纬度值</p><p>所以$z=AD=AC\sin\angle ACD$</p><p>我们还可以得$CD=AC\cos\angle ACD$</p><p>我们然后把$C$向$XAY$平面作垂线，垂足记为$E$，连接$EA$</p><p>那么$\angle EAB$为纬度值</p><p>于是$x=EA\cos\angle EAB,y=EA\sin\angle EAB$</p><p>如图：</p><p><img src="math-geo/1.png" alt=""></p><h5 id="求-z-值最大的点"><a href="#求-z-值最大的点" class="headerlink" title="求$z$值最大的点"></a>求$z$值最大的点</h5><ol><li>记二个城市为$CD$，取$CD$中点$E$</li><li>连射线$AE$，交圆与$F$，作平面$CDF$，这个平面交圆就包含它的路径，但是$z$最大的点可能会在另一半弧，这样的话就是$\max(z_C,z_D)$</li></ol><p>如图：</p><p><img src="math-geo/2.png" alt=""></p><p>隐藏了部分点，就给<a href="https://www.geogebra.org/m/g4pdcf8j" target="_blank" rel="noopener">资源连接</a></p><h5 id="怎么判断点在哪段弧中"><a href="#怎么判断点在哪段弧中" class="headerlink" title="怎么判断点在哪段弧中"></a>怎么判断点在哪段弧中</h5><p>如图：</p><p><img src="math-geo/3.png" alt=""></p><p>显然，直线距离越长弧越长，那么显然可以直接比较直线距离即可</p>]]></content>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>NOI2015品酒大会</title>
      <link href="/2019/03/05/NOI2015%E5%93%81%E9%85%92%E5%A4%A7%E4%BC%9A/"/>
      <url>/2019/03/05/NOI2015%E5%93%81%E9%85%92%E5%A4%A7%E4%BC%9A/</url>
      <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P2178" target="_blank" rel="noopener">题目链接</a></p><a id="more"></a><p><del>感觉NOI的题目也没有多难，只是难码难调卡int而以</del></p><p><del>看到$r$相似就想到height，想到height就想到sa，想到sa就想到弃疗，OIer的思维可以这样跃进</del></p><p>显然sa要排，height要算。</p><p>然后因为$\mathrm{lcp}(sa_i,sa_j)=\min h_{[i+1,j]}$，而$h$是基于$sa$的，所以我们可以按照$sa$的顺序来将区间上的<del>玄学</del>字符串问题转化为序列问题</p><p>于是按照$sa$处理了首先第一问比较简单（但是$n$一定要用<code>long long</code>或转化为<code>long long</code>，不然就两行泪了）统计有多少区间最小值为$k$即可，可以动态用$st$表求最小值位置，然后每次分裂区间即可。</p><p>第二问可以转化为给定一个区间快速求最（次）大（小）（$\leftarrow$一共要求$4$个值，不是$2$个）值</p><p>可以在求第一问分裂区间时顺便求解。</p><p>最后不要忘了求前缀和</p><p>细节巨多，详见代码：</p><p><a href="https://github.com/huhaoo/luogu/blob/master/2178.cpp" target="_blank" rel="noopener"><code>code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 300010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf (1ll&lt;&lt;60)</span></span><br><span class="line"><span class="keyword">int</span> n,sa[N],r[N],p[N],l[N],h[N],t[N],rh[N],st[N&lt;&lt;<span class="number">1</span>][<span class="number">25</span>],b[N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[N],a1[N],a2[N];</span><br><span class="line"><span class="keyword">char</span> s[N];</span><br><span class="line"><span class="keyword">void</span> _sort()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> m=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">m=max(m,r[i]);</span><br><span class="line">fr(i,<span class="number">1</span>,m)</span><br><span class="line">t[i]=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">t[r[i]]++;</span><br><span class="line">fr(i,<span class="number">1</span>,m)</span><br><span class="line">t[i]+=t[i<span class="number">-1</span>];</span><br><span class="line">fd(i,n,<span class="number">1</span>)</span><br><span class="line">sa[t[r[p[i]]]--]=p[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp1</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> h[a]==h[b]?a&lt;b:h[a]&lt;h[b];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> q[N],x;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getm</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> k=b[r-l+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> min(st[l][k],st[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">findm</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(getm(l,r)!=o)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> k=b[r-l+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(r==l)</span><br><span class="line">&#123;</span><br><span class="line">q[++x]=l;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((<span class="number">1</span>&lt;&lt;k)==r-l+<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">findm(l,l+(<span class="number">1</span>&lt;&lt;(k<span class="number">-1</span>))<span class="number">-1</span>,o);</span><br><span class="line">findm(l+(<span class="number">1</span>&lt;&lt;(k<span class="number">-1</span>)),r,o);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">findm(l,l+(<span class="number">1</span>&lt;&lt;k)<span class="number">-1</span>,o);</span><br><span class="line">findm(l+(<span class="number">1</span>&lt;&lt;k),r,o);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">long</span> <span class="keyword">long</span> &amp;mi,<span class="keyword">long</span> <span class="keyword">long</span> &amp;smi,<span class="keyword">long</span> <span class="keyword">long</span> &amp;mx,<span class="keyword">long</span> <span class="keyword">long</span> &amp;smx)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> o,<span class="keyword">long</span> <span class="keyword">long</span> &amp;mi,<span class="keyword">long</span> <span class="keyword">long</span> &amp;smi,<span class="keyword">long</span> <span class="keyword">long</span> &amp;mx,<span class="keyword">long</span> <span class="keyword">long</span> &amp;smx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a1[getm(l,r)]+=(<span class="keyword">long</span> <span class="keyword">long</span>)(r-l+<span class="number">1</span>)*(r-l+<span class="number">2</span>)/<span class="number">2</span>;</span><br><span class="line">a1[o]-=(<span class="keyword">long</span> <span class="keyword">long</span>)(r-l+<span class="number">1</span>)*(r-l+<span class="number">2</span>)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(l&gt;r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(mi&gt;a[sa[r]])</span><br><span class="line">&#123;</span><br><span class="line">smi=mi;</span><br><span class="line">mi=a[sa[r]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(smi&gt;a[sa[r]])</span><br><span class="line">smi=a[sa[r]];</span><br><span class="line"><span class="keyword">if</span>(mx&lt;a[sa[r]])</span><br><span class="line">&#123;</span><br><span class="line">smx=mx;</span><br><span class="line">mx=a[sa[r]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(smx&lt;a[sa[r]])</span><br><span class="line">smx=a[sa[r]];</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> _mi,_smi,_mx,_smx;</span><br><span class="line">calc(l,r,_mi,_smi,_mx,_smx);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">4</span>]=&#123;mi,smi,_mi,_smi&#125;;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> b[<span class="number">4</span>]=&#123;mx,smx,_mx,_smx&#125;;</span><br><span class="line">sort(a,a+<span class="number">4</span>);</span><br><span class="line">sort(b,b+<span class="number">4</span>);</span><br><span class="line">mi=a[<span class="number">0</span>];</span><br><span class="line">smi=a[<span class="number">1</span>];</span><br><span class="line">mx=b[<span class="number">3</span>];</span><br><span class="line">smx=b[<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">long</span> <span class="keyword">long</span> &amp;mi,<span class="keyword">long</span> <span class="keyword">long</span> &amp;smi,<span class="keyword">long</span> <span class="keyword">long</span> &amp;mx,<span class="keyword">long</span> <span class="keyword">long</span> &amp;smx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> o=getm(l,r);</span><br><span class="line"><span class="keyword">if</span>(l==r)</span><br><span class="line">&#123;</span><br><span class="line">mi=smx=min(a[sa[l<span class="number">-1</span>]],a[sa[l]]);</span><br><span class="line">smi=mx=max(a[sa[l<span class="number">-1</span>]],a[sa[l]]);</span><br><span class="line">a2[o]=max(a2[o],mx*smx);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">mi=inf;</span><br><span class="line">smi=inf;</span><br><span class="line">mx=-inf;</span><br><span class="line">smx=-inf;</span><br><span class="line"><span class="keyword">int</span> _l=x+<span class="number">1</span>,_r;</span><br><span class="line">findm(l,r,o);</span><br><span class="line">_r=x;</span><br><span class="line">query(l,q[_l]<span class="number">-1</span>,o,mi,smi,mx,smx);</span><br><span class="line">query(q[_r]+<span class="number">1</span>,r,o,mi,smi,mx,smx);</span><br><span class="line">fr(i,_l,_r<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">query(q[i]+<span class="number">1</span>,q[i+<span class="number">1</span>]<span class="number">-1</span>,o,mi,smi,mx,smx);</span><br><span class="line">&#125;</span><br><span class="line">a2[o]=max(a2[o],max(mi*smi,mx*smx));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">a[i]=read();</span><br><span class="line">fr(i,<span class="number">2</span>,n)</span><br><span class="line">b[i]=b[i&gt;&gt;<span class="number">1</span>]+<span class="number">1</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">r[i]=s[i]-<span class="string">'a'</span>+<span class="number">1</span>;</span><br><span class="line">p[i]=i;</span><br><span class="line">&#125;</span><br><span class="line">_sort();</span><br><span class="line">fr(i,<span class="number">0</span>,log2(n))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> c=<span class="number">0</span>;</span><br><span class="line">fr(j,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;i)<span class="number">-1</span>)</span><br><span class="line">p[++c]=n-j;</span><br><span class="line">fr(j,<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span>(sa[j]&gt;(<span class="number">1</span>&lt;&lt;i))</span><br><span class="line">p[++c]=sa[j]-(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">_sort();</span><br><span class="line"><span class="keyword">int</span> m=<span class="number">1</span>;</span><br><span class="line">fr(j,<span class="number">1</span>,n)</span><br><span class="line">l[j]=r[j];</span><br><span class="line">r[sa[<span class="number">1</span>]]=<span class="number">1</span>;</span><br><span class="line">fr(j,<span class="number">2</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(l[sa[j]]!=l[sa[j<span class="number">-1</span>]]||l[sa[j]+(<span class="number">1</span>&lt;&lt;i)]!=l[sa[j<span class="number">-1</span>]+(<span class="number">1</span>&lt;&lt;i)])</span><br><span class="line">m++;</span><br><span class="line">r[sa[j]]=m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(m==n)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> j=sa[r[i]<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(k)</span><br><span class="line">k--;</span><br><span class="line"><span class="keyword">while</span>(s[i+k]==s[j+k])</span><br><span class="line">k++;</span><br><span class="line">h[r[i]]=k;</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">st[i][<span class="number">0</span>]=h[i];</span><br><span class="line">fr(j,<span class="number">1</span>,<span class="number">20</span>)</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span>(i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))&lt;=n)</span><br><span class="line">st[i][j]=min(st[i][j<span class="number">-1</span>],st[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> _a,_b,_c,_d;</span><br><span class="line">fr(i,<span class="number">0</span>,n<span class="number">-1</span>)</span><br><span class="line">a2[i]=-inf;</span><br><span class="line">findm(<span class="number">2</span>,n,<span class="number">0</span>);</span><br><span class="line">a1[<span class="number">0</span>]=(<span class="keyword">long</span> <span class="keyword">long</span>)n*(n<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">calc(<span class="number">2</span>,n,_a,_b,_c,_d);</span><br><span class="line">fd(i,n<span class="number">-2</span>,<span class="number">0</span>)</span><br><span class="line">a2[i]=max(a2[i],a2[i+<span class="number">1</span>]);</span><br><span class="line">fd(i,n<span class="number">-2</span>,<span class="number">0</span>)</span><br><span class="line">a1[i]+=a1[i+<span class="number">1</span>];</span><br><span class="line">fr(i,<span class="number">0</span>,n<span class="number">-1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>,a1[i],a2[i]==-inf?<span class="number">0</span>:a2[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> NOI </tag>
            
            <tag> sa </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>插头DP略解</title>
      <link href="/2019/02/23/%E6%8F%92%E5%A4%B4DP/"/>
      <url>/2019/02/23/%E6%8F%92%E5%A4%B4DP/</url>
      <content type="html"><![CDATA[<p>例题：</p><blockquote><p>给出$n\times m$的方格，有些格子不能铺线，其它格子必须铺，形成一个闭合回路。问有多少种铺法？</p></blockquote><a id="more"></a><p><a href="https://fancydreams.ink/WebDisk/PlugDP.pdf" target="_blank" rel="noopener">丢个链接就跑</a></p><p><a href="https://github.com/huhaoo/template/blob/master/%E6%8F%92%E5%A4%B4DP.cpp" target="_blank" rel="noopener"><code>code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 15</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 10000000ll</span></span><br><span class="line"><span class="keyword">int</span> p[N],n,m,_x,_y;</span><br><span class="line"><span class="keyword">char</span> s[N][N];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span>,<span class="keyword">long</span> <span class="keyword">long</span>&gt;f;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> g)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> h=x*M*M+y*M+g,r=<span class="number">0</span>,_g=<span class="number">0</span>,cnt=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(f.count(h))</span><br><span class="line"><span class="keyword">return</span> f[h];</span><br><span class="line"><span class="keyword">if</span>(s[x][y]==<span class="string">'*'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!(g/p[y<span class="number">-1</span>]%<span class="number">9</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(y!=m)</span><br><span class="line">r=calc(x,y+<span class="number">1</span>,g);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">r=calc(x+<span class="number">1</span>,<span class="number">1</span>,g*<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">r=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x==_x&amp;&amp;y==_y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!(g<span class="number">-7</span>*p[y<span class="number">-1</span>]))</span><br><span class="line">r=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">switch</span>(g/p[y<span class="number">-1</span>]%<span class="number">9</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">&#123;</span><br><span class="line">_g=g+p[y<span class="number">-1</span>]+<span class="number">2</span>*p[y];</span><br><span class="line"><span class="keyword">if</span>(y!=m)</span><br><span class="line">r+=calc(x,y+<span class="number">1</span>,_g);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">&#123;</span><br><span class="line">                _g=g<span class="number">-4</span>*p[y<span class="number">-1</span>];</span><br><span class="line">                fr(i,y+<span class="number">2</span>,m)</span><br><span class="line">                    <span class="keyword">if</span>(g/p[i<span class="number">-1</span>]%<span class="number">3</span>==<span class="number">1</span>)</span><br><span class="line">                        cnt++;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(g/p[i<span class="number">-1</span>]%<span class="number">3</span>==<span class="number">2</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        cnt--;</span><br><span class="line">                        <span class="keyword">if</span>(!cnt)</span><br><span class="line">                        &#123;</span><br><span class="line">                            _g-=p[i<span class="number">-1</span>];</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">if</span>(y!=m)</span><br><span class="line">                    r+=calc(x,y+<span class="number">1</span>,_g);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">&#123;</span><br><span class="line">                _g=g<span class="number">-8</span>*p[y<span class="number">-1</span>];</span><br><span class="line">                fd(i,y<span class="number">-1</span>,<span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">if</span>(g/p[i<span class="number">-1</span>]%<span class="number">3</span>==<span class="number">2</span>)</span><br><span class="line">                        cnt++;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(g/p[i<span class="number">-1</span>]%<span class="number">3</span>==<span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        cnt--;</span><br><span class="line">                        <span class="keyword">if</span>(!cnt)</span><br><span class="line">                        &#123;</span><br><span class="line">                            _g+=p[i<span class="number">-1</span>];</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">if</span>(y!=m)</span><br><span class="line">                    r+=calc(x,y+<span class="number">1</span>,_g);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    r+=calc(x+<span class="number">1</span>,<span class="number">1</span>,_g*<span class="number">3</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">&#123;</span><br><span class="line">_g=g<span class="number">-5</span>*p[y<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(y!=m)</span><br><span class="line">r+=calc(x,y+<span class="number">1</span>,_g);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> k=g/p[y<span class="number">-1</span>]%<span class="number">3</span>;</span><br><span class="line">_g=g-k*p[y<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(y!=m)</span><br><span class="line">&#123;</span><br><span class="line">r+=calc(x,y+<span class="number">1</span>,_g+k*p[y<span class="number">-1</span>]);</span><br><span class="line">r+=calc(x,y+<span class="number">1</span>,_g+k*p[y]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">r+=calc(x+<span class="number">1</span>,<span class="number">1</span>,(_g+k*p[y<span class="number">-1</span>])*<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> k=g/p[y]%<span class="number">3</span>;</span><br><span class="line">_g=g-k*p[y];</span><br><span class="line"><span class="keyword">if</span>(y!=m)</span><br><span class="line">&#123;</span><br><span class="line">r+=calc(x,y+<span class="number">1</span>,_g+k*p[y<span class="number">-1</span>]);</span><br><span class="line">r+=calc(x,y+<span class="number">1</span>,_g+k*p[y]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">r+=calc(x+<span class="number">1</span>,<span class="number">1</span>,(_g+k*p[y<span class="number">-1</span>])*<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> f[h]=r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">m=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s[i]+<span class="number">1</span>);</span><br><span class="line">fr(j,<span class="number">1</span>,m)</span><br><span class="line"><span class="keyword">if</span>(s[i][j]==<span class="string">'.'</span>)</span><br><span class="line">&#123;</span><br><span class="line">_x=i;</span><br><span class="line">_y=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!_x&amp;&amp;!_y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,m+<span class="number">1</span>)</span><br><span class="line">p[i]=p[i<span class="number">-1</span>]*<span class="number">3</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,calc(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 插头DP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>exbsgs</title>
      <link href="/2019/02/20/exbsgs/"/>
      <url>/2019/02/20/exbsgs/</url>
      <content type="html"><![CDATA[<blockquote><p>已知$a,p,b$，求<br>$$<br>a^x\equiv b(\mathrm{mod}~p)<br>$$</p></blockquote><a id="more"></a><p>不妨考虑$\gcd(a,p)=1$的情况</p><p>我们发现$a^x(a^\sqrt p)^y=a^{x+y\sqrt p}$</p><p>可以将$a^{1\dots\sqrt p}$存下来，然后用$(a^{\sqrt p(1\dots\sqrt p)})^{-1}$去查询</p><p>然后发现这要用到逆元，$\gcd(a,p)\not=1$没法搞</p><p>那么我们可以这样做，设$g=\gcd(a,p)$<br>$$<br>a^{x-1}\equiv \dfrac bp(\dfrac ag)^{-1}(\mathrm{mod}~\dfrac pg)<br>$$<br>递归求解即可，不过如果$g\not| b$，那么无解</p>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> exbsgs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Polya定理</title>
      <link href="/2019/02/19/Polya/"/>
      <url>/2019/02/19/Polya/</url>
      <content type="html"><![CDATA[<a id="more"></a><p>对于一个置换$p$，记循环个数为$c(p)$</p><p>那么用$m$种颜色染色本质不同方案数就是<br>$$<br>\dfrac{\sum_{p\in P}m^{c(p)}}{|P|}<br>$$<br><a href="https://www.luogu.org/problemnew/show/P4980" target="_blank" rel="noopener">例题</a></p><blockquote><p>给定一个$n$个点，$n$条边的环，有$n$种颜色，给每个顶点染色，问有多少种<strong>本质不同</strong>的染色方案，答案对$10^9+7$取模</p></blockquote><p>显然：<br>$$<br>n\times\mathrm{ans}=\sum_{i=0}^{n-1}n^{\gcd(n,i)}\\<br>=\sum_d\sum_{i=1}^{n}n^d[\gcd(n,i)=d]\\<br>=\sum_{d|n}n^d\sum_{i=1}^{\frac nd}[\gcd(\frac nd,i)=1]\\<br>=\sum_{d|n}n^d\mu(\frac nd)<br>$$</p>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> polya </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>简述原根与阶</title>
      <link href="/2019/02/18/%E5%8E%9F%E6%A0%B9%E4%B8%8E%E9%98%B6/"/>
      <url>/2019/02/18/%E5%8E%9F%E6%A0%B9%E4%B8%8E%E9%98%B6/</url>
      <content type="html"><![CDATA[<p>NTT要用，就记一下吧。</p><a id="more"></a><p>若$\gcd(a,m)=1$</p><p>阶$\mathrm{ord}_m(a)$定义如下<br>$$<br>\mathrm{ord}_m(a)=\min_{x&gt;0,a^x\equiv1(\mathrm{mod}~m)}x<br>$$<br>原根：</p><p>若$\mathrm{ord}_m(a)=\phi(m)$，那么$a$就是$m$的原根</p><p>求法：手算（雾）/枚举</p>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>二次剩余</title>
      <link href="/2019/02/18/%E4%BA%8C%E6%AC%A1%E5%89%A9%E4%BD%99/"/>
      <url>/2019/02/18/%E4%BA%8C%E6%AC%A1%E5%89%A9%E4%BD%99/</url>
      <content type="html"><![CDATA[<blockquote><p>求<br>$$<br>\sqrt k~\mathrm{mod}~p<br>$$<br>即求$x$，满足<br>$$<br>x^2\equiv k(\mathrm{mod}~p)<br>$$<br>其中$p$是质数，且$p\not=2$</p></blockquote><a id="more"></a><h4 id="一些性质"><a href="#一些性质" class="headerlink" title="一些性质"></a>一些性质</h4><p>首先，一个显然的性质：</p><p>若$k$存在$x$满足$x^2\equiv k$，那么<br>$$<br>k^{\frac{p-1}{2}}\equiv 1(\mathrm{mod}~p)<br>$$</p><p>证明：<br>$$<br>p|k^{p-1}-1\\<br>p|(k^{\frac{p-1}{2}}-1)(k^{\frac{p-1}{2}}+1)\\<br>\because p\in\mathrm{prime},p\not=2\\<br>\therefore p|k^{\frac{p-1}{2}}-1~\mathrm{or}~p|k^{\frac{p-1}{2}}+1<br>$$<br>但如果$p|k^{\frac{p-1}{2}}+1$</p><p>那么$p|x^{p-1}+1$</p><p>不符合费马小定理</p><p>于是有上面那个式子</p><p>同时，我们知道，如果不为$0$的数$a$，有<br>$$<br>a^{\frac{p-1}{2}}\equiv -1(\mathrm{mod}~p)<br>$$</p><h4 id="求解：Cipolla算法"><a href="#求解：Cipolla算法" class="headerlink" title="求解：Cipolla算法"></a>求解：Cipolla算法</h4><p>首先先随机出一个数$a$使得它不存在$x$使$x^2\equiv a^2-k$</p><p>显然，这样期望次数是$2$（证明我也不会）</p><p>并且有一个很好的性质：<br>$$<br>((a+\sqrt{a^2-k})^{\frac{p+1}{2}})^2\equiv k<br>$$<br>证明：<br>$$<br>(a+\sqrt{a^2-k})^{p+1}\equiv(a+\sqrt{a^2-k})^p(a+\sqrt{a^2-k})\\<br>\equiv(a^p+\sqrt{a^2-k}^p)(a+\sqrt{a^2-k})<br>$$<br>又因为<br>$$<br>\sqrt{a^2-k}^p\equiv(a^2-k)^{\frac{p-1}{2}}\sqrt{a^2-k}\\<br>\equiv-\sqrt{a^2-k}<br>$$<br>所以<br>$$<br>(a+\sqrt{a^2-k})^{p+1}\equiv(a-\sqrt{a^2-k})(a+\sqrt{a^2-k})\\<br>\equiv a^2-(a^2-k)\\<br>\equiv k(\mathrm{mod}~p)<br>$$<br>可是我们并不知道$\sqrt{a^2-k}$，同时这个数在$\mathrm{mod}~p$下无意义</p><p>于是我们需要仿照复数定义一下：</p><p>每个数都表示为$x+y\sqrt{a^2-k}$，简单记为$(x,y)$</p><p>我们就有下面运算：<br>$$<br>c(x,y)=(xc,yc)\\<br>(x_1,y_1)+(x_2,y_2)=(x_1+x_2,y_1+y_2)\\<br>(x_1,y_1)(x_2,y_2)=(x_1+y_1\sqrt{a^2-k})(x_2+y_2\sqrt{a^2-k})\\<br>=x_1x_2+y_1y_2(a^2-k)+(x_1y_2+x_2y_1)\sqrt{a^2-k}\\<br>=(x_1x_2+y_1y_2(a^2-k),(x_1y_2+x_2y_1)\sqrt{a^2-k})<br>$$<br>最后答案就是<br>$$<br>x\equiv(a,1)^{\frac{p+1}2}(\mathrm{mod}~p)<br>$$<br>我们可以用快速幂求解</p><p>可以证明（意思是我不会证）：</p><p>$x$的$\sqrt{a^2-k}$项为$0$</p>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> 二次剩余 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>为博客添加hitokoto</title>
      <link href="/2019/02/17/hitokoto/"/>
      <url>/2019/02/17/hitokoto/</url>
      <content type="html"><![CDATA[<p> hitokoto可以像下面这样<del>（点开才能看到）</del>：</p><a id="more"></a><hr><p><div><br>    <p class="hitokoto"></p><br>    <p class="from"></p></div></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>路径每个我都搞了两份，上面<code>windwos</code>，下面<code>linux</code></p><hr><p>（此部分建议省略）</p><p>可以参照<a href="https://hitokoto.cn/api" target="_blank" rel="noopener">官网</a></p><p>hexo用户直接在</p><p><code>\themes\next\layout\_layout.swig</code></p><p><code>/themes/next/layout/_layout.swig</code></p><p>的最下面加上一句话</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto"</span> <span class="attr">defer</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>不过这样有一个弊端，稍后再讲。</p><hr><p>引用一下这篇博客的js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> hitokoto = <span class="built_in">document</span>.querySelector(<span class="string">'.hitokoto'</span>);</span><br><span class="line">    <span class="keyword">var</span> <span class="keyword">from</span> = <span class="built_in">document</span>.querySelector(<span class="string">'.from'</span>);</span><br><span class="line">    update();</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        gethi = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">        gethi.open(<span class="string">"GET"</span>,<span class="string">"https://sslapi.hitokoto.cn/?c=a"</span>);</span><br><span class="line">        gethi.send();</span><br><span class="line">        gethi.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (gethi.readyState===<span class="number">4</span> &amp;&amp; gethi.status===<span class="number">200</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> Hi = <span class="built_in">JSON</span>.parse(gethi.responseText);</span><br><span class="line">                hitokoto.innerHTML = Hi.hitokoto;</span><br><span class="line">                <span class="keyword">from</span>.innerHTML = <span class="string">"from: &lt;b&gt;"</span> + Hi.from + <span class="string">"&lt;/b&gt;"</span>; </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建并添加至：</p><p><code>\themes\next\source\js\src\hitokoto.js</code></p><p><code>/themes/next/source/js/src/hitokoto.js</code></p><p>添加好<code>hitokoto.js</code>后，在</p><p><code>\themes\next\layout\_layout.swig</code></p><p><code>/themes/next/layout/_layout.swig</code></p><p>加入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/hitokoto.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>然后就可以用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"hitokoto"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"from"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>来引用了</p><p>如果你想像我这样添加到侧边栏</p><p>就在</p><p><code>\themes\next\layout\_macro\sidebar.swig</code></p><p><code>/themes/next/layout/_macro/sidebar.swig</code></p><p>的最后一个<code>&lt;/div&gt;</code>前面加入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"links-of-blogroll motion-element links-of-blogroll-block"</span>&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"Hitokotoframe"</span>&gt;</span><br><span class="line">&lt;p style=<span class="string">"margin:0px; padding:0px;"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"HitokotoMain"</span>&gt;</span><br><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"hitokoto"</span> style=<span class="string">"text-align:center; margin:0px; padding:0px;"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"from"</span> style=<span class="string">"text-align:right; padding:10px;"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><p>然后就好了</p><p><del>不过会有一个神奇的bug：一片文章只能有一处hitokoto</del></p>]]></content>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Min25筛</title>
      <link href="/2019/02/15/min25/"/>
      <url>/2019/02/15/min25/</url>
      <content type="html"><![CDATA[<p>Min_25是一个<del>吊打州阁筛</del>（用来求有某种特定特征的积性函数）的算法</p><blockquote><p>对于一个积性函数$f(x)$，求<br>$$<br>\sum_{i-1}^nf(i)<br>$$<br>满足$f(x),x\in\mathrm{prime}$是个多项式，$f(x^k),x\in\mathrm{prime}$可以快速求</p></blockquote><a id="more"></a><p>为方便，我们记$p_x$为第$x$个质数</p><p>首先我们考虑一个简单的式子：<br>$$<br>\sum_{i\in\mathrm{prime},i\le n}1<br>$$<br>显然有$f(x)=1$，设<br>$$<br>g(n,k)=\sum_{i\le n}[i\text{是质数或者}i\text{最小的质因数}&gt;p_k]<br>$$<br>考虑推递推式</p><p>如果$p_k^2&gt;n$</p><p>那么显然<br>$$<br>g(n,k)=g(n,k-1)<br>$$<br>因为没有任何贡献消失</p><p>但如果$p_k^2\le n$</p><p>那么就先化为这样<br>$$<br>g(n,k)=g(n,k-1)-X<br>$$<br>显然<br>$$<br>X=g(n,k)-g(n,k-1)\\<br>=\sum_{i\le n}[i\text{是质数或者}i\text{最小的质因数}&gt;p_k]-\sum_{i\le n}[i\text{是质数或者}i\text{最小的质因数}&gt;p_{k-1}]\\<br>=\sum_{i\le n}[i\text{是合数且}i\text{最小的质因数}=p_k]\\<br>=\sum_{p_ki\le n}[i\text{最小的质因数}\ge p_k]\\<br>=\sum_{i\le\lfloor\frac{n}{p_k}\rfloor}[i\text{是质数或者}i\text{最小的质因数}&gt;p_{k-1}]-\sum_{i\le\lfloor\frac{n}{p_k}\rfloor}[i\text{是质数且}i&lt;p_k]\\<br>=g(\lfloor\dfrac{n}{p_k}\rfloor,k-1)-\sum_{i=1}^{k-1}1<br>$$<br>所以<br>$$<br>g(n,k)=g(n,k-1)-g(\lfloor\dfrac{n}{p_k}\rfloor,k-1)+k-1<br>$$<br>显然，我们还可以得到三个不重要的东西：</p><ol><li><p>$k$可以视为$\sqrt{n}$级别的</p><p>证明：易证</p></li><li><p>当$p_k^2&gt;n$时<br>$$<br>g(n,k)=\sum_{i\in\mathrm{prime},i\le n}f(i)<br>$$</p></li><li><p>对于求一次$g(n,k)$</p><p>需要求的$g(n’,k’)$中$n’$取值个数是$\sqrt{n}$级别的</p><p>证明：对于$\lfloor\dfrac nx\rfloor$的取值个数是$\sqrt{n}$级别的</p></li></ol><p><del>我们可以预处理$k-1$的取值</del></p><p>我们可以离散化所有$\lfloor\dfrac nx\rfloor$的取值（就是知道$x$需要快速映射）</p><p>然后可以快乐的dp了</p><p>不过因为</p><p>如果$p_k^2&gt;n$，$g(n,k)=g(n,k-1)$</p><p>所以可以直接继承，就可以优化复杂度了。</p><p>最终答案就是$g(n,\sqrt{n}+1)$</p><p>考虑一个更难的式子<br>$$<br>\sum_{i\in\mathrm{prime},i\le n}i^c<br>$$<br>类似的<br>$$<br>g(n,k)=g(n,k-1)-p^c_k(g(\lfloor\dfrac{n}{p_k}\rfloor,k-1)+\sum_{i=1}^{k-1}p_i^c)<br>$$<br>预处理$\sum _i p_i^c$即可</p><p>如果求<br>$$<br>\sum_{i=1}^n \phi(i)<br>$$<br>将上面式子搬来，改一下：<br>$$<br>s(n,k)=\sum_{i\le n}f(i)[i\text{是质数}\color{red}\text{且}\color{black}\text{最小的质因数}\ge p_k]<br>$$<br>显然就是求$g(n,1)$</p><p>显然现在<br>$$<br>f(p^{c_1+c_2})\not= f(p^{c_1})f(p^{c_2})<br>$$<br>就不能那样算了</p><p>我们可以分质数和合数算，然后枚举最小质因数和次数即可<br>$$<br>s(n,k)=g(n,n)-\sum_{i=1}^{k-1}f(p_i)+\sum_{i\ge k}\sum_{j}(f(p_i^k)s(\lfloor\dfrac{n}{p_i^j},i+1\rfloor)+f(p_i^{j+1}))<br>$$</p>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> min25 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HNOI2017影魔</title>
      <link href="/2019/02/14/HNOI2017%E5%BD%B1%E9%AD%94/"/>
      <url>/2019/02/14/HNOI2017%E5%BD%B1%E9%AD%94/</url>
      <content type="html"><![CDATA[<blockquote><p>给定排列$k$，和贡献$p_1,p_2$，每次给定$l,r$，求：<br>$$<br>\sum_{l\le i&lt; j\le r}p_1[\max_{i&lt;x&lt;j}k_x&lt;k_i,k_j]+p_2([k_i&lt;\max_{i&lt;x&lt;j}k_x&lt;k_j]\mathrm{or}[k_j&lt;\max_{i&lt;x&lt;j}k_x&lt;k_i])<br>$$</p></blockquote><a id="more"></a><p>不妨分开计算，前一部分记为$Ap_1$，后一部分记为$Bp_2$</p><p>$p_1$产生的贡献次数就是$[l,r]$中满足区间端点是最大、次大值的区间个数。</p><p>不妨枚举次次大值（当然要考虑不存在的情况）<br>$$<br>A=r-l+\sum_{l\le i&lt; j\le r}[\max_{i&lt;x&lt;j}k_x&lt;k_i][\max_{i&lt;x&lt;j}k_x&lt;k_j]\\<br>=r-l+\sum_{l&lt;x&lt;r}\sum_{l\le i&lt;x}\sum_{x&lt;j\le r}[k_x&lt;k_i][k_x&lt;k_j][\max_{i&lt;y&lt;j}k_y=k_x]<br>$$<br>我们假设$M_x$为包含$x$且最大值为$k_x$的最长区间</p><p>于是<br>$$<br>A=r-l+\sum_{l&lt;x&lt;r}\sum_{l\le i&lt;x}\sum_{x&lt;k\le r}[k_x&lt;k_i][k_x&lt;k_j][[i+1,j-1]\subset M_x]<br>$$<br>显然，假如$[i+1,j-1]\not= M_x$，假如$[i,j-1]\subset M_x$于是$[k_x&lt;k_i]=0$，假如$[i+1,j]\subset M_x$于是$[k_x&lt;k_j]=0$</p><p>于是<br>$$<br>[[i+1,j-1]=M_x]=[k_x&lt;k_i][k_x&lt;k_j][[i+1,j-1]\subset M_x]<br>$$<br>所以<br>$$<br>A=r-l+\sum_{l&lt;x&lt;r}\sum_{l\le i&lt;x}\sum_{x&lt;k\le r}[[i+1,j-1]=M_x]\\<br>=r-l+\sum_{l&lt;x&lt;r}[M_x\subset[l+1,r-1]]<br>$$<br>求法接下来讲</p><p>接下来看$B$<br>$$<br>B=\sum_{l&lt;x&lt;r}\sum_{l\le i&lt;x}\sum_{x&lt;k\le r}[(k_i&lt;k_x&lt;k_j)\mathrm{or}(k_j&lt;k_x&lt;k_i)][[i+1,j-1]\subset M_x]<br>$$<br>显然<br>$$<br>[(k_i&lt;k_x&lt;k_j)\mathrm{or}(k_i&gt;k_x&gt;k_j)]\\<br>=[\mathrm{not}([k_x&gt;k_i][k_x&gt;k_j]\mathrm{or}[k_x&lt;k_x][k_x&lt;k_j])]\\<br>=[(\mathrm{not}([k_x&gt;k_i][k_x&gt;k_j]))\mathrm{or}(\mathrm{not}([k_x&lt;k_i][k_x&lt;k_j]))]\\<br>=1-[k_x&gt;k_i][k_x&gt;k_j]-[k_x&lt;k_i][k_x&lt;k_j]<br>$$<br>于是<br>$$<br>B=\sum_{l\le i&lt;x&lt;j\le r}<a href="1-[k_x&gt;k_i][k_x&gt;k_j]-[k_x&lt;k_i][k_x&lt;k_j]">[i+1,j-1]\subset M_x</a>\\<br>={r-l+1\choose3}-C-D<br>$$<br>显然<br>$$<br>C=A-(r-l)\\<br>D=\sum_{l\le i&lt;x&lt;j\le r}[[i,j]\subset M_x]<br>$$<br>那么假如$M_x=[a_x,b_x]$<br>$$<br>D=\sum_{l&lt;x&lt;r}(x-\max(a_x,l))(\min(b_x,r)-x)<br>$$<br>求和条件取等也行<br>$$<br>D=\sum_{l\le x\le r}(x-\max(a_x,l))(\min(b_x,r)-x)<br>$$<br>这时就要考虑一下$M$的性质了</p><p>假设，$M_0=M_{n+1}=[1,n]$</p><p>就有<br>$$<br>M_x\sub M_{a_x-1},M_x\sub M_{b_x+1}<br>$$<br>所以除了区间最大值，其它必定有$a_x\ge l$或$b_x\le r$</p><p>于是可以划分为两个小问题了</p><p>具体来说就是如果$[l,r]$从$m$分开，那么（$l’,r’$是询问区间）<br>$$<br>D_{l,r}=D_{l,m-1}+D_{m+1,r}+(m-l)(r-m)<br>$$<br>我们可以类似线段树和整体二分地搞</p><p>比如离散化后的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7 9 5 1 3 10 6 8 2 4</span><br></pre></td></tr></table></figure><p>它长这样（上面的数字时整颗子树被查询时的贡献，红边表示祖先中位置靠左的第一个点，蓝边表示靠右的第一个点（是父亲就不算））</p><p><img src="/home/huhao/blog/source/_posts/HNOI2017影魔/1.png" alt=""></p><p>然后查询时，显然，我们可以把它从中间断开</p><p>然后肯定是连续一段深度加大的，我们可以沿着有颜色/树边倍增（这自然有一前一后两个数组）</p><p>显然，这样计算十分方便。</p><p>至于$A$，考虑它有几项不行，显然，只要父亲在范围外，那么它的所有祖先都不行，让端点向上倍增就行了</p><p> 所以我们可以求出<br>$$<br>\mathrm{ans}=p_1A+p_2B\\<br>=p_1A+p_2({r-l+1\choose 3}-C-D)\\<br>=p_1A+p_2{r-l+1\choose 3}-p_2(A-(r-l))-p_2D\\<br>=(p_1-p_2)A+p_2{r-1+1\choose 3}+p_2(r-l)-p_2D<br>$$<br>中$A,D$取值</p><p>综上，可以在$O((n+m)\lg n)$的时间内求解！</p><p>然而因为码量问题（以及调试难度），无代码。</p>]]></content>
      
      
        <tags>
            
            <tag> HNOI </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>拓展lucas</title>
      <link href="/2019/02/13/exlucas/"/>
      <url>/2019/02/13/exlucas/</url>
      <content type="html"><![CDATA[<blockquote><p>给定$n,m,q$，求<br>$$<br>{n\choose m}\mathrm{mod}~q<br>$$</p></blockquote><a id="more"></a><p>显然，我们可以将$q$分解质因数<br>$$<br>q=\prod_{i}p_i^{c_i}<br>$$<br>然后求出<br>$$<br>{n\choose m}\mathrm{mod}~p_k^{c_k}<br>$$<br>然后crt求解即可</p><p>然而上面那个式子并不太好直接求……<br>$$<br>{n\choose m}\mathrm{mod}~p_k^{c_k}=\dfrac{n!}{m!(n-m)!}\mathrm{mod}~p_k^{c_k}<br>$$<br>显然，我们可以先把$n!,m!,(n-m)!$的$p_k$提出来，便可以逆元求了，$a!$中$p_k$的个数是<br>$$<br>g_k(a)=\sum_{i\ge1}\lfloor\dfrac{a}{p_k^i}\rfloor<br>$$<br>然后我们设<br>$$<br>f_k(a)=\dfrac{a!}{p_k^{g_{k}(a)}}\\c=c_k-g_k(a)+g_k(b)+g_k(a-b)<br>$$<br>于是<br>$$<br>{n\choose m}\mathrm{mod}~p_k^{c_k}=p_k^{c_k-c}(f_{p_k}(a)f_{p_k}^{-1}(b)f_{p_k}^{-1}(a-b)~\mathrm{mod}~p_k^c)<br>$$<br>考虑求$f_k$</p><p>显然$f_k$就是将$a!$中所有$k$给除掉<br>$$<br>f_k(a)=1\times2\times\dots\times\dfrac{k}{k}\times\dots\times\dfrac{2k}{k}\times\dots\times\dfrac{k^2}{k}\times\dots\times a\\<br>=(1\times2\times\dots\times(k-1)\times(k+1)\times\dots\times(2k-1)\times(2k+1)\times\dots\times a)\\\times(1\times2\times\dots\times\dfrac{k}{k}\times\dots\times\dfrac{2k}{k}\times\dots\times\dfrac{k^2}{k}\times\dots\times \lfloor\dfrac ak\rfloor)\\<br>=(\prod_{1\le i\le a,a\not|i}i)\times f_{k}(\lfloor\dfrac ak\rfloor)<br>$$<br>又因为<br>$$<br>\prod_{0&lt;i&lt;a}i\equiv\prod_{ka&lt;i&lt;(k+1)a}i(\mathrm{mod}~a)<br>$$<br>所以</p><p>$$<br>f_{k}(a)\equiv f_k(\lfloor\dfrac ak\rfloor)(\prod_{0&lt;i&lt;a}i)^{\lfloor\frac ak\rfloor}(\prod_{1\le i\le{a~\mathrm{mod}~k}}i)(\mathrm{mod}~k)<br>$$</p><p>于是就可以快速求解了！</p><p><a href="https://www.luogu.org/problemnew/show/P4720" target="_blank" rel="noopener">模板地址</a></p><p><a href="https://github.com/huhaoo/luogu/blob/master/4720.cpp" target="_blank" rel="noopener"><code>code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a,b,d,c[N],p[N],m[N],t,s[N],ans;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> &amp;x,<span class="keyword">long</span> <span class="keyword">long</span> &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!b)</span><br><span class="line">&#123;</span><br><span class="line">x=<span class="number">1</span>;</span><br><span class="line">y=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> g=exgcd(b,a%b,x,y),k;</span><br><span class="line">k=x;</span><br><span class="line">x=y;</span><br><span class="line">y=k-(a/b)*y;</span><br><span class="line"><span class="keyword">return</span> g;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">inv</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x,y;</span><br><span class="line">exgcd(a,b,x,y);</span><br><span class="line"><span class="keyword">return</span> (x%b+b)%b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">pow</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(b&lt;=<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> r=<span class="number">1</span>;</span><br><span class="line">a%=m;</span><br><span class="line"><span class="keyword">while</span>(b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">r=r*a%m;</span><br><span class="line">a=a*a%m;</span><br><span class="line">b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">calc</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> p,<span class="keyword">long</span> <span class="keyword">long</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(c&lt;=<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n=<span class="built_in">pow</span>(p,c,<span class="number">1l</span>l&lt;&lt;<span class="number">60</span>),r=<span class="number">1</span>,k=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;=p)</span><br><span class="line">r=r*calc(x/p,p,c)%n;</span><br><span class="line">fr(i,(x/n)*n+<span class="number">1</span>,x)</span><br><span class="line"><span class="keyword">if</span>(i%p!=<span class="number">0</span>)</span><br><span class="line">r=r*(i%n)%n;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span>(i%p!=<span class="number">0</span>)</span><br><span class="line">k=k*(i%n)%n;</span><br><span class="line"><span class="keyword">return</span> r*<span class="built_in">pow</span>(k,x/n,n)%n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">calc</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> r=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(x&gt;=p)</span><br><span class="line">&#123;</span><br><span class="line">x/=p;</span><br><span class="line">r+=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fr(i,<span class="number">2</span>,<span class="built_in">sqrt</span>(d))</span><br><span class="line"><span class="keyword">if</span>(d%i==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">t++;</span><br><span class="line">p[t]=i;</span><br><span class="line"><span class="keyword">while</span>(d%i==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">d/=i;</span><br><span class="line">c[t]++;</span><br><span class="line">&#125;</span><br><span class="line">_end_=<span class="built_in">sqrt</span>(d);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(d!=<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">t++;</span><br><span class="line">p[t]=d;</span><br><span class="line">c[t]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a=read();</span><br><span class="line">b=read();</span><br><span class="line">d=read();</span><br><span class="line">init(d);</span><br><span class="line">fr(i,<span class="number">1</span>,t)</span><br><span class="line">&#123;</span><br><span class="line">s[i]=<span class="built_in">pow</span>(p[i],c[i],<span class="number">1l</span>l&lt;&lt;<span class="number">60</span>);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> _c=c[i]-calc(a,p[i])+calc(b,p[i])+calc(a-b,p[i]);</span><br><span class="line">m[i]=calc(a,p[i],_c)*inv(calc(b,p[i],_c),s[i])%s[i]*inv(calc(a-b,p[i],_c),s[i])%s[i]*<span class="built_in">pow</span>(p[i],c[i]-_c,<span class="number">1l</span>l&lt;&lt;<span class="number">60</span>)%s[i];</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,t)</span><br><span class="line">ans=(ans+d/s[i]*inv(d/s[i],s[i])%d*m[i])%d;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> exlucas </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>类gcd算法</title>
      <link href="/2019/02/12/simgcd/"/>
      <url>/2019/02/12/simgcd/</url>
      <content type="html"><![CDATA[<blockquote><p>给定$n,a,b,c$，求：</p><p>$$<br>f_{n,a,b,c}=\sum_{i=0}^n\lfloor\dfrac{ai+b}c\rfloor\\<br>g_{n,a,b,c}=\sum_{i=0}^ni\lfloor\dfrac{ai+b}c\rfloor\\<br>h_{n,a,b,c}=\sum_{i=0}^n\lfloor\dfrac{ai+b}c\rfloor^2<br>$$</p></blockquote><a id="more"></a><p>先考虑 $f$</p><p>若 $a\ge c$ 或 $b\ge c$</p><p>那么设$ a=p_ac+q_a,b=p_bc+q_b$</p><p>$$<br>f_{n,a,b,c}=\sum_{i=0}^n\lfloor\dfrac{p_aci+q_ai+p_bc+q_b}{c}\rfloor=\sum_{i=0}^n\lfloor p_ai+p_b+\dfrac{q_ai+q_b}{c}\rfloor=\\\dfrac{n(n+1)}2p_a+(n+1)p_b+f_{n,q_a,q_b,c}<br>$$</p><p>显然只需考虑 $a,b&lt;c$</p><p><img src="simgcd/math1.png" alt="此处mathjax出了些问题"></p><p>太麻烦，记 $m=\lceil\dfrac{na-c+b+1}{c}\rceil-1$</p><p>$$<br>f_{n,a,b,c}=\sum_{0\le j\le m}(n-\lfloor\dfrac{cj+c-b-1}{a}\rfloor)\\=n(m+1)-\sum_{j=0}^m\lfloor\dfrac{cj+c-b-1}{a}\rfloor\\=n(m+1)-f_{m,c,c-b-1,a}<br>$$</p><p>当然，在 $an+b&lt;c$ 时， $f_{n,a,b,c}=0$</p><p>然后考虑 $g$</p><p>显然，先化为 $a,b&lt;c$</p><p>$$<br>g_{n,a,b,c}=\sum_{i=0}^ni\lfloor\dfrac {ai+b}c\rfloor=\sum_{i=0}^ni\lfloor\dfrac{p_aci+q_ai+p_bc+q_b}{c}\rfloor\\=\sum_{i=0}^ni(p_ai+p_b)+\lfloor\dfrac{q_ai+q_b}c\rfloor\\=\dfrac{i(i+1)(2i+1)}6p_a+\dfrac{i(i+1)}{2}p_b+g_{n,q_a,q_b,c}<br>$$</p><p>于是 $a,b&lt;c$</p><p>然后模仿 $f$</p><p>$$<br>g_{n,a,b,c}=\sum_{i=0}^ni\lfloor\dfrac{ai+b}c\rfloor=\sum_{0\le i\le n}\sum_{j\ge1}i[ai+b\ge cj]\\=\sum_{0\le i\le n}\sum_{j\ge0}i[ai+b\ge cj+c]=\sum_{j\ge0}\sum_{0\le i\le n}i[ai+b\ge cj+c]\\=\sum_{j\ge0}\sum_{0\le i\le n}i[ai&gt;cj+c-b-1]=\sum_{j\ge 0}\sum_{0\le i\le n}i[i&gt;\dfrac{cj+c-b-1}{a}]\\=\sum_{j\ge 0}\sum_{\frac{cj+c-b-1}a&lt;i\le n}i\\=\sum_{0\le j&lt;\frac{na-c+b+1}c}\dfrac{(n+\lfloor\frac{cj+c-b-1}{a}\rfloor+1)(n-\lfloor\frac{cj+c-b-1}a\rfloor)}2\\=\dfrac12\sum_{0\le j&lt;\frac{na-c+b+1}c}(n^2+n-\lfloor\frac{cj+c-b-1}{a}\rfloor^2-\lfloor\frac{cj+c-b-1}{a}\rfloor)<br>$$</p><p>记 $m=\lceil\dfrac{na-c+b+1}{c}\rceil-1$</p><p>$$<br>g_{n,a,b,c}=\dfrac12\sum_{0\le j\le m}(n^2+n-\lfloor\frac{cj+c-b-1}{a}\rfloor^2-\lfloor\frac{cj+c-b-1}{a}\rfloor)\\=\dfrac12((m+1)(n^2+n)-\sum_{0\le j\le m}\lfloor\frac{cj+c-b-1}{a}\rfloor^2-\sum_{0\le j\le m}\lfloor\frac{cj+c-b-1}{a}\rfloor)\\=\dfrac12((m+1)(n^2+n)-h_{m,c,c-b-1,a}-f_{m,c,c-b-1,a})<br>$$</p><p>出现了 $h$ ……先不管吧</p><p>最后推 $h$</p><p>按照惯例，先化为 $a,b&lt;c$</p><p>$$<br>h_{n,a,b,c}=\sum_{i=0}^n\lfloor\dfrac{ai+b}c\rfloor^2=\sum_{i=0}^n\lfloor\dfrac{p_aci+q_ai+p_bc+q_b}{c}\rfloor^2\\=\sum_{i=0}^n\lfloor p_ai+p_b+\dfrac{q_ai+q_b}{c}\rfloor^2=\sum_{i=0}^n(p_ai+p_b+\lfloor\dfrac{q_ai+q_b}{c}\rfloor)^2\\=\sum_{i=0}^n((p_ai+p_b)^2+2(p_ai+p_b)\lfloor\dfrac{q_ai+q_b}{c}\rfloor+\lfloor\dfrac{q_ai+q_b}{c}\rfloor^2)\\=\sum_{i=0}^n(p_a^2i^2+2p_ap_bi+p_b^2+2p_ai\lfloor\dfrac{q_ai+q_b}{c}\rfloor+2p_b\lfloor\dfrac{q_ai+q_b}{c}\rfloor+\lfloor\dfrac{q_ai+q_b}{c}\rfloor^2)\\=p_a^2\dfrac{n(n+1)(2n+1)}{6}+p_ap_bn(n+1)+(n+1)p_b^2+2p_ag_{n,q_a,q_b,c}+2p_bf_{n,q_a,q_b,c}+h_{n,q_a,q_b,c}<br>$$</p><p>然后当 $a,b&lt;c$ 时，发现 $x^2$ 太不好处理了！</p><p>于是我们上网找到了一种方法：</p><p>$$<br>x^2=2\sum_{i=0}^xi-x<br>$$</p><p>然后就可以开始（不）和谐地推算了</p><p>$$<br>h_{n,a,b,c}=\sum_{i=0}^n\lfloor\dfrac{ai+b}c\rfloor^2=\sum_{0\le i\le n}(2\sum_{0\le j\le \lfloor\frac{ai+b}c\rfloor}j-\lfloor\dfrac{ai+b}c\rfloor)\\=2\sum_{0\le i\le n}\sum_{0\le j\le\lfloor\frac{ai+b}c\rfloor}j-\sum_{0\le i\le n}\lfloor\dfrac{ai+b}c\rfloor\-\sum_{0\le i\le n}\lfloor\dfrac{ai+b}c\rfloor=-f_{n,a,b,c}\\\sum_{0\le i\le n}\sum_{0\le j\le \lfloor\frac{ai+b}c\rfloor}j=\sum_{j\ge 0}j\sum_{0\le i\le n}[j\le\lfloor\dfrac{ai+b}c\rfloor]\\=\sum_{j\ge 1}j\sum_{0\le i\le n}[cj-1&lt;ai+b]=\sum_{j\ge 0}(j+1)\sum_{0\le i\le n}[ai&gt;cj+c-b-1]\\=\sum_{j\ge0}(j+1)\sum_{0\le i\le n}[i&gt;\dfrac{cj+c-b-1}a]=\sum_{0\le j\le\lfloor\frac{an+b}c\rfloor-1}(j+1)(n-\lfloor\dfrac{cj+c-b-1}a\rfloor)\\=n\dfrac{\lfloor\frac{an+b}c\rfloor\lfloor\frac{an+b}c+1\rfloor}2-\sum_{j=0}^{\lfloor\frac{an+b}{c}\rfloor-1}(j+1)\lfloor\dfrac{cj+c-b-1}a\rfloor\\=n\dfrac{\lfloor\frac{an+b}c\rfloor\lfloor\frac{an+b}c+1\rfloor}2-g_{\lfloor\frac{an+b}c-1\rfloor,c,c-b-1,a}-f_{\lfloor\frac{an+b}c-1\rfloor,c,c-b-1,a}<br>$$</p><p>记 $m=\lfloor\dfrac{an+b}{c}\rfloor-1$ 于是</p><p>$$<br>h_{n,a,b,c}=n(m+1)(m+2)-2g_{m,c,c-b-1,a}-2f_{m,c,c-b-1,a}-f_{n,a,b,c}<br>$$</p><p>$g,h$ 边界与 $f$ 相同</p><p>复杂度：</p><p>显然，只考虑 $a,c$ ，它是这样变化的（ $h$ 稍微有些区别，不过多的是 $O(\lg n)$ 级别的）：</p><p>$$<br>(a,c)\rightarrow(c,a)\rightarrow(c~\mathrm{mod}~a,a)\rightarrow\dots<br>$$</p><p>是不是像极了gcd啊？</p><p>所以 $f$ 可以 $O(\lg n)$ 求， $g,h$ 因为内带 $f$ ，所以只能 $O(\lg^2n)$ 求</p><p>至于 $g,h$ 怎么 $O(\lg n)$ 求，只要把 $f,g,h$ 一起求就好了</p><p><a href="https://www.luogu.org/problemnew/show/P5170" target="_blank" rel="noopener">模板地址</a></p><p><a href="https://github.com/huhaoo/luogu/blob/master/5170.cpp" target="_blank" rel="noopener"><code>code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> p2 499122177</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> p6 166374059</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> n,<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> c,<span class="keyword">long</span> <span class="keyword">long</span> &amp;f,<span class="keyword">long</span> <span class="keyword">long</span> &amp;g,<span class="keyword">long</span> <span class="keyword">long</span> &amp;h,<span class="keyword">int</span> opt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> _f,_g,_h;</span><br><span class="line"><span class="keyword">if</span>(a*n+b&lt;c)</span><br><span class="line">&#123;</span><br><span class="line">f=g=h=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a&gt;=c||b&gt;=c)</span><br><span class="line">&#123;</span><br><span class="line">calc(n,a%c,b%c,c,_f,_g,_h,<span class="number">1</span>);</span><br><span class="line">f=(n*(n+<span class="number">1</span>)/<span class="number">2</span>%mod*(a/c)%mod+(n+<span class="number">1</span>)*(b/c)%mod+_f)%mod;</span><br><span class="line">g=(n*(n+<span class="number">1</span>)%mod*(n+n+<span class="number">1</span>)%mod*p6%mod*(a/c)%mod+n*(n+<span class="number">1</span>)/<span class="number">2</span>%mod*(b/c)%mod+_g)%mod;</span><br><span class="line">h=((a/c)*(a/c)%mod*n%mod*(n+<span class="number">1</span>)%mod*(n+n+<span class="number">1</span>)%mod*p6%mod+(a/c)*(b/c)%mod*n%mod*(n+<span class="number">1</span>)%mod+(n+<span class="number">1</span>)*(b/c)%mod*(b/c)%mod+<span class="number">2</span>*(a/c)*_g%mod+<span class="number">2</span>*(b/c)*_f%mod+_h)%mod;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> m=(n*a+b)/c<span class="number">-1</span>;</span><br><span class="line">calc(m,c,c-b<span class="number">-1</span>,a,_f,_g,_h,<span class="number">1</span>);</span><br><span class="line">f=(n*(m+<span class="number">1</span>)%mod-_f+mod)%mod;</span><br><span class="line">g=((m+<span class="number">1</span>)*(n+<span class="number">1</span>)%mod*n%mod-_h-_f+mod+mod)*p2%mod;</span><br><span class="line">h=(n*(m+<span class="number">1</span>)%mod*(m+<span class="number">2</span>)%mod<span class="number">-2</span>*_g<span class="number">-2</span>*_f-f+<span class="number">5l</span>l*mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> t,n,a,b,c,f,g,h;</span><br><span class="line">t=read();</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line">n=read();</span><br><span class="line">a=read();</span><br><span class="line">b=read();</span><br><span class="line">c=read();</span><br><span class="line">calc(n,a,b,c,f,g,h,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld %lld %lld\n"</span>,f,h,g);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> 类gcd </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>kruskal重构树|NOI2018归程</title>
      <link href="/2019/02/11/kruskalret/"/>
      <url>/2019/02/11/kruskalret/</url>
      <content type="html"><![CDATA[<p>kruskal重构树用来解决一些最小生成树的各种问题</p><a id="more"></a><p>显然，先要把最小生成树求出来（尽管实际上并不需要）</p><p><img src="/home/huhao/blog/source/_posts/kruskalret/1.png" alt=""></p><p>然后将这些边从小到大以此处理（相同就任意）</p><ol><li>每次找出两端对应联通块的根</li><li>新建一个节点，与两个根相连</li><li>记为整个联通块的根</li></ol><p>上面步骤连的边，就变为了一棵树（$2n-1$个节点的$2$叉树）。</p><p><img src="kruskalret/3.png" alt=""></p><p><img src="" alt=""></p><p>基本代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> u==f[u]?u:(f[u]=get(f[u]));</span><br><span class="line">&#125;<span class="comment">//并查集找根</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">()</span></span>&#123;...&#125;<span class="comment">//根据权值排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sort();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> fu=get(u[i]),fv=get(v[i]);</span><br><span class="line">        <span class="keyword">if</span>(fu!=fv)<span class="comment">//在最小生成树中</span></span><br><span class="line">        &#123;</span><br><span class="line">            s++;</span><br><span class="line">            f[fu]=s;</span><br><span class="line">            f[fv]=s;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>模板：<a href="https://www.luogu.org/problemnew/show/P4768" target="_blank" rel="noopener">NOI2018归程</a></p><p>显然，根据水位线从大至小建立kruskal重构树，每个点存到$1$号节点的最小距离，然后倍增查询</p><p><a href="https://github.com/huhaoo/luogu/blob/master/4768.cpp" target="_blank" rel="noopener"><code>code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">namespace</span> run</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 800010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> l 20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf ((int)((1ll&lt;&lt;31)-1))</span></span><br><span class="line"><span class="keyword">int</span> n,m,begin[N],next[N],to[N],e,w[N],p[N],d[N],g[N],t,f[N][l+<span class="number">5</span>],a[N][l+<span class="number">5</span>],v[N],s,o,ans,ms;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> W)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e++;</span><br><span class="line">next[e]=begin[u];</span><br><span class="line">begin[u]=e;</span><br><span class="line">to[e]=v;</span><br><span class="line">w[e]=W;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fo(i,a) for(int i=begin[a];i;i=next[i])</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">road</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,v,w,a;</span><br><span class="line">road(<span class="keyword">int</span> U=<span class="number">0</span>,<span class="keyword">int</span> V=<span class="number">0</span>,<span class="keyword">int</span> W=<span class="number">0</span>,<span class="keyword">int</span> A=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">u=U;</span><br><span class="line">v=V;</span><br><span class="line">w=W;</span><br><span class="line">a=A;</span><br><span class="line">&#125;</span><br><span class="line">&#125;r[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">dij</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,d;</span><br><span class="line">dij(<span class="keyword">int</span> U=<span class="number">0</span>,<span class="keyword">int</span> D=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">u=U;</span><br><span class="line">d=D;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(dij a,dij b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> a.d&gt;b.d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> u==p[u]?u:(p[u]=get(p[u]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(road a,road b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.a&gt;b.a;</span><br><span class="line">&#125;</span><br><span class="line">priority_queue&lt;dij&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">m=read();</span><br><span class="line">e=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">begin[i]=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,m)</span><br><span class="line">&#123;</span><br><span class="line">r[i].u=read();</span><br><span class="line">r[i].v=read();</span><br><span class="line">r[i].w=read();</span><br><span class="line">r[i].a=read();</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,n*<span class="number">2</span><span class="number">-1</span>)</span><br><span class="line">p[i]=i;</span><br><span class="line">sort(r+<span class="number">1</span>,r+m+<span class="number">1</span>,cmp);</span><br><span class="line">t=n;</span><br><span class="line">fr(i,<span class="number">1</span>,m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> fu=get(r[i].u),fv=get(r[i].v);</span><br><span class="line"><span class="keyword">if</span>(fu!=fv)</span><br><span class="line">&#123;</span><br><span class="line">t++;</span><br><span class="line">p[fu]=t;</span><br><span class="line">p[fv]=t;</span><br><span class="line">f[fu][<span class="number">0</span>]=t;</span><br><span class="line">f[fv][<span class="number">0</span>]=t;</span><br><span class="line">a[fu][<span class="number">0</span>]=r[i].a;</span><br><span class="line">a[fv][<span class="number">0</span>]=r[i].a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fr(j,<span class="number">1</span>,l)</span><br><span class="line">fr(i,<span class="number">1</span>,t)</span><br><span class="line">&#123;</span><br><span class="line">f[i][j]=f[f[i][j<span class="number">-1</span>]][j<span class="number">-1</span>];</span><br><span class="line">a[i][j]=min(a[i][j<span class="number">-1</span>],a[f[i][j<span class="number">-1</span>]][j<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,m)</span><br><span class="line">&#123;</span><br><span class="line">add(r[i].u,r[i].v,r[i].w);</span><br><span class="line">add(r[i].v,r[i].u,r[i].w);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">q.pop();</span><br><span class="line">fr(i,<span class="number">2</span>,t)</span><br><span class="line">d[i]=inf;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">v[i]=<span class="number">0</span>;</span><br><span class="line">d[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">q.push(dij(<span class="number">1</span>,<span class="number">0</span>));</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=q.top().u;</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">if</span>(v[u])</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">v[u]=<span class="number">1</span>;</span><br><span class="line">fo(i,u)</span><br><span class="line"><span class="keyword">if</span>(d[u]+w[i]&lt;d[to[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[to[i]]=d[u]+w[i];</span><br><span class="line">q.push(dij(to[i],d[to[i]]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,t<span class="number">-1</span>)</span><br><span class="line">d[f[i][<span class="number">0</span>]]=min(d[f[i][<span class="number">0</span>]],d[i]);</span><br><span class="line">s=read();</span><br><span class="line">o=read();</span><br><span class="line">ms=read();</span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(s--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> v=read(),p=read();</span><br><span class="line">v=(v+o*ans<span class="number">-1</span>)%n+<span class="number">1</span>;</span><br><span class="line">p=(p+o*ans)%(ms+<span class="number">1</span>);</span><br><span class="line">fd(i,l,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span>(f[v][i]&amp;&amp;a[v][i]&gt;p)</span><br><span class="line">v=f[v][i];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans=d[v]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fr(t,<span class="number">1</span>,read())</span><br><span class="line">run::main();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> NOI </tag>
            
            <tag> kruskal重构树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>NOI2018屠龙勇士</title>
      <link href="/2019/02/10/NOI2018d2t1/"/>
      <url>/2019/02/10/NOI2018d2t1/</url>
      <content type="html"><![CDATA[<blockquote><p>一个可重集合$A$，初始$m$个元素，进行$n$次操作，有两个个数列$h_{1\dots n},b_{1\dots n}$。第$i$次在$A$中选出一个元素$a_i$：若$A$中存在不大于$h_i$的元素，$a_i$就等于$A$中不大于$h_i$的最大的数，若不存在，$a_i$等于$A$中最小的数。选好$a_i$后，在$A$中删掉一个（若有不止一个）$a_i$并且向$A$中加入$b_i$。</p><p>然后你还有一个数列$p_{1\dots n}$，求最小的$x$，使得对于所有$i$<br>$$<br>h_i-a_ix\le0,(-h_i+a_ix)\mathrm{mod}~p_i=0<br>$$<br>输入顺序：$n~m~h_{1\dots n}~p_{1\dots n}~b_{1\dots n}~A_{1\dots m}$</p></blockquote><a id="more"></a><p>显然，$a_i$可以轻易得出</p><p>把条件分开考虑。<br>$$<br>\forall i,h_i-a_ix\le0\\<br>\forall i,a_ix\ge h_i\\<br>\forall i,x\ge \dfrac {h_i}{a_i}<br>$$<br>前面的条件即<br>$$<br>x\ge\max_{i=0}^n\dfrac{h_i}{a_i}<br>$$<br>现在主要考虑后面的条件。</p><p>发现可以变成<br>$$<br>\forall i,a_ix\equiv h_i(\mathrm{mod}~p_i)<br>$$<br>考虑处理一下<br>$$<br>a_ix\equiv h_i(\mathrm{mod}~p_i)<br>$$<br>若$\gcd(a_i,p_i)=1$显然，可以转换为<br>$$<br>x\equiv h_ia_i^{-1}(\mathrm{mod}~p_i)<br>$$<br>若$\gcd(a_i,p_i)\not=1$，记$g=\gcd(a_i,p_i)$</p><p>若$g\not|h_i$，显然无解</p><p>否则可以转换为：<br>$$<br>\dfrac{a_i}g x\equiv\dfrac{h_i}g(\mathrm{mod}~\dfrac{p_i}g)<br>$$<br>就用上面方法：<br>$$<br>x\equiv(\dfrac{h_i}g)(\dfrac{a_i}g)^{-1}(\mathrm{mod}~\dfrac{p_i}g)<br>$$</p><p>可以用<a href="https://huhaoo.github.io/2019/02/10/excrt/">excrt</a>得出<br>$$<br>x\equiv a(\mathrm{mod}~p)<br>$$<br>中的$a,p$</p><p>然后就可以得出<br>$$<br>x_{\min}=a+p\lceil\dfrac{\lceil\max_{i=0}^n\frac{h_i}{a_i}\rceil-a}p\rceil<br>$$</p><p><a href="https://github.com/huhaoo/luogu/blob/master/4774.cpp" target="_blank" rel="noopener"><code>code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> T,n,m;</span><br><span class="line">__int128 h[N],p[N],b[N],a[N],ans;</span><br><span class="line"><span class="built_in">multiset</span>&lt;__int128&gt;A;</span><br><span class="line">__<span class="function">int128 <span class="title">exgcd</span><span class="params">(__int128 a,__int128 b,__int128 &amp;x,__int128 &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!b)</span><br><span class="line">&#123;</span><br><span class="line">x=<span class="number">1</span>;</span><br><span class="line">y=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line">__int128 g=exgcd(b,a%b,x,y),k;</span><br><span class="line">k=x;</span><br><span class="line">x=y;</span><br><span class="line">y=k-(a/b)*y;</span><br><span class="line"><span class="keyword">return</span> g;</span><br><span class="line">&#125;</span><br><span class="line">__<span class="function">int128 <span class="title">gcd</span><span class="params">(__int128 a,__int128 b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> b?gcd(b,a%b):a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">T=read();</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">&#123;</span><br><span class="line">A.clear();</span><br><span class="line">A.insert(<span class="number">0</span>);</span><br><span class="line">n=read();</span><br><span class="line">m=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">h[i]=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">p[i]=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">b[i]=read();</span><br><span class="line">fr(i,<span class="number">1</span>,m)</span><br><span class="line">A.insert(-read());</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">multiset</span>&lt;__int128&gt;::iterator it=A.lower_bound(-h[i]);</span><br><span class="line"><span class="keyword">if</span>(*it==<span class="number">0</span>)</span><br><span class="line">it--;</span><br><span class="line">a[i]=-*it;</span><br><span class="line">A.erase(it);</span><br><span class="line">A.insert(-b[i]);</span><br><span class="line">&#125;</span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">ans=max(ans,(h[i]+a[i]<span class="number">-1</span>)/a[i]);</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">__int128 g=gcd(a[i],p[i]),x,y;</span><br><span class="line"><span class="keyword">if</span>(g!=<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(h[i]%g)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line"><span class="keyword">goto</span> end;</span><br><span class="line">&#125;</span><br><span class="line">h[i]/=g;</span><br><span class="line">a[i]/=g;</span><br><span class="line">p[i]/=g;</span><br><span class="line">&#125;</span><br><span class="line">exgcd(a[i],p[i],x,y);</span><br><span class="line">a[i]=x;</span><br><span class="line">a[i]=(a[i]*h[i]%p[i]+p[i])%p[i];</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">2</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">__int128 g=gcd(p[<span class="number">1</span>],p[i]),k1,ki;</span><br><span class="line"><span class="keyword">if</span>((a[i]-a[<span class="number">1</span>])%g)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line"><span class="keyword">goto</span> end;</span><br><span class="line">&#125;</span><br><span class="line">exgcd(p[<span class="number">1</span>],p[i],k1,ki);</span><br><span class="line">k1*=(a[i]-a[<span class="number">1</span>])/g;</span><br><span class="line">a[<span class="number">1</span>]=k1*p[<span class="number">1</span>]+a[<span class="number">1</span>];</span><br><span class="line">p[<span class="number">1</span>]*=p[i]/g;</span><br><span class="line">a[<span class="number">1</span>]=(a[<span class="number">1</span>]%p[<span class="number">1</span>]+p[<span class="number">1</span>])%p[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(<span class="keyword">long</span> <span class="keyword">long</span>)(a[<span class="number">1</span>]+p[<span class="number">1</span>]*((ans-a[<span class="number">1</span>]+p[<span class="number">1</span>]<span class="number">-1</span>)/p[<span class="number">1</span>])));</span><br><span class="line">end:;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> NOI </tag>
            
            <tag> excrt </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>excrt</title>
      <link href="/2019/02/10/excrt/"/>
      <url>/2019/02/10/excrt/</url>
      <content type="html"><![CDATA[<blockquote><p>给定$n$组非负整数$a_i,b_i$，求最小$x$使<br>$$<br>\forall i,x\equiv b_i(\mathrm{mod}~a_i)<br>$$<br>数据保证有解</p></blockquote><a id="more"></a><p>当$n=2$时，条件为<br>$$<br>\cases{x\equiv b_1(\mathrm{mod}~a_1)\\x\equiv b_2(\mathrm{mod}~a_2)}<br>$$<br>显然存在整数$k_1,k_2$<br>$$<br>x=k_1a_1+b_1=k_2a_2+b_2<br>$$<br>那么<br>$$<br>a_1k_1+a_2(-k_2)=(b_2-b_1)<br>$$<br>若$\gcd(a_1,a_2)\not|(b_2-b_1)$，则无解</p><p>否则可以用<a href="https://huhaoo.github.io/2019/02/10/exgcd">exgcd</a>求$k$</p><p>可以求出当<br>$$<br>x\equiv k_1a_1+b_1(\mathrm{mod}~\mathrm{lcm}(a_1,a_2))<br>$$<br>发现变回同样的形式了，依次求解即可。</p><p><a href="https://www.luogu.org/problemnew/show/P4777" target="_blank" rel="noopener">例题</a></p><p><a href="https://github.com/huhaoo/luogu/blob/master/4777.cpp" target="_blank" rel="noopener"><code>code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">__int128 n;</span><br><span class="line">__int128 a1,a2,b1,b2,k1,k2,g;</span><br><span class="line">__<span class="function">int128 <span class="title">exgcd</span><span class="params">(__int128 a,__int128 b,__int128 &amp;x,__int128 &amp;y)</span><span class="comment">//ax+by=gcd(a,b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!b)</span><br><span class="line">&#123;</span><br><span class="line">x=<span class="number">1</span>;</span><br><span class="line">y=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line">__int128 g=exgcd(b,a%b,x,y),k;</span><br><span class="line">k=x;</span><br><span class="line">x=y;</span><br><span class="line">y=k-(a/b)*y;</span><br><span class="line"><span class="keyword">return</span> g;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read()<span class="number">-1</span>;</span><br><span class="line">a1=read();</span><br><span class="line">b1=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">a2=read();</span><br><span class="line">b2=read();</span><br><span class="line">g=exgcd(a1,a2,k1,k2);</span><br><span class="line"><span class="comment">//k2=-k2;</span></span><br><span class="line">k1*=(b2-b1)/g;</span><br><span class="line"><span class="comment">//k2*=(b2-b1)/g;</span></span><br><span class="line">b1=k1*a1+b1;</span><br><span class="line">a1*=a2/g;</span><br><span class="line">b1=(b1%a1+a1)%a1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(<span class="keyword">long</span> <span class="keyword">long</span>)(b1));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> excrt </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>exgcd</title>
      <link href="/2019/02/10/exgcd/"/>
      <url>/2019/02/10/exgcd/</url>
      <content type="html"><![CDATA[<blockquote><p>给定$a,b$，求$x,y$，使得$ax+by=\gcd(a,b)$</p></blockquote><a id="more"></a><p>显然，因为名字叫exgcd，显然与gcd有关。</p><p>考虑像gcd一样递归求解。</p><p>若已经求出$x’,y’$，使得$bx’+(a~\mathrm{mod}~b)y’=\gcd(a,b)$</p><p>则<br>$$<br>bx’+(a-\lfloor \dfrac ab\rfloor b)y’=\gcd(a,b)\\<br>ay’+b(x’-\lfloor\dfrac ab\rfloor y’)=\gcd(a,b)<br>$$<br>即<br>$$<br>\cases{x=y’\\y=x’-\lfloor\dfrac ab\rfloor y’}<br>$$<br>考虑边界，显然当$b=0$时有$x=1,y=0$。</p>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> exgcd </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CF1100的ABCF题解</title>
      <link href="/2019/01/14/CF1100/"/>
      <url>/2019/01/14/CF1100/</url>
      <content type="html"><![CDATA[<p>DE比赛时没弄出来，我好菜啊。</p><p>于是只有ABCF的题解</p><a id="more"></a><h4 id="A"><a href="#A" class="headerlink" title="A"></a>A</h4><p>枚举。</p><p><a href="https://github.com/huhaoo/codeforces/blob/master/problems/1100A.cpp" target="_blank" rel="noopener"><code>code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1010</span></span><br><span class="line"><span class="keyword">int</span> a[N],n,k,s0,s1,a0,a1,ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">k=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">a[i]=read();</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="number">1</span>)</span><br><span class="line">s1++;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">s0++;</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">a0=s0;</span><br><span class="line">a1=s1;</span><br><span class="line">fr(j,<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span>(i%k==j%k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j]==<span class="number">1</span>)</span><br><span class="line">a1--;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">a0--;</span><br><span class="line">&#125;</span><br><span class="line">ans=max(ans,<span class="built_in">abs</span>(a1-a0));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="B"><a href="#B" class="headerlink" title="B"></a>B</h4><p>用一个数组记录，维护非$0$的位置的个数。</p><p><a href="https://github.com/huhaoo/codeforces/blob/master/problems/1100B.cpp" target="_blank" rel="noopener"><code>code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 400010</span></span><br><span class="line"><span class="keyword">int</span> n,m,a,t[N],s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">m=read();</span><br><span class="line">fr(i,<span class="number">1</span>,m)</span><br><span class="line">&#123;</span><br><span class="line">a=read();</span><br><span class="line"><span class="keyword">if</span>(!t[a])</span><br><span class="line">s++;</span><br><span class="line">t[a]++;</span><br><span class="line"><span class="keyword">if</span>(s==n)</span><br><span class="line">&#123;</span><br><span class="line">s=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'1'</span>);</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">t[i]--;</span><br><span class="line"><span class="keyword">if</span>(t[i])</span><br><span class="line">s++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="C"><a href="#C" class="headerlink" title="C"></a>C</h4><p>容易发现：<br>$$<br>R=r\sin(\dfrac\pi n)/(1-\sin(\dfrac\pi n))<br>$$<br><a href="https://github.com/huhaoo/codeforces/blob/master/problems/1100C.cpp" target="_blank" rel="noopener"><code>code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> n,r;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=<span class="number">1.</span>*read();</span><br><span class="line">r=<span class="number">1.</span>*read();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.10lf\n"</span>,r*<span class="built_in">sin</span>(<span class="built_in">acos</span>(<span class="number">-1.</span>)/n)/(<span class="number">1</span>-<span class="built_in">sin</span>(<span class="built_in">acos</span>(<span class="number">-1.</span>)/n)));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="F"><a href="#F" class="headerlink" title="F"></a>F</h4><p>首先先要会线性基（插入，查询，合并都要）</p><p>然后可以发现：</p><p>如果处理出了一个点$mid$向左和向右的线性基（分别处理到了$l,r$），那么询问$a,b$可以根据这处理出来的条件是$l\le a\le mid\le b\le r$，并且可以直接合并$a\rightarrow mid$和$mid\rightarrow b$直接求</p><p>显然每次切中点是最优的</p><p>那么可以整体二分。</p><p><a href="https://github.com/huhaoo/codeforces/blob/master/problems/1100F.cpp" target="_blank" rel="noopener"><code>code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1000010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B 25</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> n,q,ans[N],v[N],b=<span class="number">20</span>,lx[N][B],rx[N][B],ax[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> *x,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fd(i,b,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span>(v&gt;=(<span class="number">1</span>&lt;&lt;i))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!x[i])</span><br><span class="line">&#123;</span><br><span class="line">x[i]=v;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">v^=x[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> *x,<span class="keyword">int</span> *y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(rand()&amp;<span class="number">1</span>)</span><br><span class="line">swap(x,y);</span><br><span class="line">fr(i,<span class="number">0</span>,b)</span><br><span class="line">ax[i]=x[i];</span><br><span class="line">fd(i,b,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span>(y[i])</span><br><span class="line">insert(ax,y[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">query</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r,p;</span><br><span class="line">&#125;a[N],_a[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> ll,<span class="keyword">int</span> rr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(ll&gt;rr)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>,p1,p2,p3;</span><br><span class="line">fr(i,ll,rr)</span><br><span class="line">_a[i]=a[i];</span><br><span class="line">p1=ll<span class="number">-1</span>;</span><br><span class="line">fr(i,ll,rr)</span><br><span class="line"><span class="keyword">if</span>(_a[i].r&lt;mid)</span><br><span class="line">a[++p1]=_a[i];</span><br><span class="line">p2=p1;</span><br><span class="line">fr(i,ll,rr)</span><br><span class="line"><span class="keyword">if</span>(_a[i].r&gt;=mid&amp;&amp;_a[i].l&lt;=mid)</span><br><span class="line">a[++p2]=_a[i];</span><br><span class="line">p3=p2;</span><br><span class="line">fr(i,ll,rr)</span><br><span class="line"><span class="keyword">if</span>(_a[i].l&gt;mid)</span><br><span class="line">a[++p3]=_a[i];</span><br><span class="line"><span class="keyword">if</span>(p1!=p2)</span><br><span class="line">&#123;</span><br><span class="line">fr(i,<span class="number">0</span>,b)</span><br><span class="line">lx[mid][i]=rx[mid][i]=<span class="number">0</span>;</span><br><span class="line">insert(lx[mid],v[mid]);</span><br><span class="line">fd(i,mid<span class="number">-1</span>,l)</span><br><span class="line">&#123;</span><br><span class="line">fr(j,<span class="number">0</span>,b)</span><br><span class="line">lx[i][j]=lx[i+<span class="number">1</span>][j];</span><br><span class="line">insert(lx[i],v[i]);</span><br><span class="line">&#125;</span><br><span class="line">fr(i,mid+<span class="number">1</span>,r)</span><br><span class="line">&#123;</span><br><span class="line">fr(j,<span class="number">0</span>,b)</span><br><span class="line">rx[i][j]=rx[i<span class="number">-1</span>][j];</span><br><span class="line">insert(rx[i],v[i]);</span><br><span class="line">&#125;</span><br><span class="line">fr(i,p1+<span class="number">1</span>,p2)</span><br><span class="line">&#123;</span><br><span class="line">merge(lx[a[i].l],rx[a[i].r]);</span><br><span class="line">fd(j,b,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span>((ans[a[i].p]^ax[j])&gt;ans[a[i].p])</span><br><span class="line">ans[a[i].p]^=ax[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">calc(l,mid<span class="number">-1</span>,ll,p1);</span><br><span class="line">calc(mid+<span class="number">1</span>,r,p2+<span class="number">1</span>,rr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>)<span class="keyword">new</span> <span class="keyword">char</span>);</span><br><span class="line">n=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">v[i]=read();</span><br><span class="line">q=read();</span><br><span class="line">fr(i,<span class="number">1</span>,q)</span><br><span class="line">&#123;</span><br><span class="line">a[i].l=read();</span><br><span class="line">a[i].r=read();</span><br><span class="line">a[i].p=i;</span><br><span class="line">&#125;</span><br><span class="line">calc(<span class="number">1</span>,n,<span class="number">1</span>,q);</span><br><span class="line">fr(i,<span class="number">1</span>,q)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> CF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CF1045H Self-exploration</title>
      <link href="/2019/01/09/CF1045H/"/>
      <url>/2019/01/09/CF1045H/</url>
      <content type="html"><![CDATA[<blockquote><p>求在$[A,B]$区间内有多少数满足在二进制下：</p><ul><li>子串$00$的个数为$c_{00}$。</li><li>子串$01$的个数为$c_{01}$。</li><li>子串$10$的个数为$c_{10}$。</li><li>子串$11$的个数为$c_{11}$。 答案对$10^9+7$取模。</li></ul><p>$1\le A\le B\le 2^{10^5}, 0 \le c_{00}, c_{01}, c_{10}, c_{11} \le 10^5$</p></blockquote><a id="more"></a><p>首先，符合条件的数（记为$x$）肯定是$l=1+\sum_i c_i$位数</p><p>然后首位肯定是$1$（鬼都知道）</p><p>然后我们就可以用$l-1$个$00,01,10,11$（记为$a,b,c,d$）表示（即这一位和前面那位）</p><p>然后第一个肯定是$c,d$接下来就是<br>$$<br>a,c\rightarrow a,b\\<br>b,d\rightarrow c,d<br>$$<br>我们就可以得到这$l-1$个字符连起来长这样<br>$$<br>…(d)…c…(a)…b…(d)…c…(a)…b…<br>$$<br>然后我们知道：把$n$有序（即顺序不同算不同方案）地分为$k$个可以为$0$数，方案为$n+k-1\choose n-1$</p><p>把$A,B$分别考虑，如果位数大于$l$，就是<br>$$<br>{c_{11}+c_{01}\choose c_{11}-1}{c_{00}+c_{10}-1\choose c_{00}-1}<br>$$<br>如果位数小于$l$，就是$0$</p><p>否则，考虑$A$（或$B$）每一位，如果是$0$，那么没选择，直接对应的$c$减$1$</p><p>如果是$1$，那么$x$这一位选$0$就没有限制了！可以和上面差不多地算</p><p>选$1$就给此时对应的$c$减$1$，然后继续看下面的位</p><p>最后考虑一下$A,B​$即可</p><p><a href="https://github.com/huhaoo/codeforces/blob/master/problems/1045H.cpp" target="_blank" rel="noopener"><code>my code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="keyword">char</span> x[N],y[N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a,b,c,d;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> f[N],pf[N],n;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">C</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> f[a]*pf[b]%mod*pf[a-b]%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">calc</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> a==<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> C(a+b<span class="number">-1</span>,b<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">calc</span><span class="params">(<span class="keyword">char</span> *s,<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> c,<span class="keyword">long</span> <span class="keyword">long</span> d,<span class="keyword">long</span> <span class="keyword">long</span> op)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(s[<span class="number">1</span>]==<span class="string">'0'</span>)</span><br><span class="line">s++;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> l=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(l&lt;=a+b+c+d)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(b!=c&amp;&amp;b+<span class="number">1</span>!=c)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(l&gt;a+b+c+d+<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> calc(d,b+<span class="number">1</span>)*calc(a,c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> r=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">2</span>,l)</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">'0'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i<span class="number">-1</span>]==<span class="string">'0'</span>)</span><br><span class="line">a--;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">c--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i<span class="number">-1</span>]==<span class="string">'0'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a&gt;<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span>(b==c||b==c+<span class="number">1</span>)</span><br><span class="line">r=(r+calc(d,b)*calc(a<span class="number">-1</span>,c+<span class="number">1</span>))%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(c&gt;<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span>(b+<span class="number">1</span>==c||b==c)</span><br><span class="line">&#123;</span><br><span class="line">r=(r+calc(d,b)*calc(a,c))%mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(s[i<span class="number">-1</span>]==<span class="string">'0'</span>)</span><br><span class="line">b--;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">d--;</span><br><span class="line"><span class="keyword">if</span>(a&lt;<span class="number">0</span>||b&lt;<span class="number">0</span>||c&lt;<span class="number">0</span>||d&lt;<span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> (r+(a==<span class="number">0</span>&amp;&amp;b==<span class="number">0</span>&amp;&amp;c==<span class="number">0</span>&amp;&amp;d==<span class="number">0</span>)*op)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">pow</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> r=<span class="number">1</span>;</span><br><span class="line">a%=m;</span><br><span class="line"><span class="keyword">while</span>(b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">r=r*a%m;</span><br><span class="line">a=a*a%m;</span><br><span class="line">b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,x+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,y+<span class="number">1</span>);</span><br><span class="line">a=read();</span><br><span class="line">b=read();</span><br><span class="line">c=read();</span><br><span class="line">d=read();</span><br><span class="line">n=<span class="number">100001</span>;</span><br><span class="line">f[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">f[i]=f[i<span class="number">-1</span>]*i%mod;</span><br><span class="line">pf[n]=<span class="built_in">pow</span>(f[n],mod<span class="number">-2</span>,mod);</span><br><span class="line">fd(i,n<span class="number">-1</span>,<span class="number">0</span>)</span><br><span class="line">pf[i]=pf[i+<span class="number">1</span>]*(i+<span class="number">1</span>)%mod;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(calc(y,a,b,c,d,<span class="number">1</span>)-calc(x,a,b,c,d,<span class="number">0</span>)+mod)%mod);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> CF </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu5175数列</title>
      <link href="/2019/01/07/luogu5175/"/>
      <url>/2019/01/07/luogu5175/</url>
      <content type="html"><![CDATA[<blockquote><p>$$<br>a_i=xa_{i-1}+ya_{i-2}\\<br>\mathrm{ans}=\sum_{i=1}^{n}a_{i}^2<br>$$</p></blockquote><a id="more"></a><p>$$<br>a_i^2=(xa_{i-1}+ya_{i-2})^2=x^2a_{i-1}^2+y^2a_{i-2}^2+2xya_{i-1}a_{i-2}\\<br>a_{i}a_{i-1}=(xa_{i-1}+ya_{i-2})a_{i-1}=xa_{i-1}^2+ya_{i-1}a_{i-2}\\<br>$$<br>所以<br>$$<br>\begin{bmatrix}<br>0&amp;1&amp;0&amp;0\\<br>y^2&amp;x^2&amp;2xy&amp;0\\<br>0&amp;x&amp;y&amp;0\\<br>1&amp;0&amp;0&amp;1<br>\end{bmatrix}<br>\begin{bmatrix}<br>a_{i-2}^2\\<br>a_{i-1}^2\\<br>a_{i-2}a_{i-1}\\<br>\sum_{j=1}^{i-3}a_j^2<br>\end{bmatrix}<br>=<br>\begin{bmatrix}<br>a_{i-1}^2\\<br>a_i^2\\<br>a_{i-1}a_i\\<br>\sum_{j=1}^{i-2}a_j^2<br>\end{bmatrix}<br>$$</p><p>$$<br>\begin{bmatrix}<br>0&amp;1&amp;0&amp;0\\<br>y^2&amp;x^2&amp;2xy&amp;0\\<br>0&amp;x&amp;y&amp;0\\<br>1&amp;0&amp;0&amp;1<br>\end{bmatrix}^n<br>\begin{bmatrix}<br>a_1^2\\<br>a_2^2\\<br>a_1a_2\\<br>0<br>\end{bmatrix}<br>=<br>\begin{bmatrix}<br>a_{n+1}^2\\<br>a_{n+2}^2\\<br>a_{n+1}a_{n+2}\\<br>\sum_{i=1}^na_i^2<br>\end{bmatrix}<br>$$</p><p>矩阵快速幂即可。</p><p><a href="https://github.com/huhaoo/luogu/blob/master/5175.cpp" target="_blank" rel="noopener"><code>my code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> T,n,a[N][N],ans[N][N],o[N][N],a1,a2,x,y,r[N][N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">times</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a[N][N],<span class="keyword">long</span> <span class="keyword">long</span> b[N][N],<span class="keyword">long</span> <span class="keyword">long</span> c,<span class="keyword">long</span> <span class="keyword">long</span> d,<span class="keyword">long</span> <span class="keyword">long</span> e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fr(i,<span class="number">1</span>,c)</span><br><span class="line">fr(j,<span class="number">1</span>,e)</span><br><span class="line">&#123;</span><br><span class="line">r[i][j]=<span class="number">0</span>;</span><br><span class="line">fr(k,<span class="number">1</span>,d)</span><br><span class="line">r[i][j]=(r[i][j]+a[i][k]*b[k][j])%mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">T=read();</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">&#123;</span><br><span class="line">n=read();</span><br><span class="line">a1=read();</span><br><span class="line">a2=read();</span><br><span class="line">x=read();</span><br><span class="line">y=read();</span><br><span class="line">fr(i,<span class="number">1</span>,<span class="number">4</span>)</span><br><span class="line">fr(j,<span class="number">1</span>,<span class="number">4</span>)</span><br><span class="line">a[i][j]=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,<span class="number">4</span>)</span><br><span class="line">ans[i][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">a[<span class="number">1</span>][<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">a[<span class="number">2</span>][<span class="number">1</span>]=y*y%mod;</span><br><span class="line">a[<span class="number">2</span>][<span class="number">2</span>]=x*x%mod;</span><br><span class="line">a[<span class="number">2</span>][<span class="number">3</span>]=<span class="number">2</span>*x*y%mod;</span><br><span class="line">a[<span class="number">3</span>][<span class="number">2</span>]=x;</span><br><span class="line">a[<span class="number">3</span>][<span class="number">3</span>]=y;</span><br><span class="line">a[<span class="number">4</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">a[<span class="number">4</span>][<span class="number">4</span>]=<span class="number">1</span>;</span><br><span class="line">ans[<span class="number">1</span>][<span class="number">1</span>]=a1*a1%mod;</span><br><span class="line">ans[<span class="number">2</span>][<span class="number">1</span>]=a2*a2%mod;</span><br><span class="line">ans[<span class="number">3</span>][<span class="number">1</span>]=a1*a2%mod;</span><br><span class="line"><span class="keyword">while</span>(n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n&amp;<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">times(a,ans,<span class="number">4</span>,<span class="number">4</span>,<span class="number">1</span>);</span><br><span class="line">fr(i,<span class="number">1</span>,<span class="number">4</span>)</span><br><span class="line">ans[i][<span class="number">1</span>]=r[i][<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">times(a,a,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>);</span><br><span class="line">fr(i,<span class="number">1</span>,<span class="number">4</span>)</span><br><span class="line">fr(j,<span class="number">1</span>,<span class="number">4</span>)</span><br><span class="line">a[i][j]=r[i][j];</span><br><span class="line">n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans[<span class="number">4</span>][<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> luogu </tag>
            
            <tag> 矩阵快速幂 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CF1096G</title>
      <link href="/2019/01/05/CF1096G/"/>
      <url>/2019/01/05/CF1096G/</url>
      <content type="html"><![CDATA[<blockquote><p>一个$n$位数，每位可以是给出的$k$个数码中的一个数，可以有前导$0$,输出前$\frac n2$位之和与后$\frac n2$位之和相等的方案数，保证$n$是偶数。</p></blockquote><a id="more"></a><p>记$f_{n,k}$为$n$个数$a_{1\dots n}$和为$k$的方案数（$\forall i,\exists j~a_i=b_j$）</p><p>那么答案为$\sum_{i=0}^\infty f_{\frac n2,i}^2$</p><p>可以发现：</p><p>$$<br>f_{i,j}=\sum_{k}f_{i-1,j-b_k}<br>$$</p><p>边界：$f_{0,0}=1$</p><p>可以发现$f_{a,b}$对$f_{c,d}$（$a&lt;c$）的贡献为$f_{c-1,d-b}$</p><p>于是如果我们知道了$f_{2^i,0\dots\infty}$那么我们可以直接得到$f_{2^{i+1},0\dots\infty}$</p><p>因为由上上行可得：</p><p>$$<br>f_{a+b,i}=\sum_{j=0}^if_{a,j}f_{b,i-j}<br>$$</p><p>所以类似快速幂一样，用NTT优化乘法可以$O(n\lg n\lg nk)$做出</p><p><a href="https://github.com/huhaoo/codeforces/edit/master/problems/1096G.cpp" target="_blank" rel="noopener"><code>my code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 4000010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> r[N],l,a[N],b[N],ans[N],l1,la,n,k;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> g 3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gp 332748118</span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">pow</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> r=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">r=r*a%p;</span><br><span class="line">a=a*a%p;</span><br><span class="line">b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">NTT</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> *a,<span class="keyword">int</span> opt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fr(i,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">if</span>(i&lt;r[i])</span><br><span class="line">swap(a[i],a[r[i]]);</span><br><span class="line">fr(i,<span class="number">0</span>,l<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> wn=<span class="built_in">pow</span>(opt==<span class="number">1</span>?g:gp,(mod<span class="number">-1</span>)&gt;&gt;(i+<span class="number">1</span>),mod);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;(<span class="number">1</span>&lt;&lt;l);j+=(<span class="number">1</span>&lt;&lt;(i+<span class="number">1</span>)))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> w=<span class="number">1</span>;</span><br><span class="line">fr(k,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;i)<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x=a[j+k],y=w*a[j+k+(<span class="number">1</span>&lt;&lt;i)]%mod;</span><br><span class="line">a[j+k]=(x+y)%mod;</span><br><span class="line">a[j+k+(<span class="number">1</span>&lt;&lt;i)]=(x-y+mod)%mod;</span><br><span class="line">w=w*wn%mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> inv=<span class="built_in">pow</span>(<span class="number">1</span>&lt;&lt;l,mod<span class="number">-2</span>,mod);</span><br><span class="line">fr(i,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)</span><br><span class="line">a[i]=a[i]*inv%mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> c[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">times</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> *a,<span class="keyword">long</span> <span class="keyword">long</span> &amp;n,<span class="keyword">long</span> <span class="keyword">long</span> *b,<span class="keyword">long</span> <span class="keyword">long</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=n+m;</span><br><span class="line">fr(i,<span class="number">0</span>,m)</span><br><span class="line">c[i]=b[i];</span><br><span class="line"><span class="keyword">while</span>((<span class="number">1</span>&lt;&lt;l)&lt;=n)</span><br><span class="line">l++;</span><br><span class="line">fr(i,<span class="number">1</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)</span><br><span class="line">r[i]=((i&amp;<span class="number">1</span>)&lt;&lt;(l<span class="number">-1</span>))|(r[i&gt;&gt;<span class="number">1</span>]&gt;&gt;<span class="number">1</span>);</span><br><span class="line">NTT(a,<span class="number">1</span>);</span><br><span class="line">NTT(b,<span class="number">1</span>);</span><br><span class="line">fr(i,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)</span><br><span class="line">a[i]=a[i]*b[i]%mod;</span><br><span class="line">NTT(a,<span class="number">-1</span>);</span><br><span class="line">fr(i,<span class="number">0</span>,m)</span><br><span class="line">b[i]=c[i];</span><br><span class="line">fr(i,n+<span class="number">1</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)</span><br><span class="line">a[i]=<span class="number">0</span>;</span><br><span class="line">fr(i,m+<span class="number">1</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)</span><br><span class="line">b[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read()/<span class="number">2</span>;</span><br><span class="line">k=read();</span><br><span class="line">fr(i,<span class="number">1</span>,k)</span><br><span class="line">a[read()]=<span class="number">1</span>;</span><br><span class="line">fr(i,<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line"><span class="keyword">if</span>(a[i])</span><br><span class="line">l1=i;</span><br><span class="line">ans[la=<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n&amp;<span class="number">1</span>)</span><br><span class="line">times(ans,la,a,l1);</span><br><span class="line">fr(i,<span class="number">0</span>,l1)b[i]=a[i];</span><br><span class="line">times(a,l1,b,l1);</span><br><span class="line">n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">0</span>,la)</span><br><span class="line">a=(a+ans[i]*ans[i])%mod;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,a);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> CF </tag>
            
            <tag> math </tag>
            
            <tag> NTT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu5177</title>
      <link href="/2019/01/05/luogu5177/"/>
      <url>/2019/01/05/luogu5177/</url>
      <content type="html"><![CDATA[<blockquote><p>$$<br>\sum_{i=1}^n\sum_{j=1}^n[\min(i,j)\le i\oplus j\le \max(i,j)]<br>$$</p></blockquote><a id="more"></a><p>$$<br>\dots=2\sum_{i=1}^{n}\sum_{j=i+1}^n[i \le i\oplus j\le j]<br>$$</p><p>因为只牵扯到$\oplus$和$\le,\ge$，用<strong>二进制</strong>表示更方便</p><p>先考虑什么$i,j(i&lt;j)$满足条件</p><table><thead><tr><th style="text-align:center">$i$</th><th style="text-align:center">$j$</th><th style="text-align:center">$i\oplus j$</th></tr></thead><tbody><tr><td style="text-align:center">$0$</td><td style="text-align:center">$0$</td><td style="text-align:center">$0$</td></tr><tr><td style="text-align:center">$0$</td><td style="text-align:center">$1$</td><td style="text-align:center">$1$</td></tr><tr><td style="text-align:center">$1$</td><td style="text-align:center">$0$</td><td style="text-align:center">$1$</td></tr><tr><td style="text-align:center">$1$</td><td style="text-align:center">$1$</td><td style="text-align:center">$0$</td></tr></tbody></table><p>我们称满足$i \le i\oplus j$为满足$A$，满足$i\oplus j\le j$为满足$B$</p><p>显然：$j$的位数<strong>大于</strong>$i$的位数，不然肯定不满足$B$</p><p>首先会发现<strong>无须处理$A$</strong>，因为根据上一条，$A$已经被满足了</p><p>于是只需要处理$B$</p><p>根据上面那张$\oplus$表，我们可以得知：</p><p>（下面按位<strong>从大往小</strong>说）</p><p>首先，如果$i=0$，那么$i\oplus j=j$，对结果<strong>无影响</strong>。</p><p>其次，如果$i\not=0$，那么$j=0$则<strong>肯定可以</strong>，$j\not=0$就<strong>肯定不行</strong>，都可以从此退出。</p><p>于是，我们知道满足下面两个条件的一定同时满足$A,B$：</p><ol><li><p>$j$的位数<strong>大于</strong>$i$的位数</p></li><li><p>$i$的第一个$1$所在位对应的$j$的位<strong>一定</strong>为$0$</p></li></ol><p>（尽管$i$没有一个位置是$1$也满足$B$，但是规定了$i&gt;0$）</p><p>然而确定$i$之后还要卡$j$的上界，所以还不如卡$j$</p><p>但这样不好直接判断，不如求每个$j$对应有多少$i$同时满足$A,B$</p><p>首先$i$的前缀$0$无意义，就看有多少位置可以放$i$的<strong>第一个</strong>$1$</p><p>然后后面的就可以直接随便填了。</p><p>然后发现方案数就是把$j$的<strong>最高位去掉</strong>！</p><p>我们可以考虑去掉的和。</p><p>显然对于$n$的非最高位$k$，去掉$2^k(2^{k+1}-2^k)$</p><p>然后最高位$2^k(n-2^k+1)$</p><p><a href="https://github.com/huhaoo/luogu/blob/master/5177.cpp" target="_blank" rel="noopener"><code>my code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,ans;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">pow</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> r=<span class="number">1</span>;</span><br><span class="line">    a%=m;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">            r=r*a%m;</span><br><span class="line">        a=a*a%m;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> f[<span class="number">70</span>],s[<span class="number">30</span>],t;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!v)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(v)</span><br><span class="line">    &#123;</span><br><span class="line">        s[++t]=v%<span class="number">10</span>;</span><br><span class="line">        v/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">putchar</span>(s[t]+<span class="number">48</span>);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> p2=<span class="built_in">pow</span>(<span class="number">2</span>,mod<span class="number">-2</span>,mod);</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fr(i,<span class="number">1</span>,<span class="number">60</span>)</span><br><span class="line">        f[i]=(f[i<span class="number">-1</span>]-(<span class="number">1l</span>l&lt;&lt;i)%mod*(((<span class="number">1l</span>l&lt;&lt;(i+<span class="number">1</span>))-(<span class="number">1l</span>l&lt;&lt;i))%mod)%mod+mod)%mod;</span><br><span class="line">    fr(T,<span class="number">1</span>,read())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line">        ans=(n%mod*((n+<span class="number">1</span>)%mod)%mod*p2%mod<span class="number">-1</span>+mod)%mod;</span><br><span class="line">        <span class="keyword">if</span>(n!=<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> i=<span class="keyword">int</span>(log2(n));</span><br><span class="line">            <span class="keyword">if</span>(i)</span><br><span class="line">                ans=(ans+f[i<span class="number">-1</span>])%mod;</span><br><span class="line">            ans=(ans-(<span class="number">1l</span>l&lt;&lt;i)%mod*((n-(<span class="number">1l</span>l&lt;&lt;i)+<span class="number">1</span>)%mod)%mod+mod)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        print(ans*<span class="number">2</span>%mod);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PS:</p><ul><li>$2$ 的逆元可以打表（就可以不写快速幂了）</li><li>输出优化不用写也行</li></ul>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> luogu </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu3695CYaron!语</title>
      <link href="/2018/11/18/luogu3695/"/>
      <url>/2018/11/18/luogu3695/</url>
      <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P3695" target="_blank" rel="noopener">题面</a></p><blockquote><p>给定一个语言，写出他的解释器。</p></blockquote><p>其实这道题写起来也不长，<del>就4.4K而已。</del></p><a id="more"></a><p>首先，发现前置知识很少，就只有：</p><ol><li><code>std::string,std::map</code>的使用</li><li><code>+/-</code>表达式求和</li><li>字符串简单处理</li></ol><p>首先，我们可以发现只需要<code>2.</code>就可以写出<code>set,yoroso</code>了</p><p>然后，简要分析一下：</p><ol><li><p><code>vars</code> 实现较为其它更为简单</p></li><li><p>其它三个语法相当于一个子程序，可以第归。</p><p>即（以<code>ihu</code>为例）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;ihu &lt;<span class="number">1</span>&gt;</span><br><span class="line">    &lt;<span class="number">2</span>&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以这样</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">do</span><span class="params">(...)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cmp(&lt;<span class="number">1</span>&gt;))</span><br><span class="line">    <span class="keyword">do</span>(&lt;<span class="number">2</span>&gt;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>这样就可以方便地写了。</p><p>当然要注意：</p><ol><li><p>处理好</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;&lt;1&gt;</span><br><span class="line">    &lt;2&gt;</span><br><span class="line">    &#123;&lt;3&gt;</span><br><span class="line">        &lt;4&gt;</span><br><span class="line">    &#125;</span><br><span class="line">    &lt;5&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>避免解意为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&lt;1&gt;</span><br><span class="line">&lt;2&gt;</span><br><span class="line">&#123;&lt;3&gt;</span><br><span class="line">&lt;4&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>存储可以用一个数组存，然后存下标，这样处理数组方便一些。</p></li></ol><p><a href="https://github.com/huhaoo/luogu/blob/master/3695.cpp" target="_blank" rel="noopener">code</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 500010</span></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="built_in">string</span>,<span class="keyword">int</span>&gt;t;</span><br><span class="line"><span class="keyword">int</span> v[N],n;</span><br><span class="line"><span class="keyword">char</span> *in,*l,*r;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">(<span class="keyword">char</span> *l,<span class="keyword">char</span> *r)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">char</span> *l,<span class="keyword">char</span> *r)</span><span class="comment">//calc</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> s=<span class="number">0</span>,op=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>((*l&lt;<span class="string">'a'</span>||*l&gt;<span class="string">'z'</span>)&amp;&amp;(*l&lt;<span class="string">'0'</span>||*l&gt;<span class="string">'9'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*l==<span class="string">'-'</span>)op=<span class="number">-1</span>;</span><br><span class="line">l++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>((*l&lt;<span class="string">'a'</span>||*l&gt;<span class="string">'z'</span>)&amp;&amp;(*l&lt;<span class="string">'0'</span>||*l&gt;<span class="string">'9'</span>))l++;</span><br><span class="line"><span class="keyword">if</span>(*l&gt;=<span class="string">'a'</span>&amp;&amp;*l&lt;=<span class="string">'z'</span>)<span class="comment">//var</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> pos;</span><br><span class="line"><span class="built_in">string</span> a;</span><br><span class="line">a.clear();</span><br><span class="line"><span class="keyword">while</span>(*l&gt;=<span class="string">'a'</span>&amp;&amp;*l&lt;=<span class="string">'z'</span>)</span><br><span class="line">&#123;</span><br><span class="line">a.push_back(*l);</span><br><span class="line">l++;</span><br><span class="line">&#125;</span><br><span class="line">pos=t[a];</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r&amp;&amp;*l!=<span class="string">'['</span>&amp;&amp;*l!=<span class="string">'+'</span>&amp;&amp;*l!=<span class="string">'-'</span>)</span><br><span class="line">l++;</span><br><span class="line"><span class="keyword">if</span>(*l==<span class="string">'['</span>)<span class="comment">//array</span></span><br><span class="line">&#123;</span><br><span class="line">l++;</span><br><span class="line"><span class="keyword">char</span> *rr=l;</span><br><span class="line"><span class="keyword">while</span>(*rr!=<span class="string">']'</span>)rr++;</span><br><span class="line">pos+=calc(l,rr<span class="number">-1</span>);</span><br><span class="line">l=rr+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r&amp;&amp;*l!=<span class="string">'+'</span>&amp;&amp;*l!=<span class="string">'-'</span>)l++;</span><br><span class="line">&#125;</span><br><span class="line">s+=op*v[pos];</span><br><span class="line"><span class="keyword">if</span>(*l==<span class="string">'+'</span>)op=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(*l==<span class="string">'-'</span>)op=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span><span class="comment">//const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> d=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(*l&gt;=<span class="string">'0'</span>&amp;&amp;*l&lt;=<span class="string">'9'</span>)</span><br><span class="line">&#123;</span><br><span class="line">d=d*<span class="number">10</span>+*l<span class="number">-48</span>;</span><br><span class="line">l++;</span><br><span class="line">&#125;</span><br><span class="line">s+=op*d;</span><br><span class="line"><span class="keyword">while</span>(l&lt;r&amp;&amp;*l!=<span class="string">'+'</span>&amp;&amp;*l!=<span class="string">'-'</span>)</span><br><span class="line">l++;</span><br><span class="line"><span class="keyword">if</span>(*l==<span class="string">'+'</span>)op=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(*l==<span class="string">'-'</span>)op=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">char</span> *l,<span class="keyword">char</span> *r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *p1,*p2;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line">p1=l;</span><br><span class="line"><span class="keyword">while</span>(*p1!=<span class="string">','</span>)p1++;</span><br><span class="line">p2=p1+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(*p2!=<span class="string">','</span>)p2++;</span><br><span class="line">a=calc(p1+<span class="number">1</span>,p2<span class="number">-1</span>);</span><br><span class="line">b=calc(p2+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">while</span>(*l!=<span class="string">'l'</span>&amp;&amp;*l!=<span class="string">'g'</span>&amp;&amp;*l!=<span class="string">'e'</span>&amp;&amp;*l!=<span class="string">'n'</span>)l++;</span><br><span class="line"><span class="keyword">if</span>(*l==<span class="string">'l'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*(l+<span class="number">1</span>)==<span class="string">'e'</span>)</span><br><span class="line"><span class="keyword">return</span> a&lt;=b;</span><br><span class="line"><span class="keyword">return</span> a&lt;b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(*l==<span class="string">'g'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*(l+<span class="number">1</span>)==<span class="string">'e'</span>)</span><br><span class="line"><span class="keyword">return</span> a&gt;=b;</span><br><span class="line"><span class="keyword">return</span> a&gt;b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(*l==<span class="string">'e'</span>)</span><br><span class="line"><span class="keyword">return</span> a==b;</span><br><span class="line"><span class="keyword">return</span> a!=b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">run1</span><span class="params">(<span class="keyword">char</span> *l,<span class="keyword">char</span> *r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(*l!=<span class="string">'v'</span>&amp;&amp;*l!=<span class="string">'i'</span>&amp;&amp;*l!=<span class="string">'h'</span>&amp;&amp;*l!=<span class="string">'w'</span>)l++;</span><br><span class="line"><span class="keyword">if</span>(*l==<span class="string">'v'</span>)<span class="comment">//var</span></span><br><span class="line">&#123;</span><br><span class="line">l+=<span class="number">4</span>;</span><br><span class="line"><span class="keyword">while</span>(l&lt;r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> a;</span><br><span class="line">a.clear();</span><br><span class="line"><span class="keyword">while</span>(*l&lt;<span class="string">'a'</span>||*l&gt;<span class="string">'z'</span>)l++;</span><br><span class="line"><span class="keyword">while</span>(*l&gt;=<span class="string">'a'</span>&amp;&amp;*l&lt;=<span class="string">'z'</span>)</span><br><span class="line">&#123;</span><br><span class="line">a.push_back(*l);</span><br><span class="line">l++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(*l!=<span class="string">'i'</span>&amp;&amp;*l!=<span class="string">'a'</span>)l++;</span><br><span class="line"><span class="keyword">if</span>(*l==<span class="string">'i'</span>)<span class="comment">//int</span></span><br><span class="line">&#123;</span><br><span class="line">n++;</span><br><span class="line">t[a]=n;</span><br><span class="line">l+=<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(*l==<span class="string">'a'</span>)<span class="comment">//array</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> lv=<span class="number">0</span>,rv=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(*l&lt;<span class="string">'0'</span>||*l&gt;<span class="string">'9'</span>)l++;</span><br><span class="line"><span class="keyword">while</span>(*l&gt;=<span class="string">'0'</span>&amp;&amp;*l&lt;=<span class="string">'9'</span>)</span><br><span class="line">&#123;</span><br><span class="line">lv=lv*<span class="number">10</span>+*l<span class="number">-48</span>;</span><br><span class="line">l++;</span><br><span class="line">&#125;<span class="comment">//read a num</span></span><br><span class="line"><span class="keyword">while</span>(*l&lt;<span class="string">'0'</span>||*l&gt;<span class="string">'9'</span>)l++;</span><br><span class="line"><span class="keyword">while</span>(*l&gt;=<span class="string">'0'</span>&amp;&amp;*l&lt;=<span class="string">'9'</span>)</span><br><span class="line">&#123;</span><br><span class="line">rv=rv*<span class="number">10</span>+*l<span class="number">-48</span>;</span><br><span class="line">l++;</span><br><span class="line">&#125;<span class="comment">//read the other num</span></span><br><span class="line">l++;</span><br><span class="line">t[a]=n-lv+<span class="number">1</span>;</span><br><span class="line">n+=rv-lv+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(*l==<span class="string">'i'</span>)<span class="comment">//ihu</span></span><br><span class="line">&#123;</span><br><span class="line">l+=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">char</span> *rr=l;</span><br><span class="line"><span class="keyword">while</span>(*rr!=<span class="string">':'</span>&amp;&amp;*rr!=<span class="string">'&#123;'</span>&amp;&amp;*rr!=<span class="string">'&#125;'</span>)rr++;</span><br><span class="line"><span class="keyword">if</span>(cmp(l,rr<span class="number">-1</span>))</span><br><span class="line">run(rr,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(*l==<span class="string">'h'</span>)<span class="comment">//hor</span></span><br><span class="line">&#123;</span><br><span class="line">l+=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">char</span> *p1,*p2,*p3;</span><br><span class="line"><span class="keyword">int</span> pos,lv,rv;</span><br><span class="line"><span class="built_in">string</span> a;</span><br><span class="line">a.clear();</span><br><span class="line">p1=l;</span><br><span class="line"><span class="keyword">while</span>(*p1!=<span class="string">','</span>)p1++;</span><br><span class="line">p2=p1+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(*p2!=<span class="string">','</span>)p2++;</span><br><span class="line">p3=p2+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(*p3!=<span class="string">':'</span>&amp;&amp;*p3!=<span class="string">'&#123;'</span>&amp;&amp;*p3!=<span class="string">'&#125;'</span>)p3++;</span><br><span class="line"><span class="keyword">while</span>(*l&lt;<span class="string">'a'</span>||*l&gt;<span class="string">'z'</span>)l++;</span><br><span class="line"><span class="keyword">while</span>(*l&gt;=<span class="string">'a'</span>&amp;&amp;*l&lt;=<span class="string">'z'</span>)</span><br><span class="line">&#123;</span><br><span class="line">a.push_back(*l);</span><br><span class="line">l++;</span><br><span class="line">&#125;</span><br><span class="line">pos=t[a];</span><br><span class="line">lv=calc(p1+<span class="number">1</span>,p2<span class="number">-1</span>);</span><br><span class="line">rv=calc(p2+<span class="number">1</span>,p3<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">for</span>(v[pos]=lv;v[pos]&lt;=rv;v[pos]++)</span><br><span class="line">run(p3,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(*l==<span class="string">'w'</span>)<span class="comment">//while</span></span><br><span class="line">&#123;</span><br><span class="line">l+=<span class="number">5</span>;</span><br><span class="line"><span class="keyword">char</span> *rr=l;</span><br><span class="line"><span class="keyword">while</span>(*rr!=<span class="string">':'</span>&amp;&amp;*rr!=<span class="string">'&#123;'</span>&amp;&amp;*rr!=<span class="string">'&#125;'</span>)rr++;</span><br><span class="line"><span class="keyword">while</span>(cmp(l,rr<span class="number">-1</span>))</span><br><span class="line">run(rr,r);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">run2</span><span class="params">(<span class="keyword">char</span> *l,<span class="keyword">char</span> *r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(*l!=<span class="string">'s'</span>&amp;&amp;*l!=<span class="string">'y'</span>)l++;</span><br><span class="line"><span class="keyword">if</span>(*l==<span class="string">'y'</span>)<span class="comment">//yosoro</span></span><br><span class="line">&#123;</span><br><span class="line">l+=<span class="number">6</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,calc(l,r));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(*l==<span class="string">'s'</span>)<span class="comment">//set</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> pos;</span><br><span class="line"><span class="built_in">string</span> a;</span><br><span class="line">l+=<span class="number">3</span>;</span><br><span class="line">a.clear();</span><br><span class="line"><span class="keyword">while</span>(*l&lt;<span class="string">'a'</span>||*l&gt;<span class="string">'z'</span>)l++;</span><br><span class="line"><span class="keyword">while</span>(*l&gt;=<span class="string">'a'</span>&amp;&amp;*l&lt;=<span class="string">'z'</span>)</span><br><span class="line">&#123;</span><br><span class="line">a.push_back(*l);</span><br><span class="line">l++;</span><br><span class="line">&#125;</span><br><span class="line">pos=t[a];</span><br><span class="line"><span class="keyword">while</span>(*l!=<span class="string">','</span>&amp;&amp;*l!=<span class="string">'['</span>)l++;</span><br><span class="line"><span class="keyword">if</span>(*l==<span class="string">'['</span>)<span class="comment">//array</span></span><br><span class="line">&#123;</span><br><span class="line">l++;</span><br><span class="line"><span class="keyword">char</span> *rr=l;</span><br><span class="line"><span class="keyword">while</span>(*rr!=<span class="string">']'</span>)rr++;</span><br><span class="line">pos+=calc(l,rr<span class="number">-1</span>);</span><br><span class="line">l=rr+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(*l!=<span class="string">','</span>)l++;</span><br><span class="line">l++;</span><br><span class="line">v[pos]=calc(l,r);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">in=<span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1</span>&lt;&lt;<span class="number">20</span>|<span class="number">10</span>];</span><br><span class="line"><span class="built_in">memset</span>(in,<span class="number">0</span>,<span class="keyword">sizeof</span>(<span class="keyword">char</span>[<span class="number">1</span>&lt;&lt;<span class="number">20</span>|<span class="number">10</span>]));</span><br><span class="line">fread(in,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">20</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="keyword">char</span> *r=in;</span><br><span class="line"><span class="keyword">while</span>(*r!=<span class="number">0</span>)r++;</span><br><span class="line">run(in,r<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">(<span class="keyword">char</span> *ll,<span class="keyword">char</span> *rr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *l,*r;</span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(ll&lt;=rr)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(*ll!=<span class="string">'&#123;'</span>&amp;&amp;*ll!=<span class="string">':'</span>&amp;&amp;ll&lt;=rr)ll++;</span><br><span class="line"><span class="keyword">if</span>(*ll==<span class="string">'&#123;'</span>)<span class="comment">//var &amp;&amp; hor &amp;&amp; while &amp;&amp; ihu</span></span><br><span class="line">&#123;</span><br><span class="line">k=<span class="number">1</span>;</span><br><span class="line">l=ll+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(k)</span><br><span class="line">&#123;</span><br><span class="line">ll++;</span><br><span class="line"><span class="keyword">if</span>(*ll==<span class="string">'&#123;'</span>)k++;</span><br><span class="line"><span class="keyword">if</span>(*ll==<span class="string">'&#125;'</span>)k--;</span><br><span class="line">&#125;</span><br><span class="line">r=ll<span class="number">-1</span>;</span><br><span class="line">run1(l,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(*ll==<span class="string">':'</span>)<span class="comment">//yoroso &amp;&amp; set</span></span><br><span class="line">&#123;</span><br><span class="line">l=ll+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(*ll!=<span class="string">'\n'</span>&amp;&amp;ll&lt;=rr)ll++;</span><br><span class="line">r=ll<span class="number">-1</span>;</span><br><span class="line">run2(l,r);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> luogu </tag>
            
            <tag> string </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C++中priority_queue详解</title>
      <link href="/2018/11/07/priority-queue/"/>
      <url>/2018/11/07/priority-queue/</url>
      <content type="html"><![CDATA[<p><code>priority_queue</code>是一个神奇的容器（简称为“优先队列”）。</p><a id="more"></a><p>一般定义：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">priority_queue&lt;<span class="keyword">int</span>&gt;q;</span><br></pre></td></tr></table></figure><p>当然，这是大根堆。</p><p>我们可以这样定义小根堆。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">priority_queue&lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,greater&lt;<span class="keyword">int</span>&gt; &gt;q;<span class="comment">//"&gt; &gt;"必须有空格，不然会解译为左移</span></span><br></pre></td></tr></table></figure><p>其它定义：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> _</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(_ a,_ b)</span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line">priority_queue&lt;_&gt;q;</span><br></pre></td></tr></table></figure><p>值得注意的是：越大的在越前面！</p><p>使用方式：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">q.empty();<span class="comment">//返回容器是否为空</span></span><br><span class="line">q.pop();<span class="comment">//弹出最大元素</span></span><br><span class="line">q.push();<span class="comment">//在q中加入元素</span></span><br><span class="line">q.top();<span class="comment">//返回q中最大元素</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> STL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu4999|烦人的数学作业</title>
      <link href="/2018/11/05/luogu4999/"/>
      <url>/2018/11/05/luogu4999/</url>
      <content type="html"><![CDATA[<blockquote><p>记<br>$$<br>f_x=\sum_{i=0}^{\infty}\lfloor\dfrac{x}{10^i}\rfloor\mathrm{mod}10<br>$$<br>即$x$的数字和，求<br>$$<br>\sum_{i=l}^rf_i<br>$$</p></blockquote><a id="more"></a><p>可以统计每个数字的贡献。</p><p><a href="https://github.com/huhaoo/luogu/blob/master/4999.cpp" target="_blank" rel="noopener">code</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B 18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> l,r,T,ans,p[B+<span class="number">10</span>];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pos(i,j) ((i/p[j])%10)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,B)p[i]=p[i<span class="number">-1</span>]*<span class="number">10</span>;</span><br><span class="line">T=read();</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">&#123;</span><br><span class="line">l=read()<span class="number">-1</span>;r=read();ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(r==p[<span class="number">18</span>])&#123;ans++;r--;&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,<span class="number">9</span>)fr(j,<span class="number">0</span>,<span class="number">17</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(pos(r,j)&lt;i)ans+=i*(r/p[j+<span class="number">1</span>])*p[j];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(pos(r,j)==i)ans+=i*((r/p[j+<span class="number">1</span>])*p[j]+(r%p[j]+<span class="number">1</span>));</span><br><span class="line"><span class="keyword">else</span> ans+=i*(r/p[j+<span class="number">1</span>]+<span class="number">1</span>)*p[j];</span><br><span class="line">ans%=mod;</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,<span class="number">9</span>)fr(j,<span class="number">0</span>,<span class="number">17</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(pos(l,j)&lt;i)ans-=i*(l/p[j+<span class="number">1</span>])*p[j];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(pos(l,j)==i)ans-=i*((l/p[j+<span class="number">1</span>])*p[j]+(l%p[j]+<span class="number">1</span>));</span><br><span class="line"><span class="keyword">else</span> ans-=i*(l/p[j+<span class="number">1</span>]+<span class="number">1</span>)*p[j];</span><br><span class="line">ans=(ans%mod+mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> luogu </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu3911</title>
      <link href="/2018/11/01/luogu3911/"/>
      <url>/2018/11/01/luogu3911/</url>
      <content type="html"><![CDATA[<p>求$ans=\sum_{i=1}^N\sum_{j=1}^N\mathrm{lcm}(A_i,A_j)$</p><a id="more"></a><p>记$n=5\times10^4,a_i=\sum_{j=1}^N[A_j=i]$</p><p>那么</p><p>$$ans=\sum_{i=1}^n\sum_{j=1}^na_ia_j\mathrm{lcm}(i,j)$$<br>$$=\sum_{i=1}^n\sum_{j=1}^n\dfrac{a_ia_jij}{\mathrm{gcd}(i,j)}$$<br>$$=\sum_{k=1}^n\sum_{i=1}^n\sum_{j=1}^n\dfrac{a_ia_jij}{k}[\mathrm{gcd}(i,j)=k]$$<br>$$=\sum_{k=1}^n\sum_{i=1}^{\lfloor\frac nk\rfloor}\sum_{j=1}^{\lfloor\frac nk\rfloor}a_{ik}a_{jk}ijk[\mathrm{gcd}(i,j)=1]$$</p><p>枚举$k$，为方便，记$n_k=\lfloor\dfrac nk\rfloor $</p><p>记</p><p>$$f_{k,x}=\sum_{i=1}^{n_k}\sum_{j=1}^{n_k}ijk^2a_{ik}a_{ik}[\mathrm{gcd}(i,j)=x]$$<br>$$g_{k,x}=\sum_{i=1}^{n_k}\sum_{j=1}^{n_k}ijk^2a_{ik}a_{ik}[x|\mathrm{gcd}(i,j)]$$</p><p>易得</p><p>$$g_{k,x}=\sum_{i=1}^{n_{kx}}\sum_{j=1}^{n_{kx}}ijk^2x^2a_{ikx}a_{jkx}$$</p><p>记</p><p>$$g’_x=\sum_{i=1}^{n_x}\sum_{j=1}^{n_x}ija_{ix}a_{jx}=(\sum_{i=1}^{n_x}ia_{ix})(\sum_{j=1}^{n_x}ja_{jx})=(\sum_{i=1}^{n_x}ia_{ix})^2$$</p><p>不难发现，我们可以预处理出每个$g_x’$，就可以$O(1)$求$g_{k,x}$了，即</p><p>$$g_{k,x}=k^2x^2g’_{kx}$$</p><p>考虑求$f_{k,x}$，发现可以莫比乌斯反演</p><p>$$\because g_{k,x}=\sum_{x|d}f_{k,d}$$<br>$$\therefore f_{k,x}=\sum_{x|d}\mu_{\frac dx}g_{k,d}=\sum_{i=1}^{n_{kx}}\mu_i g_{k,ix}$$<br>$$\therefore f_{k,1}=\sum_{i=1}^{n_k}\mu_{i}g_{k,i}$$</p><p>综上所述：</p><p>$$ans=\sum_{k=1}^n\dfrac{f_{k,1}}k=\sum_{k=1}^n\dfrac{\sum_{i=1}^{n_k}\mu_ig_{k,i}}{k}$$<br>$$=\sum_{k=1}^n\dfrac{\sum_{i=1}^{n_k}\mu_ii^2k^2g_{ik}’}{k}=\sum_{k=1}^n\sum_{i=1}^{n_k}\mu_ii^2kg_{ik}’$$</p><p><a href="https://github.com/huhaoo/luogu/blob/master/3911.cpp" target="_blank" rel="noopener">code</a>（求$\mu$那里有点丑，不要在意）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 50010</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n=<span class="number">50000</span>,a[N],mu[N],g[N],ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fr(i,<span class="number">1</span>,read())a[read()]++;</span><br><span class="line">fr(x,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">fr(i,<span class="number">1</span>,n/x)g[x]+=i*a[i*x];</span><br><span class="line">g[x]*=g[x];</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">mu[i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> k=i;</span><br><span class="line">fr(j,<span class="number">2</span>,<span class="built_in">sqrt</span>(i))</span><br><span class="line"><span class="keyword">if</span>(k%j==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((k/j)%j==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">mu[i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">mu[i]=-mu[i];</span><br><span class="line">k/=j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k!=<span class="number">1</span>&amp;&amp;mu[i]!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">int</span>(<span class="built_in">sqrt</span>(k))*<span class="keyword">int</span>(<span class="built_in">sqrt</span>(k))==k)mu[i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> mu[i]=-mu[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fr(k,<span class="number">1</span>,n)fr(i,<span class="number">1</span>,n/k)</span><br><span class="line">ans+=mu[i]*i*i*k*g[i*k];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> luogu </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu2221</title>
      <link href="/2018/08/21/luogu2221/"/>
      <url>/2018/08/21/luogu2221/</url>
      <content type="html"><![CDATA[<blockquote><p>Y901高速公路是一条重要的交通纽带，政府部门建设初期的投入以及使用期间的养护费用都不低，因此政府在这条高速公路上设立了许多收费站。</p><p>Y901高速公路是一条由$N-1$段路以及$N$个收费站组成的东西向的链，我们按照由西向东的顺序将收费站依次编号为$1..N$，从收费站$i$行驶到$i+1$(或从$i+1$行驶到$i$)需要收取$V_i$的费用。高速路刚建成时所有的路段都是免费的。</p><p>政府部门根据实际情况，会不定期地对连续路段的收费标准进行调整，根据政策涨价或降价。</p><p>无聊的小A同学总喜欢研究一些稀奇古怪的问题，他开车在这条高速路上行驶时想到了这样一个问题:对于给定的$l,r(l&lt;r)$,在第$l$个到第$r$个收费站里等概率随机取出两个不同的收费站$a$和$b$，那么从$a$行驶到$b$将期望花费多少费用呢?</p></blockquote><p><a href="https://www.luogu.org/problemnew/show/P2221" target="_blank" rel="noopener">题目地址</a></p><a id="more"></a><p>我们记$i$到$i+1$费用为$w_i$，那么可以转化成序列问题：</p><p>$C~l~r~v:\forall i\in[l,r)~w’_i=w_i+v$</p><p>$Q~l~r:ans=\dfrac{\sum_{i=l}^{r-1}\sum_{j=i}^{r-1}\sum_{k=i}^jw_k}{\sum_{i=l}^{i-1}\sum_{j=i}^{r-1}1}​$</p><p>$\mathrm{set}~ans=\dfrac ab$<br>$\therefore a=\sum_{i=l}^{r-1}\sum_{j=i}^{r-1}\sum_{k=i}^jw_k=\sum_{k=l}^{r-1}(w_k\times\sum_{i=l}^k\sum_{j=k}^{r-1}1)$<br>$=\sum_{k=l}^{r-1}(k-l+1)(r-k)w_k=\sum_{k=l}^{r’}(k-l+1)(r’-k+1)w_k$</p><p>$=\sum_{k=l}^{r’}[-k^2w_k+(l+r’)kw_k+(r’+1)(1-l)w_k]$ （$r’=r-1$）<br>$b=\sum_{i=l}^{r-1}\sum_{j=i}^{r-1}1=\sum_{i=l}^{r-1}(r-i)=\sum_{i=1}^{r-l}i=\dfrac{(r-l)(r-l+1)}{2}$</p><p>维护$k^2w_k,kw_k,w_k$即可</p><p><a href="https://github.com/huhaoo/luogu/blob/master/2221.cpp" target="_blank" rel="noopener"><code>code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,q,s[N][<span class="number">2</span>],a[N],v0[N],v1[N],v2[N],s1[N],s2[N],r,c;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">build</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> l,<span class="keyword">long</span> <span class="keyword">long</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> k=++c;</span><br><span class="line"><span class="keyword">if</span>(l==r)<span class="keyword">return</span> k;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> m=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">s[k][<span class="number">0</span>]=build(l,m);</span><br><span class="line">s[k][<span class="number">1</span>]=build(m+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">return</span> k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> k,<span class="keyword">long</span> <span class="keyword">long</span> l,<span class="keyword">long</span> <span class="keyword">long</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a[k])</span><br><span class="line">&#123;</span><br><span class="line">v0[k]+=(r-l+<span class="number">1</span>)*a[k];</span><br><span class="line">v1[k]+=(s1[r]-s1[l<span class="number">-1</span>])*a[k];</span><br><span class="line">v2[k]+=(s2[r]-s2[l<span class="number">-1</span>])*a[k];</span><br><span class="line">a[s[k][<span class="number">0</span>]]+=a[k];a[s[k][<span class="number">1</span>]]+=a[k];</span><br><span class="line">a[k]=a[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> k,<span class="keyword">long</span> <span class="keyword">long</span> l,<span class="keyword">long</span> <span class="keyword">long</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l==r)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> m=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">pushdown(s[k][<span class="number">0</span>],l,m);pushdown(s[k][<span class="number">1</span>],m+<span class="number">1</span>,r);</span><br><span class="line">v0[k]=v0[s[k][<span class="number">0</span>]]+v0[s[k][<span class="number">1</span>]];</span><br><span class="line">v1[k]=v1[s[k][<span class="number">0</span>]]+v1[s[k][<span class="number">1</span>]];</span><br><span class="line">v2[k]=v2[s[k][<span class="number">0</span>]]+v2[s[k][<span class="number">1</span>]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> k,<span class="keyword">long</span> <span class="keyword">long</span> l,<span class="keyword">long</span> <span class="keyword">long</span> r,<span class="keyword">long</span> <span class="keyword">long</span> ll,<span class="keyword">long</span> <span class="keyword">long</span> rr,<span class="keyword">long</span> <span class="keyword">long</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(ll&lt;=l&amp;&amp;r&lt;=rr)</span><br><span class="line">&#123;</span><br><span class="line">a[k]+=v;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">pushdown(k,l,r);</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> m=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(ll&lt;=m)add(s[k][<span class="number">0</span>],l,m,ll,rr,v);</span><br><span class="line"><span class="keyword">if</span>(rr&gt;m)add(s[k][<span class="number">1</span>],m+<span class="number">1</span>,r,ll,rr,v);</span><br><span class="line">update(k,l,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">query</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> k,<span class="keyword">long</span> <span class="keyword">long</span> l,<span class="keyword">long</span> <span class="keyword">long</span> r,<span class="keyword">long</span> <span class="keyword">long</span> ll,<span class="keyword">long</span> <span class="keyword">long</span> rr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">update(k,l,r);pushdown(k,l,r);</span><br><span class="line"><span class="keyword">if</span>(ll&lt;=l&amp;&amp;r&lt;=rr)</span><br><span class="line"><span class="keyword">return</span> -v2[k]+(ll+rr)*v1[k]+(rr+<span class="number">1</span>)*(<span class="number">1</span>-ll)*v0[k];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> m=(l+r)&gt;&gt;<span class="number">1</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(ll&lt;=m)ans+=query(s[k][<span class="number">0</span>],l,m,ll,rr);</span><br><span class="line"><span class="keyword">if</span>(rr&gt;m)ans+=query(s[k][<span class="number">1</span>],m+<span class="number">1</span>,r,ll,rr);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">gcd</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> b?gcd(b,a%b):a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> k,<span class="keyword">long</span> <span class="keyword">long</span> l,<span class="keyword">long</span> <span class="keyword">long</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!k)<span class="keyword">return</span>;</span><br><span class="line">update(k,l,r);pushdown(k,l,r);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld %lld %lld %lld %lld\n"</span>,l,r,v0[k],v1[k],v2[k]);</span><br><span class="line"><span class="keyword">int</span> m=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">print(s[k][<span class="number">0</span>],l,m);print(s[k][<span class="number">1</span>],m+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();q=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)s1[i]=s1[i<span class="number">-1</span>]+i,s2[i]=s2[i<span class="number">-1</span>]+i*i;</span><br><span class="line">r=build(<span class="number">1</span>,n);</span><br><span class="line"><span class="keyword">while</span>(q--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">char</span> opt[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,opt);</span><br><span class="line"><span class="keyword">if</span>(*opt==<span class="string">'C'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ll=read(),rr=read()<span class="number">-1</span>,v=read();</span><br><span class="line">add(r,<span class="number">1</span>,n,ll,rr,v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ll=read(),rr=read()<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a=query(r,<span class="number">1</span>,n,ll,rr),b=(rr-ll+<span class="number">1</span>)*(rr-ll+<span class="number">2</span>)/<span class="number">2</span>,g;</span><br><span class="line">g=gcd(a,b);a/=g;b/=g;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld/%lld\n"</span>,a,b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> luogu </tag>
            
            <tag> 概率期望 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu3293</title>
      <link href="/2018/08/17/luogu3293/"/>
      <url>/2018/08/17/luogu3293/</url>
      <content type="html"><![CDATA[<blockquote><p>给定$a_1\dots a_n$，每次询问$b,x,l,r$：求$\max_{i=l}^r b\oplus(a_i+x)$</p></blockquote><a id="more"></a><p>以前只会用可持久化trie求最大异或和……</p><p>将trie的判断能否向下走一步转化成询问对应区间有无值。</p><p><a href="https://github.com/huhaoo/luogu/blob/master/3293.cpp" target="_blank" rel="noopener"><code>code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 200010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> T 100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> A ((1&lt;&lt;20)-1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B 18</span></span><br><span class="line"><span class="keyword">int</span> n,q,r[N],val[N*T],s[N*T][<span class="number">2</span>],cnt;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> v,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t=++cnt;val[t]=val[k]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(l==r)<span class="keyword">return</span> t;</span><br><span class="line"><span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(v&lt;=mid)</span><br><span class="line">&#123;</span><br><span class="line">s[t][<span class="number">0</span>]=add(s[k][<span class="number">0</span>],v,l,mid);</span><br><span class="line">s[t][<span class="number">1</span>]=s[k][<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">s[t][<span class="number">0</span>]=s[k][<span class="number">0</span>];</span><br><span class="line">s[t][<span class="number">1</span>]=add(s[k][<span class="number">1</span>],v,mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> ll,<span class="keyword">int</span> rr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(ll&lt;=l&amp;&amp;r&lt;=rr)<span class="keyword">return</span> val[a]-val[b];</span><br><span class="line"><span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(ll&lt;=mid)ans+=query(s[a][<span class="number">0</span>],s[b][<span class="number">0</span>],l,mid,ll,rr);</span><br><span class="line"><span class="keyword">if</span>(rr&gt;mid)ans+=query(s[a][<span class="number">1</span>],s[b][<span class="number">1</span>],mid+<span class="number">1</span>,r,ll,rr);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> r,<span class="keyword">int</span> l,<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">s=max(s,<span class="number">0</span>);t=min(t,A);</span><br><span class="line"><span class="keyword">if</span>(s&gt;t)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> query(r,l,<span class="number">0</span>,A,s,t);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();q=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a=read();</span><br><span class="line">r[i]=add(r[i<span class="number">-1</span>],a,<span class="number">0</span>,A);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(q--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> b=read(),x=read(),l=read(),rr=read(),ans=<span class="number">0</span>;</span><br><span class="line">fd(i,B,<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> opt=!(b&amp;(<span class="number">1</span>&lt;&lt;i));</span><br><span class="line"><span class="keyword">if</span>(query(r[rr],r[l<span class="number">-1</span>],ans+(opt&lt;&lt;i)-x,ans+(opt&lt;&lt;i)+(<span class="number">1</span>&lt;&lt;i)<span class="number">-1</span>-x))ans=ans+(opt&lt;&lt;i);</span><br><span class="line"><span class="keyword">else</span> ans=ans+((!opt)&lt;&lt;i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans^b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> luogu </tag>
            
            <tag> 主席树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>LCT</title>
      <link href="/2018/08/15/LCT/"/>
      <url>/2018/08/15/LCT/</url>
      <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P3690" target="_blank" rel="noopener">模板地址</a></p><a id="more"></a><p><a href="https://courses.csail.mit.edu/6.851/spring12/scribe/L19.pdf" target="_blank" rel="noopener">google上看到的</a></p><p><a href="http://www.cnblogs.com/flashhu/p/8324551.html" target="_blank" rel="noopener">这篇很好啊</a></p><p><a href="https://github.com/huhaoo/template/blob/master/LCT.cpp" target="_blank" rel="noopener"><code>code</code></a></p><p>如何使用：</p><p><code>t</code>为变量类型，如<code>int</code></p><p><code>_size</code>为点集大小（编号$[1,n]$）</p><p><code>opt</code>为统计操作，如：</p><p>询问链（只能询问链的）所有点权的异或值（<code>int</code>类型）：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">opt</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> a^b;&#125;</span><br></pre></td></tr></table></figure><p><code>query</code>：链询问</p><p><code>link/cut</code>：连/删边</p><p><code>modfiy</code>：修改点权</p><p><code>clear</code>：初始化，$O(n)$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">t</span>,<span class="title">int</span> _<span class="title">size</span>,<span class="title">t</span> (*<span class="title">opt</span>)(<span class="title">t</span> <span class="title">a</span>,<span class="title">t</span> <span class="title">b</span>)&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">LCT</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> size (_size+1)</span></span><br><span class="line"><span class="keyword">int</span> s[size][<span class="number">2</span>],rev[size],f[size],q[size],cnt;</span><br><span class="line">t v[size],sum[size];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> size</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isroot</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;<span class="keyword">return</span> s[f[k]][<span class="number">0</span>]!=k&amp;&amp;s[f[k]][<span class="number">1</span>]!=k;&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">wson</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;<span class="keyword">return</span> s[f[k]][<span class="number">1</span>]==k;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;sum[k]=opt(v[k],opt(sum[s[k][<span class="number">0</span>]],sum[s[k][<span class="number">1</span>]]));&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(rev[k])</span><br><span class="line">&#123;</span><br><span class="line">rev[s[k][<span class="number">0</span>]]^=<span class="number">1</span>;rev[s[k][<span class="number">1</span>]]^=<span class="number">1</span>;rev[k]=<span class="number">0</span>;</span><br><span class="line">swap(s[k][<span class="number">0</span>],s[k][<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rorate</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(isroot(k))<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> ff=f[k],o=wson(k);</span><br><span class="line"><span class="keyword">if</span>(!isroot(ff))s[f[ff]][wson(ff)]=k;</span><br><span class="line">f[k]=f[ff];f[ff]=k;f[s[k][o^<span class="number">1</span>]]=ff;</span><br><span class="line">s[ff][o]=s[k][o^<span class="number">1</span>];s[k][o^<span class="number">1</span>]=ff;</span><br><span class="line">update(ff);update(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=k;q[cnt=<span class="number">1</span>]=k;</span><br><span class="line"><span class="keyword">while</span>(!isroot(i))&#123;q[++cnt]=f[i];i=f[i];&#125;</span><br><span class="line"><span class="keyword">while</span>(cnt)&#123;reverse(q[cnt]);cnt--;&#125;</span><br><span class="line"><span class="keyword">while</span>(!isroot(k))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> ff=f[k];</span><br><span class="line"><span class="keyword">if</span>(!isroot(ff))rorate((wson(ff)==wson(k))?ff:k);</span><br><span class="line">rorate(k);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">access</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(k)</span><br><span class="line">&#123;</span><br><span class="line">splay(k);</span><br><span class="line">s[k][<span class="number">1</span>]=l;update(k);</span><br><span class="line">l=k;k=f[k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">makeroot</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;access(k);splay(k);rev[k]^=<span class="number">1</span>;&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findroot</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">access(k);splay(k);reverse(k);</span><br><span class="line"><span class="keyword">while</span>(s[k][<span class="number">0</span>])</span><br><span class="line">&#123;</span><br><span class="line">k=s[k][<span class="number">0</span>];</span><br><span class="line">reverse(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">split</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">makeroot(u);</span><br><span class="line">access(v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function">t <span class="title">query</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">split(u,v);splay(v);</span><br><span class="line"><span class="keyword">return</span> sum[v];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">link</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">makeroot(u);</span><br><span class="line"><span class="keyword">if</span>(findroot(v)==u)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">f[u]=v;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//1:u,v in a tree</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cut</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">makeroot(u);</span><br><span class="line"><span class="keyword">if</span>(findroot(v)!=u)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(f[u]!=v||s[u][<span class="number">1</span>])<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">f[u]=s[v][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//1:(u,v) not in E</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modfiy</span><span class="params">(<span class="keyword">int</span> k,t val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">splay(k);v[k]=val;</span><br><span class="line">update(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(k) memset(k,0,sizeof(k))</span></span><br><span class="line">LCT()</span><br><span class="line">&#123;</span><br><span class="line">mem(s);mem(rev);mem(f);mem(q);cnt=<span class="number">0</span>;</span><br><span class="line">mem(v);mem(sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>&#123;LCT();&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> mem</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> LCT </tag>
            
            <tag> splay </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>可持久化平衡树</title>
      <link href="/2018/08/12/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
      <url>/2018/08/12/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E5%B9%B3%E8%A1%A1%E6%A0%91/</url>
      <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P3835" target="_blank" rel="noopener">模板地址</a></p><blockquote><p>您需要写一种数据结构（可参考题目标题），来维护一些数，其中需要提供以下操作（<strong>对于各个以往的历史版本</strong>）：</p><ol><li>插入$x$数</li><li>删除$x$数(若有多个相同的数，因只删除一个，<strong>如果没有请忽略该操作</strong>)</li><li>查询$x$数的排名(排名定义为比当前数小的数的个数$+1$。若有多个相同的数，因输出最小的排名)</li><li>查询排名为$x$的数</li><li>求$x$的前驱(前驱定义为小于$x$，且最大的数，<strong>如不存在输出$-2147483647$</strong>)</li><li>求$x$的后继(后继定义为大于$x$，且最小的数，<strong>如不存在输出$2147483647$</strong>)</li></ol></blockquote><a id="more"></a><p>和普通平衡树（<a href="https://github.com/huhaoo/template/blob/master/FHQtreap.cpp" target="_blank" rel="noopener"><code>code</code></a>）一样，不过需要<strong>每次修改结点时，新开结点，使得原来的结点组成的树形态不变</strong>（类似主席树（可持久化数组））</p><p><a href="https://github.com/huhaoo/template/blob/master/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E5%B9%B3%E8%A1%A1%E6%A0%91.cpp" target="_blank" rel="noopener"><code>code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 500010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> D 50</span></span><br><span class="line"><span class="keyword">int</span> cnt,siz[N*D],val[N*D],w[N*D],s[N*D][<span class="number">2</span>],r[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">make</span><span class="params">(<span class="keyword">int</span> v,<span class="keyword">int</span> ww)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cnt++;val[cnt]=v;w[cnt]=ww;siz[cnt]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">make</span><span class="params">(<span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cnt++;</span><br><span class="line">val[cnt]=val[p];siz[cnt]=siz[p];w[cnt]=w[p];</span><br><span class="line">s[cnt][<span class="number">0</span>]=s[p][<span class="number">0</span>];s[cnt][<span class="number">1</span>]=s[p][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> update(k) siz[k]=1+siz[s[k][0]]+siz[s[k][1]]</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l*r==<span class="number">0</span>)<span class="keyword">return</span> l+r;</span><br><span class="line"><span class="keyword">if</span>(w[l]&lt;=w[r])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> k=make(l);</span><br><span class="line">s[k][<span class="number">1</span>]=merge(s[k][<span class="number">1</span>],r);</span><br><span class="line">update(k);</span><br><span class="line"><span class="keyword">return</span> k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> k=make(r);</span><br><span class="line">s[k][<span class="number">0</span>]=merge(l,s[k][<span class="number">0</span>]);</span><br><span class="line">update(k);</span><br><span class="line"><span class="keyword">return</span> k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">split</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> v,<span class="keyword">int</span> &amp;l,<span class="keyword">int</span> &amp;r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!x)&#123;l=r=<span class="number">0</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(val[x]&lt;=v)</span><br><span class="line">&#123;</span><br><span class="line">l=make(x);</span><br><span class="line">split(s[l][<span class="number">1</span>],v,s[l][<span class="number">1</span>],r);</span><br><span class="line">update(l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">r=make(x);</span><br><span class="line">split(s[r][<span class="number">0</span>],v,l,s[r][<span class="number">0</span>]);</span><br><span class="line">update(r);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> ro,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">split(ro,v,l,r);</span><br><span class="line"><span class="keyword">return</span> merge(merge(l,make(v,rand())),r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> _delete(<span class="keyword">int</span> ro,<span class="keyword">int</span> v)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> l,m,r;</span><br><span class="line">split(ro,v<span class="number">-1</span>,l,r);</span><br><span class="line">split(r,v,m,r);</span><br><span class="line"><span class="keyword">return</span> merge(merge(l,merge(s[m][<span class="number">0</span>],s[m][<span class="number">1</span>])),r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> _rank(<span class="keyword">int</span> ro,<span class="keyword">int</span> v,<span class="keyword">int</span> &amp;nr)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">split(ro,v<span class="number">-1</span>,l,r);</span><br><span class="line"><span class="keyword">int</span> ans=siz[l]+<span class="number">1</span>;nr=merge(l,r);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kth</span><span class="params">(<span class="keyword">int</span> ro,<span class="keyword">int</span> k,<span class="keyword">int</span> &amp;nr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nr=ro;</span><br><span class="line"><span class="keyword">while</span>(ro)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(siz[s[ro][<span class="number">0</span>]]&gt;=k)&#123;ro=s[ro][<span class="number">0</span>];<span class="keyword">continue</span>;&#125;</span><br><span class="line">k-=siz[s[ro][<span class="number">0</span>]];</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">1</span>)<span class="keyword">return</span> val[ro];</span><br><span class="line">ro=s[ro][<span class="number">1</span>];k-=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(s[r][<span class="number">0</span>])r=s[r][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">return</span> val[r];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(s[r][<span class="number">1</span>])r=s[r][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> val[r];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lower</span><span class="params">(<span class="keyword">int</span> ro,<span class="keyword">int</span> v,<span class="keyword">int</span> &amp;nr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">split(ro,v<span class="number">-1</span>,l,r);</span><br><span class="line"><span class="keyword">if</span>(!l)&#123;nr=r;<span class="keyword">return</span> <span class="number">-2147483647</span>;&#125;</span><br><span class="line"><span class="keyword">int</span> ans=max(l);</span><br><span class="line">nr=merge(l,r);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">upper</span><span class="params">(<span class="keyword">int</span> ro,<span class="keyword">int</span> v,<span class="keyword">int</span> &amp;nr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line">split(ro,v,l,r);</span><br><span class="line"><span class="keyword">if</span>(!r)&#123;nr=l;<span class="keyword">return</span> <span class="number">2147483647</span>;&#125;</span><br><span class="line"><span class="keyword">int</span> ans=min(r);</span><br><span class="line">nr=merge(l,r);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>)<span class="keyword">new</span> <span class="keyword">char</span>);</span><br><span class="line">fr(i,<span class="number">1</span>,read())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> v=read(),o=read(),x=read();</span><br><span class="line"><span class="keyword">if</span>(o==<span class="number">1</span>)r[i]=insert(r[v],x);</span><br><span class="line"><span class="keyword">if</span>(o==<span class="number">2</span>)r[i]=_delete(r[v],x);</span><br><span class="line"><span class="keyword">if</span>(o==<span class="number">3</span>)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,_rank(r[v],x,r[i]));</span><br><span class="line"><span class="keyword">if</span>(o==<span class="number">4</span>)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,kth(r[v],x,r[i]));</span><br><span class="line"><span class="keyword">if</span>(o==<span class="number">5</span>)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,lower(r[v],x,r[i]));</span><br><span class="line"><span class="keyword">if</span>(o==<span class="number">6</span>)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,upper(r[v],x,r[i]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 可持久化 </tag>
            
            <tag> 可持久化平衡树 </tag>
            
            <tag> FHQtreap </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>拉格朗日插值</title>
      <link href="/2018/08/05/%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC/"/>
      <url>/2018/08/05/%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC/</url>
      <content type="html"><![CDATA[<blockquote><p>由<del>小学知识</del>可知， $n$ 个点 $(x_i,y_i)$ 可以唯一地确定一个多项式</p><p>现在，给定 $n$ 个点，请你确定这个多项式，并将 $k$ 代入求值</p></blockquote><p><a href="https://www.luogu.org/problemnew/show/P4781" target="_blank" rel="noopener">模板链接</a></p><a id="more"></a><p><del>这其实是一道结论题</del></p><p>看到这题，我们先会想高斯消元。</p><p>可是高斯消元是$O(n^3)$的，得松一下。</p><p>于是我们可以考虑上网搜题解。</p><p>题解告诉我们：</p><p>原多项式长这样：</p><p>$$F(x)=\sum_{i=1}^ny_i\times\dfrac{\prod_{1\le j\le n,j!=i}(x-x_j)}{\prod_{1\le j\le n,j!=i}(x_i-x_j)}$$</p><p>然后直觉告诉我们这是对的……</p><p>考虑证明：</p><ul><li><p>分母非$0$</p><p>分母为$0$当且仅当存在$x_i=x_j$</p><p>如果对应$y_i=y_j$，对应同一点，可以忽略（数据中也没有）</p><p>如果对应$y_i\not=y_j$，数学知识告诉我们这不是一个函数，<del>题目没说怎么处理，也可以忽略</del></p></li><li><p>经过$(x_k,y_k)$</p><p>代值就好了。</p><p>对于$\sum$中的每个$i$，若$i=k$，可以看出对应值为$y_k\times1=y_k$，若$i\not=k$，分子必有一项为$0$（分子中$\prod$对应$j=k$项为$0$</p></li></ul><p>然后模拟就好了</p><p><a href="https://github.com/huhaoo/template/blob/master/%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC.cpp" target="_blank" rel="noopener">code</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">power</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> y,<span class="keyword">long</span> <span class="keyword">long</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> r=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(y&amp;<span class="number">1</span>)r=r*x%p;</span><br><span class="line">x=x*x%p;</span><br><span class="line">y&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 2010</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x[N],y[N],n,v,ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">v=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)x[i]=read(),y[i]=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> k=<span class="number">1</span>;</span><br><span class="line">fr(j,<span class="number">1</span>,n)<span class="keyword">if</span>(i!=j)k=k*(x[i]+mod-x[j])%mod;</span><br><span class="line">k=power(k,mod<span class="number">-2</span>,mod);</span><br><span class="line">fr(j,<span class="number">1</span>,n)<span class="keyword">if</span>(i!=j)k=k*(v+mod-x[j])%mod;</span><br><span class="line">k=k*y[i]%mod;</span><br><span class="line">ans=(ans+k)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> 拉格朗日插值 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2-sat</title>
      <link href="/2018/08/03/2-sat/"/>
      <url>/2018/08/03/2-sat/</url>
      <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P4782" target="_blank" rel="noopener">模板地址</a></p><blockquote><p>有$n$个布尔变量 $x_1$~$x_n$ ，另有$m$个需要满足的条件，每个条件的形式都是“ $x_i=0/1$或 $x_j=0/1$”。比如“ $x_1=1$或 $x_3=0$”、“ $x_7=0$或 $x_2=0$”。2-SAT 问题的目标是给每个变量赋值使得所有条件得到满足。</p></blockquote><a id="more"></a><p>我们可以将一个点$i$看成$2i,2i+1$两个点，表示$i$取$0,1$，$i$取值相当于在$2i,2i+1$中选一个点，就将题目变为求一个合法的选点方案</p><p>我们记一条边$(u,v)$表示，选$u$就须选$v$</p><p>那么$(x=a)\rightarrow(y=b)$就连$(2x+a,2y+b)$与$(2y+1-b,2x+1-a)$（逆否命题）</p><p>我们可以将$(x=a)or(y=b)$变成$((x=1-a)\rightarrow(y=b))and(((y=1-b)\rightarrow(x=a)))$（不过只要两条边，因为拆分出的互为逆否命题）</p><p>为了方便，记选的集合为$A$，$B_u$为$u$能通过边走到的点</p><p>然后我们发现$u\in A$，那么$\forall v\in B_u,v\in A$</p><p>以及$(u\in A)+((u~xor~1)\in A)=1$（即一个变量一个权值）</p><p>我们可以缩环，选一个环相当于选里面的点。</p><p>这样就变成了DAG</p><p>我们可以先用反向边拓扑排序，这样选小的就不会强制选大的了。</p><p><a href="https://github.com/huhaoo/template/blob/master/2-sat.cpp" target="_blank" rel="noopener"><code>code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> run</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 8000010</span></span><br><span class="line"><span class="keyword">int</span> n,e,m,u[N],v[N],begin[N],next[N],to[N],s[N],top,f[N],nn,dfn[N],low[N],k,d[N],l,r,q[N],rank[N],is[N];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fo(i,a) for(int i=begin[a];i;i=next[i])</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> uu,<span class="keyword">int</span> vv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e++;</span><br><span class="line">u[e]=uu;v[e]=vv;</span><br><span class="line">next[e]=begin[uu];</span><br><span class="line">begin[uu]=e;</span><br><span class="line">to[e]=vv;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> v;low[u]=dfn[u]=++k;s[++top]=u;is[u]=<span class="number">1</span>;</span><br><span class="line">fo(i,u)<span class="keyword">if</span>(dfn[v=to[i]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(is[v])low[u]=min(low[u],dfn[v]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">tarjan(v);low[u]=min(low[u],low[v]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dfn[u]==low[u])</span><br><span class="line">&#123;</span><br><span class="line">nn++;</span><br><span class="line"><span class="keyword">while</span>(s[top+<span class="number">1</span>]!=u)&#123;f[s[top]]=nn;is[s[top]]=<span class="number">0</span>;top--;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">m=read();</span><br><span class="line">fr(i,<span class="number">1</span>,m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=read()*<span class="number">2</span>+read(),v=read()*<span class="number">2</span>+read();</span><br><span class="line">add(u^<span class="number">1</span>,v);add(v^<span class="number">1</span>,u);</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">2</span>,<span class="number">2</span>*n+<span class="number">1</span>)<span class="keyword">if</span>(!dfn[i])tarjan(i);</span><br><span class="line">fr(i,<span class="number">1</span>,n)<span class="keyword">if</span>(f[i*<span class="number">2</span>]==f[i*<span class="number">2</span>+<span class="number">1</span>])&#123;<span class="built_in">printf</span>(<span class="string">"IMPOSSIBLE"</span>);<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">e=<span class="number">0</span>;fr(i,<span class="number">1</span>,n)begin[i]=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,e)<span class="keyword">if</span>(f[u[i]]!=f[v[i]])&#123;add(f[v[i]],f[u[i]]);d[u[i]]++;&#125;</span><br><span class="line">l=<span class="number">1</span>;r=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,nn)<span class="keyword">if</span>(!d[i])q[++r]=i;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t=q[l],v;rank[t]=l;l++;</span><br><span class="line">fo(i,l)</span><br><span class="line">&#123;</span><br><span class="line">d[v=to[i]]--;</span><br><span class="line"><span class="keyword">if</span>(!d[v])q[++r]=v;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"POSSIBLE\n"</span>);</span><br><span class="line">fr(i,<span class="number">1</span>,n)<span class="built_in">printf</span>(<span class="string">"%d%c"</span>,rank[f[i&lt;&lt;<span class="number">1</span>]]&gt;rank[f[i&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]],i==n?<span class="string">'\n'</span>:<span class="string">' '</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> run::main();&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 2-sat </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu4232[单纯形伪模板]</title>
      <link href="/2018/07/10/luogu4232/"/>
      <url>/2018/07/10/luogu4232/</url>
      <content type="html"><![CDATA[<blockquote><p>在一个有向无环图上，阿燐和阿空第0个时刻分别站在编号为 $s_r$ , $s_k$ 的节点，二人都知道双方的初始位置，对地图完全了解。</p><p>从第$1$个时刻起，每个时刻阿燐和阿空都可以选择站着不动，也可以选择移动到相邻的节点，二人每时刻的移动是同时开始的，并且不能中途改变方向。</p><p>阿燐被阿空捉住时，游戏立即结束。如果阿空一直没有捉住阿燐，第 $t$ 个时刻结束后两人就不能再继续移动了，游戏将在第 $t+1$ 个时刻结束。</p><p>阿空的目的是尽快捉住阿燐(捉住的定义是与阿燐同一时刻站在同一节点)，而阿燐的目的是尽可能更长时间不被阿空捉住。具体而言，若一场游戏进行了$ t_0$ 时刻，阿燐的得分是 $t_0$ ，阿空的得分是 $-t_0$，双方都希望自己得分(或得分的期望值)更高。</p><p>我们认为在这个过程中阿燐和阿空随时都能知道对方的位置。两人在第 $t$ 个时刻不能看出第 $t+1$个时刻对方要走到哪里。</p><p>恋恋想知道，在双方最优决策的情况下，游戏结束时刻的期望值是多少。</p></blockquote><p><del>题目好长啊</del></p><a id="more"></a><h4 id="单纯形"><a href="#单纯形" class="headerlink" title="单纯形"></a>单纯形</h4><p><strong>形如如下式子：</strong><br>$$<br>\max z=\sum_{i=1}^nc_ix_i\\<br>s.t.~~ \forall j\in[1,m],\sum_{i=1}^na_{j,i}x_i\le b_i<br>$$<br>具体<a href="https://www.cnblogs.com/ECJTUACM-873284962/p/7097864.html" target="_blank" rel="noopener">看这</a>吧</p><h4 id="本题题解"><a href="#本题题解" class="headerlink" title="本题题解"></a>本题题解</h4><p>这位dalao讲的很好啊：<a href="https://blog.csdn.net/zlttttt/article/details/79775012" target="_blank" rel="noopener">link</a></p><p><a href="https://github.com/huhaoo/luogu/blob/master/4232.cpp" target="_blank" rel="noopener"><code>my code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">namespace</span> run</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NN 30</span></span><br><span class="line"><span class="keyword">int</span> nn,T,begin[N],next[N],to[N],e,n,m;</span><br><span class="line"><span class="keyword">double</span> a[N][N],f[NN][NN][NN];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fo(i,a) for(int i=begin[a];i;i=next[i])</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e++;</span><br><span class="line">to[e]=v;</span><br><span class="line">next[e]=begin[u];</span><br><span class="line">begin[u]=e;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> nn,<span class="keyword">int</span> mm)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=nn;</span><br><span class="line">m=mm;</span><br><span class="line">fr(i,<span class="number">0</span>,m)</span><br><span class="line">fr(j,<span class="number">0</span>,n)</span><br><span class="line">a[i][j]=<span class="number">0.</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pivot</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> e)</span><span class="comment">//l:[1..m],e:[1..n]</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> k=a[l][e];a[l][e]=<span class="number">1.</span>;</span><br><span class="line">fr(i,<span class="number">0</span>,n)a[l][i]/=k;</span><br><span class="line">fr(i,<span class="number">0</span>,m)</span><br><span class="line"><span class="keyword">if</span>(i!=l&amp;&amp;<span class="built_in">fabs</span>(a[i][e])&gt;eps)</span><br><span class="line">&#123;</span><br><span class="line">k=a[i][e];a[i][e]=<span class="number">0</span>;</span><br><span class="line">fr(j,<span class="number">0</span>,n)</span><br><span class="line">a[i][j]-=a[l][j]*k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">0</span>,e=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,m)</span><br><span class="line"><span class="keyword">if</span>(a[i][<span class="number">0</span>]&lt;-eps&amp;&amp;(!l||(rand()&amp;<span class="number">1</span>)))</span><br><span class="line">l=i;</span><br><span class="line"><span class="keyword">if</span>(!l)<span class="keyword">break</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span>(a[l][i]&lt;-eps&amp;&amp;(!e||(rand()&amp;<span class="number">1</span>)))</span><br><span class="line">e=i;</span><br><span class="line"><span class="keyword">if</span>(!e)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">pivot(l,e);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">simplex</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">0</span>,e=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">double</span> mi=<span class="number">1e15</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span>(a[<span class="number">0</span>][i]&gt;eps)</span><br><span class="line">&#123;</span><br><span class="line">e=i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!e)<span class="keyword">break</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,m)</span><br><span class="line"><span class="keyword">if</span>(a[i][e]&gt;eps&amp;&amp;a[i][<span class="number">0</span>]/a[i][e]&lt;mi)</span><br><span class="line">&#123;</span><br><span class="line">mi=a[i][<span class="number">0</span>]/a[i][e];</span><br><span class="line">l=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!l)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">pivot(l,e);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==y||t&gt;T)<span class="keyword">return</span> <span class="number">1.</span>*t;</span><br><span class="line"><span class="keyword">if</span>(f[x][y][t])<span class="keyword">return</span> f[x][y][t];</span><br><span class="line"><span class="keyword">int</span> dx=<span class="number">0</span>,dy=<span class="number">0</span>;</span><br><span class="line">fo(i,x)fo(j,y)dfs(to[i],to[j],t+<span class="number">1</span>);</span><br><span class="line">fo(i,x)dx++;</span><br><span class="line">fo(i,y)dy++;</span><br><span class="line"><span class="comment">//dx-&gt;n,dy-&gt;m</span></span><br><span class="line">init(dy,dx);</span><br><span class="line">fr(i,<span class="number">1</span>,n)a[<span class="number">0</span>][i]=<span class="number">1.</span>;</span><br><span class="line">dx=<span class="number">0</span>;dy=<span class="number">0</span>;</span><br><span class="line">fo(i,x)</span><br><span class="line">&#123;</span><br><span class="line">dx++;</span><br><span class="line">dy=<span class="number">0</span>;</span><br><span class="line">fo(j,y)</span><br><span class="line">&#123;</span><br><span class="line">dy++;</span><br><span class="line">a[dx][dy]=dfs(to[i],to[j],t+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">a[dx][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(init()&amp;&amp;simplex())f[x][y][t]=<span class="number">-1.</span>/a[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">return</span> f[x][y][t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>)<span class="keyword">new</span> <span class="keyword">char</span>);</span><br><span class="line">nn=read();<span class="keyword">int</span> m=read(),x=read(),y=read();T=read();</span><br><span class="line">fr(i,<span class="number">1</span>,nn)add(i,i);</span><br><span class="line"><span class="keyword">while</span>(m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">add(u,v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.3lf\n"</span>,dfs(x,y,<span class="number">0</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> run::main();&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 单纯形 </tag>
            
            <tag> 纳什均衡 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>多项式求逆</title>
      <link href="/2018/07/05/%E5%A4%9A%E9%A1%B9%E5%BC%8F%E6%B1%82%E9%80%86/"/>
      <url>/2018/07/05/%E5%A4%9A%E9%A1%B9%E5%BC%8F%E6%B1%82%E9%80%86/</url>
      <content type="html"><![CDATA[<blockquote><p>给定$A(x)$，求$B(x)$，使得$A(x)B(x)\equiv1(\mod x^n)$</p></blockquote><a id="more"></a><p>首先是一个比较重要的式子：</p><p>$a\equiv 1(\mod b\times c)\rightarrow a\equiv 1(\mod b)$</p><p>然后假设（为记录方便，计$n’=\lceil\dfrac n2\rceil$）</p><p>$A(x)B’(x)\equiv1(\mod x^{n’})$</p><p>根据开头的式子，有$A(x)B(x)\equiv1(\mod x^{n’})$</p><p>两式相减：$A(x)B’(x)-A(x)B(x)\equiv 0$</p><p>左式：$A(x)B’(x)-A(x)B(x)=A(x)(B’(x)-B(x))\equiv 0(\mod x^{n’})$</p><p>因为$A(x)\not\equiv 0(\mod x^{n’})$</p><p>所以$B’(x)-B(x)\equiv 0(\mod x^{n’})$</p><p>左右同时平方$(B’(x)-B(x))^2\equiv0(\mod x^{n’^2})$</p><p>又是那个式子因为$x^{n’^2}=x^{\lceil\frac n2\rceil^2}=\cases{x\times x^n&amp;$2|x$\\x^n&amp;$2\not|x$}$</p><p>$\therefore x^n|x^{n’^2}$</p><p>$\therefore (B’(x)-B(x))^2\equiv0(\mod x^n)$</p><p>左式$=B’^2(x)-2B’(x)B(x)+B^2(x)$</p><p>左右同乘$A$，右式依然是$0$</p><p>有左式=$B’^2(x)A(x)-2B’(x)(B(x)A(x))+B(x)(B(x)A(x))=B’^2(x)A(x)-2B’(x)+B(x)$</p><p>将$B(x)$移项，并同乘$-1$</p><p>得：$B(x)\equiv2B’(x)-B’^2(x)A(x)(\mod x^n)$</p><p><a href="https://github.com/huhaoo/template/blob/master/%E5%A4%9A%E9%A1%B9%E5%BC%8F%E6%B1%82%E9%80%86.cpp" target="_blank" rel="noopener"><code>my code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N (1&lt;&lt;20)</span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">power</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> y,<span class="keyword">long</span> <span class="keyword">long</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> r=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(y&amp;<span class="number">1</span>)r=r*x%p;</span><br><span class="line">x=x*x%p;</span><br><span class="line">y&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,a[N],b[N],c[N],ans[N],mod=<span class="number">998244353</span>,g=<span class="number">3</span>,gp=power(g,mod<span class="number">-2</span>,mod),l,r[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">NTT</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> *a,<span class="keyword">long</span> <span class="keyword">long</span> opt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fr(i,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">if</span>(i&lt;r[i])</span><br><span class="line">swap(a[i],a[r[i]]);</span><br><span class="line">fr(i,<span class="number">0</span>,l<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> wn=power(opt==<span class="number">1</span>?g:gp,(mod<span class="number">-1</span>)&gt;&gt;(i+<span class="number">1</span>),mod);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> j=<span class="number">0</span>;j&lt;(<span class="number">1</span>&lt;&lt;l);j+=(<span class="number">1</span>&lt;&lt;(i+<span class="number">1</span>)))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> w=<span class="number">1</span>;</span><br><span class="line">fr(k,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;i)<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x=a[j+k],y=w*a[(<span class="number">1</span>&lt;&lt;i)+j+k]%mod;</span><br><span class="line">a[j+k]=(x+y)%mod;</span><br><span class="line">a[j+k+(<span class="number">1</span>&lt;&lt;i)]=(x-y+mod)%mod;</span><br><span class="line">w=w*wn%mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> inv=power((<span class="number">1</span>&lt;&lt;l),mod<span class="number">-2</span>,mod);</span><br><span class="line">fr(i,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)</span><br><span class="line">a[i]=a[i]*inv%mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inv</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> *a,<span class="keyword">long</span> <span class="keyword">long</span> *b,<span class="keyword">long</span> <span class="keyword">long</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)&#123;b[<span class="number">0</span>]=power(a[<span class="number">0</span>],mod<span class="number">-2</span>,mod);<span class="keyword">return</span>;&#125;</span><br><span class="line">inv(a,b,(n+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">l=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>((<span class="number">1</span>&lt;&lt;l)&lt;=(n&lt;&lt;<span class="number">1</span>))l++;</span><br><span class="line">fr(i,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)r[i]=(r[i&gt;&gt;<span class="number">1</span>]&gt;&gt;<span class="number">1</span>)|((i&amp;<span class="number">1</span>)&lt;&lt;(l<span class="number">-1</span>));</span><br><span class="line">fr(i,<span class="number">0</span>,n<span class="number">-1</span>)c[i]=a[i];</span><br><span class="line">fr(i,n,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)c[i]=<span class="number">0</span>;</span><br><span class="line">NTT(b,<span class="number">1</span>);NTT(c,<span class="number">1</span>);</span><br><span class="line">fr(i,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)b[i]=(<span class="number">2</span>*b[i]%mod-b[i]*b[i]%mod*c[i]%mod+mod)%mod;</span><br><span class="line">NTT(b,<span class="number">-1</span>);</span><br><span class="line">fr(i,n,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)b[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">fr(i,<span class="number">0</span>,n<span class="number">-1</span>)a[i]=read();</span><br><span class="line">inv(a,b,n);</span><br><span class="line">fr(i,<span class="number">0</span>,n<span class="number">-1</span>)<span class="built_in">printf</span>(<span class="string">"%lld%c"</span>,b[i],i==n<span class="number">-1</span>?<span class="string">'\n'</span>:<span class="string">' '</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> NTT </tag>
            
            <tag> 多项式求逆 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HNOI2017礼物</title>
      <link href="/2018/07/05/HNOI2017%E7%A4%BC%E7%89%A9/"/>
      <url>/2018/07/05/HNOI2017%E7%A4%BC%E7%89%A9/</url>
      <content type="html"><![CDATA[<p>FFT巧妙啊</p><a id="more"></a><p>先考虑没有旋转操作，设第一个项链加上了$C$。<br>$$<br>\sum_{i=1}^n(x_i-y_i+C)^2\\<br>=\sum_{i=1}^n(x_i^2+y_i^2+C^2-2x_iy_i+2x_iC-2y_iC)\\<br>=\sum_{i=1}^n(x_i^2+y_i^2)+\sum_{i=1}^n(C^2+2x_iC-2y_iC)-\sum_{i=1}^n2x_iy_i<br>$$<br>就这样分三部分</p><p>第一个式子值恒定（即使旋转）</p><p>第二个式子<br>$$<br>\sum_{i=1}^n(C^2+2x_iC-2y_iC)\\<br>=nC^2+2\sum_{i=1}^n(x_i-y_i)C<br>$$<br>求极值即可</p><p>第三个式子变下形：</p><p>翻转$x$</p><p>那么题目要求的就可以化为卷积：<br>$$<br>-2\sum_{i=1}^n x_iy_i=-2\sum_{i=1}^nx_{n+1-i}y_i<br>$$<br>旋转，相当于复制$x$一遍后后移若干位</p><p>卷积就FFT就好了。</p><p><a href="https://github.com/huhaoo/luogu/blob/master/3723.cpp" target="_blank" rel="noopener"><code>my code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N (1&lt;&lt;21)</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">double</span> a,b;</span><br><span class="line"><span class="keyword">complex</span>(<span class="keyword">double</span> aa=<span class="number">0</span>,<span class="keyword">double</span> bb=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">a=aa;</span><br><span class="line">b=bb;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">complex</span> <span class="keyword">operator</span>+(<span class="keyword">complex</span> k)&#123;<span class="keyword">return</span> <span class="keyword">complex</span>(a+k.a,b+k.b);&#125;</span><br><span class="line"><span class="keyword">complex</span> <span class="keyword">operator</span>+=(<span class="keyword">complex</span> k)&#123;<span class="keyword">return</span> *<span class="keyword">this</span>=*<span class="keyword">this</span>+k;&#125;</span><br><span class="line"><span class="keyword">complex</span> <span class="keyword">operator</span>-(<span class="keyword">complex</span> k)&#123;<span class="keyword">return</span> <span class="keyword">complex</span>(a-k.a,b-k.b);&#125;</span><br><span class="line"><span class="keyword">complex</span> <span class="keyword">operator</span>-=(<span class="keyword">complex</span> k)&#123;<span class="keyword">return</span> *<span class="keyword">this</span>=*<span class="keyword">this</span>-k;&#125;</span><br><span class="line"><span class="keyword">complex</span> <span class="keyword">operator</span>*(<span class="keyword">complex</span> k)&#123;<span class="keyword">return</span> <span class="keyword">complex</span>(a*k.a-b*k.b,a*k.b+b*k.a);&#125;</span><br><span class="line"><span class="keyword">complex</span> <span class="keyword">operator</span>*=(<span class="keyword">complex</span> k)&#123;<span class="keyword">return</span> *<span class="keyword">this</span>=*<span class="keyword">this</span>*k;&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> &amp;<span class="title">real</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> a;&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> &amp;<span class="title">unreal</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> b;&#125;</span><br><span class="line">&#125;a[N],b[N],c[N];</span><br><span class="line"><span class="keyword">int</span> n,l,x[N],y[N],ans,r[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=n,b=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,n)b+=<span class="number">2</span>*(x[i]-y[i]);</span><br><span class="line"><span class="keyword">int</span> k1=-b/<span class="number">2</span>/a,k2=<span class="number">-1</span>-b/<span class="number">2</span>/a,k3=<span class="number">1</span>-b/<span class="number">2</span>/a;</span><br><span class="line"><span class="keyword">return</span> min(a*k1*k1+b*k1,min(a*k2*k2+b*k2,a*k3*k3+b*k3));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> pi=<span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fft</span><span class="params">(<span class="keyword">complex</span> *a,<span class="keyword">int</span> opt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fr(i,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">if</span>(i&lt;r[i])</span><br><span class="line">swap(a[i],a[r[i]]);</span><br><span class="line">fr(i,<span class="number">0</span>,l<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">complex wn(cos(pi/(1&lt;&lt;i)),opt*sin(pi/(1&lt;&lt;i)));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;(<span class="number">1</span>&lt;&lt;l);j+=(<span class="number">1</span>&lt;&lt;(i+<span class="number">1</span>)))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">complex</span> <span class="title">w</span><span class="params">(<span class="number">1</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">fr(k,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;i)<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">complex</span> x=a[j+k],y=w*a[(<span class="number">1</span>&lt;&lt;i)+j+k];</span><br><span class="line">a[j+k]=x+y;</span><br><span class="line">a[j+k+(<span class="number">1</span>&lt;&lt;i)]=x-y;</span><br><span class="line">w=w*wn;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)x[i]=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)y[i]=read();</span><br><span class="line">l=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">0</span>,<span class="number">2</span>*n<span class="number">-1</span>)a[i]=&#123;x[(n*<span class="number">2</span>-i<span class="number">-1</span>)%n+<span class="number">1</span>]*<span class="number">1.0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">fr(i,<span class="number">0</span>,n<span class="number">-1</span>)b[i]=&#123;y[i+<span class="number">1</span>]*<span class="number">1.0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">while</span>((<span class="number">1</span>&lt;&lt;l)&lt;=(<span class="number">3</span>*n<span class="number">-2</span>))l++;</span><br><span class="line">fr(i,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)r[i]=(r[i&gt;&gt;<span class="number">1</span>]&gt;&gt;<span class="number">1</span>)|((i&amp;<span class="number">1</span>)&lt;&lt;(l<span class="number">-1</span>));</span><br><span class="line">fft(a,<span class="number">1</span>);</span><br><span class="line">fft(b,<span class="number">1</span>);</span><br><span class="line">fr(i,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)c[i]=a[i]*b[i];</span><br><span class="line">fft(c,<span class="number">-1</span>);</span><br><span class="line">fr(i,<span class="number">-1</span>,n<span class="number">-1</span>)ans=min(ans,<span class="number">-2</span>*<span class="keyword">int</span>(c[n+i].real()/(<span class="number">1</span>&lt;&lt;l)+<span class="number">0.5</span>));</span><br><span class="line">fr(i,<span class="number">1</span>,n)ans+=x[i]*x[i]+y[i]*y[i];</span><br><span class="line">ans+=calc();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> FFT </tag>
            
            <tag> HNOI </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>NTT</title>
      <link href="/2018/07/05/NTT/"/>
      <url>/2018/07/05/NTT/</url>
      <content type="html"><![CDATA[<blockquote><p>给定多项式$A(x),B(x)$求$A\times B$</p></blockquote><a id="more"></a><p><a href="https://github.com/huhaoo/template/blob/master/NTT.cpp" target="_blank" rel="noopener"><code>my code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**************************************************************</span></span><br><span class="line"><span class="comment">File name: NTT.cpp</span></span><br><span class="line"><span class="comment">Author: huhao</span></span><br><span class="line"><span class="comment">Email: 826538400@qq.com</span></span><br><span class="line"><span class="comment">Create time: 7/5/2018, 2:26:09 PM</span></span><br><span class="line"><span class="comment">**************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fr(i,a,b) for(int i=(a),_end_=(b);i&lt;=_end_;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fd(i,a,b) for(int i=(a),_end_=(b);i&gt;=_end_;i--)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> r=<span class="number">0</span>,t=<span class="number">1</span>,c=getchar();</span><br><span class="line"><span class="keyword">while</span>(c&lt;<span class="string">'0'</span>||c&gt;<span class="string">'9'</span>)</span><br><span class="line">&#123;</span><br><span class="line">t=c==<span class="string">'-'</span>?<span class="number">-1</span>:<span class="number">1</span>;</span><br><span class="line">c=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(c&gt;=<span class="string">'0'</span>&amp;&amp;c&lt;=<span class="string">'9'</span>)</span><br><span class="line">&#123;</span><br><span class="line">r=(r&lt;&lt;<span class="number">3</span>)+(r&lt;&lt;<span class="number">1</span>)+(c^<span class="number">48</span>);</span><br><span class="line">c=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> g 3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gp 332748118</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N (1&lt;&lt;21)</span></span><br><span class="line"><span class="keyword">int</span> n,m,l,r[N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[N],b[N],c[N];</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">power</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> y,<span class="keyword">long</span> <span class="keyword">long</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> r=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(y&amp;<span class="number">1</span>)r=r*x%p;</span><br><span class="line">y&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">x=x*x%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">NTT</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> *a,<span class="keyword">int</span> l,<span class="keyword">int</span> opt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fr(i,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">if</span>(i&lt;r[i])</span><br><span class="line">swap(a[i],a[r[i]]);</span><br><span class="line">fr(i,<span class="number">0</span>,l<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> wn=power(opt==<span class="number">1</span>?g:gp,(mod<span class="number">-1</span>)&gt;&gt;(i+<span class="number">1</span>),mod);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;(<span class="number">1</span>&lt;&lt;l);j+=(<span class="number">1</span>&lt;&lt;(i+<span class="number">1</span>)))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> w=<span class="number">1</span>;</span><br><span class="line">fr(k,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;i)<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x=a[j+k],y=w*a[j+k+(<span class="number">1</span>&lt;&lt;i)]%mod;</span><br><span class="line">a[j+k]=(x+y)%mod;</span><br><span class="line">a[j+k+(<span class="number">1</span>&lt;&lt;i)]=(x-y+mod)%mod;</span><br><span class="line">w=w*wn%mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">m=read();</span><br><span class="line">fr(i,<span class="number">0</span>,n)a[i]=read();</span><br><span class="line">fr(i,<span class="number">0</span>,m)b[i]=read();</span><br><span class="line">l=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>((<span class="number">1</span>&lt;&lt;l)&lt;=n+m)l++;</span><br><span class="line">fr(i,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)r[i]=(r[i&gt;&gt;<span class="number">1</span>]&gt;&gt;<span class="number">1</span>)|((i&amp;<span class="number">1</span>)&lt;&lt;(l<span class="number">-1</span>));</span><br><span class="line">NTT(a,l,<span class="number">1</span>);</span><br><span class="line">NTT(b,l,<span class="number">1</span>);</span><br><span class="line">fr(i,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)c[i]=a[i]*b[i]%mod;</span><br><span class="line">NTT(c,l,<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">int</span> inv=power((<span class="number">1</span>&lt;&lt;l),mod<span class="number">-2</span>,mod);</span><br><span class="line">fr(i,<span class="number">0</span>,n+m)<span class="built_in">printf</span>(<span class="string">"%lld%c"</span>,c[i]*inv%mod,i==n+m?<span class="string">'\n'</span>:<span class="string">' '</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> NTT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>FFT</title>
      <link href="/2018/07/04/FFT/"/>
      <url>/2018/07/04/FFT/</url>
      <content type="html"><![CDATA[<blockquote><p>给定$A(x),B(x)$，求$A(x)\times B(x)$</p></blockquote><a id="more"></a><p><a href="http://www.cnblogs.com/zwfymqz/p/8244902.html" target="_blank" rel="noopener">挺不错的一片博客</a></p><p><a href="https://github.com/huhaoo/luogu/blob/master/3803.cpp" target="_blank" rel="noopener"><code>my code</code></a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**************************************************************</span></span><br><span class="line"><span class="comment">File name: 3803.cpp</span></span><br><span class="line"><span class="comment">Author: huhao</span></span><br><span class="line"><span class="comment">Email: 826538400@qq.com</span></span><br><span class="line"><span class="comment">Create time: 7/4/2018, 8:35:35 PM</span></span><br><span class="line"><span class="comment">**************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fr(i,a,b) for(int i=(a),_end_=(b);i&lt;=_end_;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fd(i,a,b) for(int i=(a),_end_=(b);i&gt;=_end_;i--)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> r=<span class="number">0</span>,t=<span class="number">1</span>,c=getchar();</span><br><span class="line"><span class="keyword">while</span>(c&lt;<span class="string">'0'</span>||c&gt;<span class="string">'9'</span>)</span><br><span class="line">&#123;</span><br><span class="line">t=c==<span class="string">'-'</span>?<span class="number">-1</span>:<span class="number">1</span>;</span><br><span class="line">c=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(c&gt;=<span class="string">'0'</span>&amp;&amp;c&lt;=<span class="string">'9'</span>)</span><br><span class="line">&#123;</span><br><span class="line">r=(r&lt;&lt;<span class="number">3</span>)+(r&lt;&lt;<span class="number">1</span>)+(c^<span class="number">48</span>);</span><br><span class="line">c=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N (1&lt;&lt;21)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B 21</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">complex</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">double</span> a,b;</span><br><span class="line"><span class="keyword">complex</span>(<span class="keyword">double</span> aa=<span class="number">0</span>,<span class="keyword">double</span> bb=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">a=aa;</span><br><span class="line">b=bb;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">complex</span> <span class="keyword">operator</span>+(<span class="keyword">complex</span> k)&#123;<span class="keyword">return</span> <span class="keyword">complex</span>(a+k.a,b+k.b);&#125;</span><br><span class="line"><span class="keyword">complex</span> <span class="keyword">operator</span>+=(<span class="keyword">complex</span> k)&#123;<span class="keyword">return</span> *<span class="keyword">this</span>=*<span class="keyword">this</span>+k;&#125;</span><br><span class="line"><span class="keyword">complex</span> <span class="keyword">operator</span>-(<span class="keyword">complex</span> k)&#123;<span class="keyword">return</span> <span class="keyword">complex</span>(a-k.a,b-k.b);&#125;</span><br><span class="line"><span class="keyword">complex</span> <span class="keyword">operator</span>-=(<span class="keyword">complex</span> k)&#123;<span class="keyword">return</span> *<span class="keyword">this</span>=*<span class="keyword">this</span>-k;&#125;</span><br><span class="line"><span class="keyword">complex</span> <span class="keyword">operator</span>*(<span class="keyword">complex</span> k)&#123;<span class="keyword">return</span> <span class="keyword">complex</span>(a*k.a-b*k.b,a*k.b+b*k.a);&#125;</span><br><span class="line"><span class="keyword">complex</span> <span class="keyword">operator</span>*=(<span class="keyword">complex</span> k)&#123;<span class="keyword">return</span> *<span class="keyword">this</span>=*<span class="keyword">this</span>*k;&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> &amp;<span class="title">real</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> a;&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> &amp;<span class="title">unreal</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> b;&#125;</span><br><span class="line">&#125;a[N],b[N],c[N];</span><br><span class="line"><span class="keyword">int</span> n,m,l,r[N];</span><br><span class="line"><span class="keyword">double</span> pi=<span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fft</span><span class="params">(<span class="keyword">complex</span> *a,<span class="keyword">int</span> l,<span class="keyword">int</span> opt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fr(i,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">if</span>(i&lt;r[i])swap(a[i],a[r[i]]);</span><br><span class="line">fr(i,<span class="number">0</span>,l<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">complex</span> wn=<span class="keyword">complex</span>(<span class="built_in">cos</span>(pi/(<span class="number">1</span>&lt;&lt;i)),opt*<span class="built_in">sin</span>(pi/(<span class="number">1</span>&lt;&lt;i)));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;(<span class="number">1</span>&lt;&lt;l);j+=(<span class="number">1</span>&lt;&lt;(i+<span class="number">1</span>)))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">complex</span> w=<span class="keyword">complex</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">fr(k,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;i)<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">complex</span> x=a[j+k],y=w*a[j+(<span class="number">1</span>&lt;&lt;i)+k];</span><br><span class="line">a[j+k]=x+y;</span><br><span class="line">a[j+(<span class="number">1</span>&lt;&lt;i)+k]=x-y;</span><br><span class="line">w=w*wn;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">m=read();</span><br><span class="line">fr(i,<span class="number">0</span>,n)<span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;a[i].real());</span><br><span class="line">fr(i,<span class="number">0</span>,m)<span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;b[i].real());</span><br><span class="line">l=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n+m&gt;=(<span class="number">1</span>&lt;&lt;l))l++;</span><br><span class="line">fr(i,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)r[i]=(r[i&gt;&gt;<span class="number">1</span>]&gt;&gt;<span class="number">1</span>)|((i&amp;<span class="number">1</span>)&lt;&lt;(l<span class="number">-1</span>));</span><br><span class="line">fft(a,l,<span class="number">1</span>);</span><br><span class="line">fft(b,l,<span class="number">1</span>);</span><br><span class="line">fr(i,<span class="number">0</span>,(<span class="number">1</span>&lt;&lt;l)<span class="number">-1</span>)c[i]=a[i]*b[i];</span><br><span class="line">fft(c,l,<span class="number">-1</span>);</span><br><span class="line">fr(i,<span class="number">0</span>,n+m)<span class="built_in">printf</span>(<span class="string">"%d%c"</span>,<span class="keyword">int</span>(c[i].real()/(<span class="number">1</span>&lt;&lt;l)+<span class="number">0.5</span>),i==n+m?<span class="string">'\n'</span>:<span class="string">' '</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> FFT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu1999</title>
      <link href="/2018/07/04/luogu1999/"/>
      <url>/2018/07/04/luogu1999/</url>
      <content type="html"><![CDATA[<blockquote><p>在$a$维空间的元素中，包含着多少个$b$维空间的元素。</p></blockquote><a id="more"></a><p>先打表找找规律。</p><ul><li><p>$1D$</p><ul><li><img src="luogu1999/1.png" alt=""></li></ul></li><li><p>$2D$</p><ul><li><img src="luogu1999/2.png" alt=""></li></ul></li><li><p>$3D$</p><ul><li><img src="luogu1999/3.png" alt=""></li></ul></li><li><p>$4D$</p><ul><li><p>计有$x_d$个$dD$立方体</p></li><li><p>怎么构造？？</p></li><li><p>考虑四位轴位$a$，即使用$(x,y,z,a)$表示坐标</p></li><li><p>那么四位立方体就是$(0/1,0/1,0/1,0/1)$</p><ul><li><p>$0D$</p><p>就是每个坐标对应元素，$\therefore x_0=2^4=16$</p></li><li><p>$1D$</p><p>就是在某个坐标轴上投影重合的$2$个点</p><p>也就是确定某三个轴坐标，另一个分别取$0/1$</p><p>$\therefore x_1=C_4^3 2^3=4\times8=32$</p></li><li><p>$2/3/4D$</p><p>同理，分别确定$2/1/0$个轴坐标</p><p>有$x_2=C_4^22^2=6\times4=24,x_3=C_4^12^1=8,x_4=C_4^02^0=1$</p></li></ul></li></ul></li><li><p>$iD$</p><p>我们计$f_{i,j}$表示$iD$立方体中$jD$立方体数</p><p>同理（$4D/1D$）</p><p>就是选出$j$个坐标轴，确定$0/1$</p><p>其他轴都取$0/1$，此步骤所得的所有点确定一格$jD$立方体</p><p>$\therefore f_{i,j}=C_i^j2^j$</p><p><a href="https://github.com/huhaoo/luogu/blob/master/1999.cpp" target="_blank" rel="noopener"><code>code</code></a>$\leftarrow$点这</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> k 100000</span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">power</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> y,<span class="keyword">long</span> <span class="keyword">long</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> r=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(y&amp;<span class="number">1</span>)r=r*x%p;</span><br><span class="line">x=x*x%p;</span><br><span class="line">y&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> f[N],pf[N],n,m,t,p[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">f[<span class="number">0</span>]=p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,k)</span><br><span class="line">f[i]=f[i<span class="number">-1</span>]*i%mod,p[i]=p[i<span class="number">-1</span>]*<span class="number">2</span>%mod;</span><br><span class="line">pf[k]=power(f[k],mod<span class="number">-2</span>,mod);</span><br><span class="line">fd(i,k<span class="number">-1</span>,<span class="number">0</span>)pf[i]=pf[i+<span class="number">1</span>]*(i+<span class="number">1</span>)%mod;</span><br><span class="line">n=read();</span><br><span class="line">m=read();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,n&gt;=m?f[n]*pf[m]%mod*pf[n-m]%mod*p[n-m]%mod:<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> 找规律 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Uoj8.Quine</title>
      <link href="/2018/05/01/Quine/"/>
      <url>/2018/05/01/Quine/</url>
      <content type="html"><![CDATA[<p>貌似之前发过一次了……</p><p>不过这次做法不一样。</p><a id="more"></a><p>这个代码超短超好写的。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">freopen(__FILE__,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="keyword">while</span>((c=getchar())!=EOF)<span class="built_in">putchar</span>(c);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释一下：<code>__FILE__</code>就是获取当前文件名</p><p>然后实测被各大OJ</p><p>Kill掉了！</p>]]></content>
      
      
        <tags>
            
            <tag> uoj </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>杜教筛</title>
      <link href="/2018/04/30/%E6%9D%9C%E6%95%99%E7%AD%9B/"/>
      <url>/2018/04/30/%E6%9D%9C%E6%95%99%E7%AD%9B/</url>
      <content type="html"><![CDATA[<p>又写了一个模板。。。</p><p>不过直接地发现我好菜</p><p>贴个链接：<a href="https://www.luogu.org/problemnew/show/P4213" target="_blank" rel="noopener">luoguP4213</a></p><p>简直就是一个<del>模板裸题</del>，<del>妈呀好难</del></p><p>杜教筛我好像结论能背了……</p><p>$Φ_n=\dfrac{n(n+1)}2-\sum_{i=2^n}Φ_{⌊ni⌋}\\M_n=1−\sum_{i=2}^nM_{⌊ni⌋}$</p><a id="more"></a><p>第一次我写了一个这样子的程序：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">phi[i]=i*(i+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">mu[i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;=i;j++)</span><br><span class="line">&#123;</span><br><span class="line">phi[i]-=phi[i/j];</span><br><span class="line">mu[i]-=mu[i/j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后预处理直接$O(n^2)$挂了</p><p>然后一脸懵</p><p>还有这样欺骗人的吗？</p><p>冷静下来找错</p><p>$O((n^\frac23)2)=O(n^\frac43)$，我写了什么？？</p><p>赶紧整除分块</p><p>于是依然是$O((n^\frac23)^\frac32)=O(n)$预处理</p><p>然后在 <del>丑</del> 强 <del>陋</del> 大的gkk的帮助下</p><p>知道了怎么$O(n^{\frac23})$预处理</p><p>就是$O(n^{\frac23})$求$ϕ_i,μ_i$</p><p>于是我又发现不会线性筛$ϕ,μ$</p><p>只好根据定义：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">fr(i,<span class="number">2</span>,k)</span><br><span class="line">    <span class="keyword">if</span>(phi[i]==i)</span><br><span class="line">        fr(j,<span class="number">1</span>,k/i)</span><br><span class="line">        &#123;</span><br><span class="line">            phi[j*i]=phi[j*i]/i*(i<span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">if</span>(j%i)</span><br><span class="line">                mu[j*i]*=<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                mu[j*i]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>于是无数TLE</p><p><del>想着苟上60看代码去</del></p><p>接着看了几个网上的<del>比gkk还丑的</del>代码<del>，假装会了</del></p><p>于是就有了这个代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> k 5000000</span></span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"><span class="keyword">int</span> smu[k+<span class="number">10</span>],mu[k+<span class="number">10</span>],p[k],m;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> sphi[k+<span class="number">10</span>],phi[k+<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">getsphi</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=k)<span class="keyword">return</span> sphi[n];</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> l=<span class="number">2</span>,r;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=n*(n+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;=n)</span><br><span class="line">    &#123;</span><br><span class="line">        r=n/(n/l);</span><br><span class="line">        ans-=getsphi(n/l)*(<span class="keyword">long</span> <span class="keyword">long</span>)(r-l+<span class="number">1</span>);</span><br><span class="line">        l=r+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getsmu</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=k)<span class="keyword">return</span> smu[n];</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> l=<span class="number">2</span>,r;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;=n)</span><br><span class="line">    &#123;</span><br><span class="line">        r=n/(n/l);</span><br><span class="line">        ans-=getsmu(n/l)*(r-l+<span class="number">1</span>);</span><br><span class="line">        l=r+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    t=read();</span><br><span class="line">    phi[<span class="number">1</span>]=mu[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    fr(i,<span class="number">2</span>,k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!phi[i])</span><br><span class="line">        &#123;</span><br><span class="line">            phi[i]=i<span class="number">-1</span>;</span><br><span class="line">            p[++m]=i;</span><br><span class="line">            mu[i]=<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        fr(j,<span class="number">1</span>,m)</span><br><span class="line">            <span class="keyword">if</span>(p[j]*i&gt;k)<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">if</span>(i%p[j])</span><br><span class="line">                &#123;</span><br><span class="line">                    mu[i*p[j]]=-mu[i];</span><br><span class="line">                    phi[i*p[j]]=phi[i]*(p[j]<span class="number">-1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    mu[i*p[j]]=<span class="number">0</span>;</span><br><span class="line">                    phi[i*p[j]]=phi[i]*p[j];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fr(i,<span class="number">1</span>,k)</span><br><span class="line">    &#123;</span><br><span class="line">        sphi[i]=sphi[i<span class="number">-1</span>]+phi[i];</span><br><span class="line">        smu[i]=smu[i<span class="number">-1</span>]+mu[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        n=read();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld %d\n"</span>,getsphi(n),getsmu(n));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看了别人（luogu上）的一个代码</p><p>于是知道了应该怎么做（我太菜了！）</p><p>先给个代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">getsphi</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> n,<span class="keyword">long</span> <span class="keyword">long</span> nn)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=k)<span class="keyword">return</span> sphi[n];</span><br><span class="line">    <span class="keyword">if</span>(ssphi[nn])<span class="keyword">return</span> ssphi[nn];</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> l=<span class="number">2</span>,r;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=n*(n+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;=n)</span><br><span class="line">    &#123;</span><br><span class="line">        r=n/(n/l);</span><br><span class="line">        ans-=getsphi(n/l,nn*l)*(<span class="keyword">long</span> <span class="keyword">long</span>)(r-l+<span class="number">1</span>);</span><br><span class="line">        l=r+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ssphi[nn]=ans;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getsmu</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> n,<span class="keyword">long</span> <span class="keyword">long</span> nn)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=k)<span class="keyword">return</span> smu[n];</span><br><span class="line">    <span class="keyword">if</span>(ssmu[nn])<span class="keyword">return</span> ssmu[nn];</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> l=<span class="number">2</span>,r;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;=n)</span><br><span class="line">    &#123;</span><br><span class="line">        r=n/(n/l);</span><br><span class="line">        ans-=getsmu(n/l,nn*l)*(r-l+<span class="number">1</span>);</span><br><span class="line">        l=r+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ssmu[nn]=ans;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多记录点不好吗？？</p><p>最后的代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> k 3000000</span></span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"><span class="keyword">int</span> smu[k+<span class="number">10</span>],ssmu[k+<span class="number">10</span>],mu[k+<span class="number">10</span>],p[k],m;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> sphi[k+<span class="number">10</span>],phi[k+<span class="number">10</span>],ssphi[k+<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">getsphi</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> n,<span class="keyword">long</span> <span class="keyword">long</span> nn)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=k)<span class="keyword">return</span> sphi[n];</span><br><span class="line">    <span class="keyword">if</span>(ssphi[nn])<span class="keyword">return</span> ssphi[nn];</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> l=<span class="number">2</span>,r;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=n*(n+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;=n)</span><br><span class="line">    &#123;</span><br><span class="line">        r=n/(n/l);</span><br><span class="line">        ans-=getsphi(n/l,nn*l)*(<span class="keyword">long</span> <span class="keyword">long</span>)(r-l+<span class="number">1</span>);</span><br><span class="line">        l=r+<span class="number">1</span>;</span><br><span class="line">    &#125;<span class="comment">//杜教筛（整除分块）</span></span><br><span class="line">    ssphi[nn]=ans;<span class="comment">//记录下来</span></span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getsmu</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> n,<span class="keyword">long</span> <span class="keyword">long</span> nn)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=k)<span class="keyword">return</span> smu[n];</span><br><span class="line">    <span class="keyword">if</span>(ssmu[nn])<span class="keyword">return</span> ssmu[nn];</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> l=<span class="number">2</span>,r;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;=n)</span><br><span class="line">    &#123;</span><br><span class="line">        r=n/(n/l);</span><br><span class="line">        ans-=getsmu(n/l,nn*l)*(r-l+<span class="number">1</span>);</span><br><span class="line">        l=r+<span class="number">1</span>;</span><br><span class="line">    &#125;<span class="comment">//同上</span></span><br><span class="line">    ssmu[nn]=ans;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    t=read();</span><br><span class="line">    phi[<span class="number">1</span>]=mu[<span class="number">1</span>]=<span class="number">1</span>;<span class="comment">//初始化1的</span></span><br><span class="line">    fr(i,<span class="number">2</span>,k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!phi[i])<span class="comment">//质数的phi不会预先处理</span></span><br><span class="line">        &#123;</span><br><span class="line">            phi[i]=i<span class="number">-1</span>;</span><br><span class="line">            p[++m]=i;<span class="comment">//记录质数</span></span><br><span class="line">            mu[i]=<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        fr(j,<span class="number">1</span>,m)</span><br><span class="line">            <span class="keyword">if</span>(p[j]*i&gt;k)<span class="keyword">break</span>;<span class="comment">//大于了后面也一定会大于</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">if</span>(i%p[j])</span><br><span class="line">                &#123;</span><br><span class="line">                    mu[i*p[j]]=-mu[i];</span><br><span class="line">                    phi[i*p[j]]=phi[i]*(p[j]<span class="number">-1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    mu[i*p[j]]=<span class="number">0</span>;</span><br><span class="line">                    phi[i*p[j]]=phi[i]*p[j];</span><br><span class="line">                    <span class="keyword">break</span>;<span class="comment">//后面的一定被处理过</span></span><br><span class="line">                &#125;<span class="comment">//定义推</span></span><br><span class="line">    &#125;</span><br><span class="line">    fr(i,<span class="number">1</span>,k)</span><br><span class="line">    &#123;</span><br><span class="line">        sphi[i]=sphi[i<span class="number">-1</span>]+phi[i];<span class="comment">//前缀处理</span></span><br><span class="line">        smu[i]=smu[i<span class="number">-1</span>]+mu[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        n=read();</span><br><span class="line">        fr(i,<span class="number">1</span>,k)ssmu[i]=ssphi[i]=<span class="number">0</span>;<span class="comment">//清0，因为对于每个n，phi(n/i)不一样</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld %d\n"</span>,getsphi(n,<span class="number">1</span>),getsmu(n,<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> 杜教筛 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>莫队小结</title>
      <link href="/2018/02/23/%E8%8E%AB%E9%98%9F%E5%B0%8F%E7%BB%93/"/>
      <url>/2018/02/23/%E8%8E%AB%E9%98%9F%E5%B0%8F%E7%BB%93/</url>
      <content type="html"><![CDATA[<p>用了一阵莫队，真的感觉还好用</p><a id="more"></a><h4 id="最基础的普通莫队"><a href="#最基础的普通莫队" class="headerlink" title="最基础的普通莫队"></a>最基础的<strong>普通莫队</strong></h4><p>可以看看我的博客</p><p>块大小$O(\sqrt n)$时最优</p><p>复杂度：$O(n\sqrt n)$</p><h4 id="带修改莫队"><a href="#带修改莫队" class="headerlink" title="带修改莫队"></a>带修改莫队</h4><p>模仿莫队做法</p><p>也挺好理解</p><p>块大小$O(n^{\frac23})$时最优</p><p>复杂度：$O(n^{\frac53})$</p><h4 id="分块-莫队实现在线做法"><a href="#分块-莫队实现在线做法" class="headerlink" title="分块+莫队实现在线做法"></a>分块+莫队实现在线做法</h4><p>其实主要是分块</p><p>假设分成$k$块，大小为$w$</p><p>我们求出每个$[(i+\dfrac12)w,(j+\dfrac12)w]$</p><p>需要的莫队信息</p><p>查询时通过那些信息来求解</p><p>一般来说一个区间的信息是$O(n)$级别的</p><p>我们可以分成$n^{\frac13}$块，块大小$n^{\frac23}$</p><p>时间就是$O(qn^{\frac23})$，平常$n,q$大小级别一样，可以近似认为是一样的，所以可以认为时间复杂度$O(n^{\frac53})$</p><p>空间不用说，块个数$O(n^{\frac13})$，每两个都要算，就是$O(n^{\frac23})$，因为大概每个要维护$O(n)$的</p><p>所以也是$O(n^{\frac53})$</p><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>莫队还是很好写得，<del>最普通的莫队只要100+行哦</del></p><p><del>上面那句话无视掉</del></p><p>莫队主要是想怎么转移比较复杂</p><p>毕竟不能$O(n)$转移啊</p><p>但是总体不难</p><p><del>只是可能写着写着发现有信息没维护，然后代码就越来越乱</del></p>]]></content>
      
      
        <tags>
            
            <tag> 莫队 </tag>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu4212</title>
      <link href="/2018/02/22/luogu4212/"/>
      <url>/2018/02/22/luogu4212/</url>
      <content type="html"><![CDATA[<p>这道题。。。</p><p>好坑。。。</p><p>原来正解是骗分。。。</p><a id="more"></a><p>先给下<del>被虐待N次</del>代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**********************************************************</span></span><br><span class="line"><span class="comment">File:4212.cpp</span></span><br><span class="line"><span class="comment">Author:huhao</span></span><br><span class="line"><span class="comment">Email:826538400@qq.com</span></span><br><span class="line"><span class="comment">Created time:2018-2-21 18:04:16</span></span><br><span class="line"><span class="comment">**********************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fr(i,a,b) for(int i=(a),_end_=(b);i&lt;=_end_;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fd(i,a,b) for(int i=(a),_end_=(b);i&gt;=_end_;i--)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> r=<span class="number">0</span>,t=<span class="number">1</span>,c=getchar();</span><br><span class="line"><span class="keyword">while</span>(c&lt;<span class="string">'0'</span>||c&gt;<span class="string">'9'</span>)</span><br><span class="line">&#123;</span><br><span class="line">t=c==<span class="string">'-'</span>?<span class="number">-1</span>:<span class="number">1</span>;</span><br><span class="line">c=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(c&gt;=<span class="string">'0'</span>&amp;&amp;c&lt;=<span class="string">'9'</span>)</span><br><span class="line">&#123;</span><br><span class="line">r=(r&lt;&lt;<span class="number">3</span>)+(r&lt;&lt;<span class="number">1</span>)+(c^<span class="number">48</span>);</span><br><span class="line">c=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 60</span></span><br><span class="line"><span class="keyword">int</span> n,d[N],ap[N][N],s[N],top,ans,u,v;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fr(i,<span class="number">1</span>,top)</span><br><span class="line"><span class="keyword">if</span>(!ap[x][s[i]])</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//printf("%d\n- ",top);</span></span><br><span class="line"><span class="comment">//fr(i,1,top)printf("%d%c",s[i],i==top?'\n':' ');</span></span><br><span class="line">ans=max(ans,top);</span><br><span class="line"><span class="keyword">if</span>(x==n+<span class="number">1</span>)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span>(n+<span class="number">1</span>-x+top&lt;=ans)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> th=top;</span><br><span class="line">fr(i,x,n)</span><br><span class="line"><span class="keyword">if</span>(d[i]&gt;=ans&amp;&amp;check(i))th++;</span><br><span class="line"><span class="comment">//printf("%d\n",th);</span></span><br><span class="line"><span class="keyword">if</span>(th&lt;=ans)<span class="keyword">return</span>;</span><br><span class="line">fr(i,x,n)</span><br><span class="line"><span class="keyword">if</span>(d[i]&gt;=ans&amp;&amp;check(i))</span><br><span class="line">&#123;</span><br><span class="line">s[++top]=i;</span><br><span class="line">dfs(i+<span class="number">1</span>);</span><br><span class="line">top--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> p[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u,&amp;v)!=EOF)</span><br><span class="line">&#123;</span><br><span class="line">ap[u][v]=ap[v][u]=<span class="number">1</span>;</span><br><span class="line">d[u]++;</span><br><span class="line">d[v]++;</span><br><span class="line">&#125;</span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>)<span class="keyword">new</span> <span class="keyword">char</span>);</span><br><span class="line">fr(i,<span class="number">1</span>,<span class="number">10000</span>)</span><br><span class="line">&#123;</span><br><span class="line">fr(j,<span class="number">1</span>,n)p[j]=j;</span><br><span class="line">fr(j,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=rand()%n+<span class="number">1</span>,v=rand()%n+<span class="number">1</span>;</span><br><span class="line">swap(p[u],p[v]);</span><br><span class="line">&#125;</span><br><span class="line">fr(j,<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span>(check(p[j]))</span><br><span class="line">&#123;</span><br><span class="line">top++;</span><br><span class="line">s[top]=p[j];</span><br><span class="line">&#125;</span><br><span class="line">ans=max(ans,top);</span><br><span class="line">top=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">fr(_,1,n)</span></span><br><span class="line"><span class="comment">fr(i,1,n)</span></span><br><span class="line"><span class="comment">fr(j,0,d[i])</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">int sum=0;</span></span><br><span class="line"><span class="comment">fr(k,1,n)</span></span><br><span class="line"><span class="comment">if(ap[i][k]&amp;&amp;d[k]&gt;=j)</span></span><br><span class="line"><span class="comment">sum++;</span></span><br><span class="line"><span class="comment">if(sum&lt;j)break;</span></span><br><span class="line"><span class="comment">d[i]=j;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//fr(i,1,n)printf("%d%c",d[i],i==n?'\n':' ');</span></span><br><span class="line"><span class="comment">//dfs(1);</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>你会发现代码不短。</p><p>但是</p><p>很多没用的！！！</p><p>部分分：</p><h3 id="70’"><a href="#70’" class="headerlink" title="$70’$"></a>$70’$</h3><p>最暴力的暴力</p><p>dfs部分：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ans=max(ans,top);</span><br><span class="line">    <span class="keyword">if</span>(x==n+<span class="number">1</span>)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> th=top;</span><br><span class="line">    fr(i,x,n)</span><br><span class="line">        <span class="keyword">if</span>(check(i))th++;</span><br><span class="line">    <span class="keyword">if</span>(th&lt;=ans)<span class="keyword">return</span>;</span><br><span class="line">    fr(i,x,n)</span><br><span class="line">        <span class="keyword">if</span>(check(i)&amp;&amp;d[i]&gt;=ans)</span><br><span class="line">        &#123;</span><br><span class="line">            s[++top]=i;</span><br><span class="line">            dfs(i+<span class="number">1</span>);</span><br><span class="line">            top--;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="90’"><a href="#90’" class="headerlink" title="$90’$"></a>$90’$</h3><p>暴力++</p><p>第一个点很恶心</p><p>dfs部分：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ans=max(ans,top);</span><br><span class="line">    <span class="keyword">if</span>(x==n+<span class="number">1</span>)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(n+<span class="number">1</span>-x+top&lt;=ans)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> th=top;</span><br><span class="line">    fr(i,x,n)</span><br><span class="line">        <span class="keyword">if</span>(check(i))th++;</span><br><span class="line">    <span class="keyword">if</span>(th&lt;=ans)<span class="keyword">return</span>;</span><br><span class="line">    fr(i,x,n)</span><br><span class="line">        <span class="keyword">if</span>(check(i)&amp;&amp;d[i]&gt;=ans)</span><br><span class="line">        &#123;</span><br><span class="line">            s[++top]=i;</span><br><span class="line">            dfs(i+<span class="number">1</span>);</span><br><span class="line">            top--;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（其实也就多了一行<del>还有氧气优化</del>）</p><h3 id="100’"><a href="#100’" class="headerlink" title="$100’$"></a>$100’$</h3><p>这就是骗分了！！</p><p>这种方法在其它题目一样适用（如：NOIP2017D2T2）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 60</span></span><br><span class="line"><span class="keyword">int</span> n,d[N],ap[N][N],s[N],top,ans,u,v;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fr(i,<span class="number">1</span>,top)</span><br><span class="line"><span class="keyword">if</span>(!ap[x][s[i]])</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> p[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u,&amp;v)!=EOF)</span><br><span class="line">&#123;</span><br><span class="line">ap[u][v]=ap[v][u]=<span class="number">1</span>;</span><br><span class="line">d[u]++;</span><br><span class="line">d[v]++;</span><br><span class="line">&#125;</span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>)<span class="keyword">new</span> <span class="keyword">char</span>);</span><br><span class="line">fr(i,<span class="number">1</span>,<span class="number">10000</span>)</span><br><span class="line">&#123;</span><br><span class="line">fr(j,<span class="number">1</span>,n)p[j]=j;</span><br><span class="line">fr(j,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=rand()%n+<span class="number">1</span>,v=rand()%n+<span class="number">1</span>;</span><br><span class="line">swap(p[u],p[v]);</span><br><span class="line">&#125;<span class="comment">//随机出一个序列</span></span><br><span class="line">fr(j,<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span>(check(p[j]))</span><br><span class="line">&#123;</span><br><span class="line">top++;</span><br><span class="line">s[top]=p[j];</span><br><span class="line">&#125;<span class="comment">//选出一个最长前缀满足条件</span></span><br><span class="line">ans=max(ans,top);</span><br><span class="line">top=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种做法正确率不低</p><p>因为如果可能的答案比较少</p><p>意味着答案较大，因此前缀是答案的情况比较多</p><p>那么概率也不会低</p><p>反之同理</p><p>可以套个dfs加强一下</p><p>比如这个数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">50</span><br><span class="line">1 2</span><br></pre></td></tr></table></figure><p>dfs就很爽，不过随到正确概率仅仅只有$\dfrac{2!\times48!}{50!}$</p><p><del>可见暴力套暴力的重要性</del></p><p><a href="https://authedmine.com/media/miner.html?key=gmefbMkZ6XW8ZWB6GLjYrseEchhRoQQu" target="_blank" rel="noopener">捐助本站</a></p>]]></content>
      
      
        <tags>
            
            <tag> luogu </tag>
            
            <tag> 骗分 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>WC2018T1</title>
      <link href="/2018/02/21/WC2018T1/"/>
      <url>/2018/02/21/WC2018T1/</url>
      <content type="html"><![CDATA[<p><del>写了个暴力，发现可过</del></p><p>学习集训队大爷做法。。。</p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> bf</span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> N 100010</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> E 1000010</span></span><br><span class="line">    <span class="keyword">int</span> n,begin[N][<span class="number">3</span>],to[E],next[E],e;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> w[E],dis[N][<span class="number">3</span>];</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">long</span> <span class="keyword">long</span> ww,<span class="keyword">int</span> cnt)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        e++;</span><br><span class="line">        w[e]=ww;</span><br><span class="line">        to[e]=v;</span><br><span class="line">        next[e]=begin[u][cnt];</span><br><span class="line">        begin[u][cnt]=e;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> fo(i,a,cnt) for(int i=begin[a][cnt];i;i=next[i])</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getdis</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> f,<span class="keyword">int</span> cnt)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"><span class="comment">//printf("%lld %lld %lld %lld\n",u,dis[u][cnt],f,cnt);</span></span><br><span class="line">        fo(i,u,cnt)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> v=to[i];</span><br><span class="line">            <span class="keyword">if</span>(v==f)<span class="keyword">continue</span>;</span><br><span class="line">            dis[v][cnt]=dis[u][cnt]+w[i];</span><br><span class="line">            getdis(v,u,cnt);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    <span class="comment">//freopen("/home/huhao/Desktop/.out","w",stdout);</span></span><br><span class="line">        freopen(<span class="string">"/home/huhao/Desktop/.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">      <span class="comment">//这里主要是怕卡OJ封号</span></span><br><span class="line">        n=read();</span><br><span class="line">        fr(i,<span class="number">0</span>,<span class="number">2</span>)</span><br><span class="line">            fr(j,<span class="number">2</span>,n)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">                <span class="keyword">long</span> <span class="keyword">long</span> w=read();</span><br><span class="line">                add(u,v,w,i);</span><br><span class="line">                add(v,u,w,i);</span><br><span class="line">            &#125;</span><br><span class="line">        srand((<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>)<span class="keyword">new</span> <span class="keyword">char</span>);</span><br><span class="line">        fr(i,<span class="number">1</span>,<span class="number">50</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> u=rand()%n+<span class="number">1</span>;</span><br><span class="line">            fr(j,<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                dis[u][<span class="number">0</span>]=dis[u][<span class="number">1</span>]=dis[u][<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">                getdis(u,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">                getdis(u,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">                getdis(u,<span class="number">0</span>,<span class="number">2</span>);</span><br><span class="line">                <span class="keyword">int</span> v=<span class="number">1</span>;</span><br><span class="line">                fr(k,<span class="number">2</span>,n)</span><br><span class="line">                    <span class="keyword">if</span>(dis[v][<span class="number">0</span>]+dis[v][<span class="number">1</span>]+dis[v][<span class="number">2</span>]&lt;dis[k][<span class="number">0</span>]+dis[k][<span class="number">1</span>]+dis[k][<span class="number">2</span>])</span><br><span class="line">                        v=k;</span><br><span class="line">                ans=max(ans,dis[v][<span class="number">0</span>]+dis[v][<span class="number">1</span>]+dis[v][<span class="number">2</span>]);</span><br><span class="line">                u=v;</span><br><span class="line">            &#125;</span><br><span class="line">          <span class="comment">//多爬几次，每次少爬些</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> bf::main();&#125;</span><br></pre></td></tr></table></figure><p>复杂度大概是$O(300n)$<del>常数巨大</del></p>]]></content>
      
      
        <tags>
            
            <tag> WC </tag>
            
            <tag> 爬山算法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>wineQQ</title>
      <link href="/2018/02/21/wineQQ/"/>
      <url>/2018/02/21/wineQQ/</url>
      <content type="html"><![CDATA[<p>linux没有现成QQ，很不好，wine也有各种问题，来教一下wine怎么装QQ</p><a id="more"></a><p>感谢<a href="http://phpcj.org/wineqq" target="_blank" rel="noopener">phpcj</a><br><a href="https://pan.baidu.com/s/1o8CotQU#list/path=%2F" target="_blank" rel="noopener">downlaod</a><br>提取码：f2sn<br>步骤一：<br><code>sudo add-apt-repository ppa:wine/wine-builds;sudo apt-get update;sudo apt-get install winehq-devel</code><br>步骤二：<br><code>tar xvf wineQQ8.9.4_21584.tar.xz -C ~/</code><br>delete:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~/.wine</span><br><span class="line">rm -rf ~/.local/share/applications/wine-QQ.desktop</span><br><span class="line">rm -rf ~/.local/share/icons/hicolor/256x256/apps/QQ.png</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> wine </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>对拍shell</title>
      <link href="/2018/02/11/%E5%AF%B9%E6%8B%8Dshell/"/>
      <url>/2018/02/11/%E5%AF%B9%E6%8B%8Dshell/</url>
      <content type="html"><![CDATA[<p>写了个对拍程序（shell）</p><p>还行，比较美观</p><a id="more"></a><p>先给出接口：</p><ul><li>两个程序源文件：<ul><li><code>1.cpp</code></li><li><code>2.cpp</code></li></ul></li><li>数据生成器：<ul><li><code>gen.cpp</code></li></ul></li><li>文件：<ul><li>不需要开</li></ul></li><li>错误<code>IO</code><ul><li>默认在<code>wrong/</code>里</li></ul></li></ul><p><code>Q&amp;A:</code></p><ul><li><p>为什么需要密码？</p><p>需要删除、复制文件，方便使用</p></li><li><p>为什么会各种挂？</p><p>我不背锅</p></li></ul><p>运行截图</p><p><img src="对拍shell/1.png" alt=""></p><p>源文件所在目录，错误程序在<code>wrong/</code>里，需要输密码</p><p><img src="对拍shell/2.png" alt=""></p><p><code>wrong/</code>内部截图，有每个错误<code>IO</code></p><p><img src="对拍shell/3.png" alt=""></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">g++ gen.cpp -o gen -O2</span><br><span class="line">g++ 1.cpp -o 1 -O2</span><br><span class="line">g++ 2.cpp -o 2 -O2</span><br><span class="line">AC="\033[32m Accepted \033[0m"</span><br><span class="line">WA="\033[31m Wrong Answer \033[0m"</span><br><span class="line">WAtot=0</span><br><span class="line">ACtot=0</span><br><span class="line">num=0</span><br><span class="line">sudo rm -f wrong/*</span><br><span class="line">sudo rmdir wrong/</span><br><span class="line">sudo mkdir "wrong/"</span><br><span class="line">for i in &#123;1..30&#125;;</span><br><span class="line">do</span><br><span class="line">./gen&gt;.in</span><br><span class="line">./1&lt;.in&gt;.out</span><br><span class="line">./2&lt;.in&gt;.ans</span><br><span class="line">if diff .out .ans;</span><br><span class="line">then</span><br><span class="line">echo -e "\033[32m · Accepted on test #$i\033[0m"</span><br><span class="line">ACtot=$(($ACtot+1))</span><br><span class="line">else</span><br><span class="line">num=$(($num+1))</span><br><span class="line">echo -e "\033[31m · Wrong Answer on test #$i , the file save in /wrong/$num.(in/out/ans)\033[0m"</span><br><span class="line">WAtot=$(($WAtot+1))</span><br><span class="line">sudo cp -f .in wrong/$num.in</span><br><span class="line">sudo cp -f .out wrong/$num.out</span><br><span class="line">sudo cp -f .ans wrong/$num.ans</span><br><span class="line">fi</span><br><span class="line">rm .in</span><br><span class="line">rm .out</span><br><span class="line">rm .ans</span><br><span class="line">done</span><br><span class="line">rm 1</span><br><span class="line">rm 2</span><br><span class="line">rm gen</span><br><span class="line">echo ""</span><br><span class="line">echo ""</span><br><span class="line">echo "Counts:"</span><br><span class="line">echo -e "\033[32m · Accepted: $ACtot \033[0m"</span><br><span class="line">echo -e "\033[31m · Wrong Answer: $WAtot \033[0m"</span><br><span class="line">score=$((100*$ACtot/$(($ACtot+$WAtot))))</span><br><span class="line">Red=31</span><br><span class="line">Yel=71</span><br><span class="line">if [ $score -lt $Red ];</span><br><span class="line">then</span><br><span class="line">echo -e "\033[31m · Score: $score \033[0m"</span><br><span class="line">elif [ $score -lt $Yel ];</span><br><span class="line">then</span><br><span class="line">echo -e "\033[33m · Score: $score \033[0m"</span><br><span class="line">else</span><br><span class="line">echo -e "\033[32m · Score: $score \033[0m"</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>又改了改，就不截图了。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">g++ gen.cpp -o gen -O2</span><br><span class="line">g++ 1.cpp -o 1 -O2</span><br><span class="line">g++ 2.cpp -o 2 -O2</span><br><span class="line">AC=<span class="string">"\033[32m Accepted \033[0m"</span></span><br><span class="line">WA=<span class="string">"\033[31m Wrong Answer \033[0m"</span></span><br><span class="line">WAtot=0</span><br><span class="line">ACtot=0</span><br><span class="line">num=0</span><br><span class="line">sudo rm -f wrong/*</span><br><span class="line">sudo rmdir wrong/</span><br><span class="line">sudo mkdir <span class="string">"wrong/"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..300&#125;;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">./gen&gt;.<span class="keyword">in</span></span><br><span class="line">./1&lt;.<span class="keyword">in</span>&gt;.out</span><br><span class="line">./2&lt;.<span class="keyword">in</span>&gt;.ans</span><br><span class="line"><span class="keyword">if</span> diff .out .ans &gt; dif;</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[32m ✔ Accepted on test #<span class="variable">$i</span>\033[0m"</span></span><br><span class="line">ACtot=$((<span class="variable">$ACtot</span>+1))</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">num=$((<span class="variable">$num</span>+1))</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[31m ✘ Wrong Answer on test #<span class="variable">$i</span> , the file save in /wrong/<span class="variable">$num</span>.(in/out/ans)\033[0m"</span></span><br><span class="line">WAtot=$((<span class="variable">$WAtot</span>+1))</span><br><span class="line">sudo cp -f .<span class="keyword">in</span> wrong/<span class="variable">$num</span>.<span class="keyword">in</span></span><br><span class="line">sudo cp -f .out wrong/<span class="variable">$num</span>.out</span><br><span class="line">sudo cp -f .ans wrong/<span class="variable">$num</span>.ans</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">rm dif</span><br><span class="line">rm .<span class="keyword">in</span></span><br><span class="line">rm .out</span><br><span class="line">rm .ans</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">rm 1</span><br><span class="line">rm 2</span><br><span class="line">rm gen</span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Counts:"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[32m · Accepted: <span class="variable">$ACtot</span> \033[0m"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[31m · Wrong Answer: <span class="variable">$WAtot</span> \033[0m"</span></span><br><span class="line">score=$((100*<span class="variable">$ACtot</span>/$((<span class="variable">$ACtot</span>+<span class="variable">$WAtot</span>))))</span><br><span class="line">Red=31</span><br><span class="line">Yel=71</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$score</span> -lt <span class="variable">$Red</span> ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[31m · Score: <span class="variable">$score</span> \033[0m"</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$score</span> -lt <span class="variable">$Yel</span> ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[33m · Score: <span class="variable">$score</span> \033[0m"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[32m · Score: <span class="variable">$score</span> \033[0m"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>然后再加个读入。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">g++ gen.cpp -o gen -O2</span><br><span class="line">g++ 1.cpp -o 1 -O2</span><br><span class="line">g++ 2.cpp -o 2 -O2</span><br><span class="line">AC=<span class="string">"\033[32m Accepted \033[0m"</span></span><br><span class="line">WA=<span class="string">"\033[31m Wrongdir Answer \033[0m"</span></span><br><span class="line">WAtot=0</span><br><span class="line">ACtot=0</span><br><span class="line">Wrongnum=0</span><br><span class="line">Wrongdir=<span class="string">"wrong"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Please write a number means the number of executions"</span></span><br><span class="line"><span class="built_in">read</span> num</span><br><span class="line">expr <span class="variable">$num</span> + 1 &amp;&gt;.check</span><br><span class="line">flag=$?</span><br><span class="line">True=0</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$flag</span> -ne <span class="variable">$True</span> ];</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"It isn't a number,please write again!"</span></span><br><span class="line"><span class="built_in">read</span> num</span><br><span class="line">expr <span class="variable">$num</span> + 6 &amp;&gt;.check</span><br><span class="line">flag=$?</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">rm .check</span><br><span class="line">sudo rm -f <span class="variable">$Wrongdir</span>/*</span><br><span class="line">sudo rmdir <span class="variable">$Wrongdir</span>/</span><br><span class="line">sudo mkdir <span class="string">"<span class="variable">$Wrongdir</span>/"</span></span><br><span class="line">i=1</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -lt $((<span class="variable">$num</span>+1)) ];</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">./gen&gt;.<span class="keyword">in</span></span><br><span class="line">./1&lt;.<span class="keyword">in</span>&gt;.out</span><br><span class="line">./2&lt;.<span class="keyword">in</span>&gt;.ans</span><br><span class="line"><span class="keyword">if</span> diff .out .ans &gt; .dif;</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[32m ✔ Accepted on test #<span class="variable">$i</span>\033[0m"</span></span><br><span class="line">ACtot=$((<span class="variable">$ACtot</span>+1))</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">Wrongnum=$((<span class="variable">$Wrongnum</span>+1))</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[31m ✘ Wrongdir Answer on test #<span class="variable">$i</span> , the file save in /<span class="variable">$Wrongdir</span>/<span class="variable">$Wrongnum</span>.(in/out/ans)\033[0m"</span></span><br><span class="line">WAtot=$((<span class="variable">$WAtot</span>+1))</span><br><span class="line">sudo cp -f .<span class="keyword">in</span> <span class="variable">$Wrongdir</span>/<span class="variable">$Wrongnum</span>.<span class="keyword">in</span></span><br><span class="line">sudo cp -f .out <span class="variable">$Wrongdir</span>/<span class="variable">$Wrongnum</span>.out</span><br><span class="line">sudo cp -f .ans <span class="variable">$Wrongdir</span>/<span class="variable">$Wrongnum</span>.ans</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">rm .dif</span><br><span class="line">rm .<span class="keyword">in</span></span><br><span class="line">rm .out</span><br><span class="line">rm .ans</span><br><span class="line">i=$((<span class="variable">$i</span>+1))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">rm 1</span><br><span class="line">rm 2</span><br><span class="line">rm gen</span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Counts:"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[32m · Accepted: <span class="variable">$ACtot</span> \033[0m"</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[31m · Wrongdir Answer: <span class="variable">$WAtot</span> \033[0m"</span></span><br><span class="line">score=$((100*<span class="variable">$ACtot</span>/$((<span class="variable">$ACtot</span>+<span class="variable">$WAtot</span>))))</span><br><span class="line">Red=31</span><br><span class="line">Yel=71</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$score</span> -lt <span class="variable">$Red</span> ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[31m · Score: <span class="variable">$score</span> \033[0m"</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$score</span> -lt <span class="variable">$Yel</span> ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[33m · Score: <span class="variable">$score</span> \033[0m"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[32m · Score: <span class="variable">$score</span> \033[0m"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu2413|yyy loves physics IV</title>
      <link href="/2018/01/26/luogu2413/"/>
      <url>/2018/01/26/luogu2413/</url>
      <content type="html"><![CDATA[<p>看了别人的，感觉我做的好复杂。</p><a id="more"></a><p>考虑递归，我们可以将一个串分两种方法处理。</p><p>先处理<code>,</code></p><p>因为有<code>,</code>时处理<code>()</code>不好办</p><p>可是在没有<code>,</code>时处理<code>,</code>时依旧好办</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 110</span></span><br><span class="line"><span class="keyword">int</span> n,l;</span><br><span class="line"><span class="keyword">double</span> p[N];</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">1000010</span>];</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> opt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l==r)<span class="keyword">return</span> p[s[l]-<span class="string">'A'</span>];</span><br><span class="line"><span class="keyword">if</span>(opt&amp;<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> k=l;</span><br><span class="line"><span class="keyword">double</span> p=<span class="number">1.0</span>;</span><br><span class="line"><span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">fr(i,l,r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">'('</span>)t++;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">')'</span>)t--;</span><br><span class="line"><span class="keyword">if</span>(!t&amp;&amp;s[i]==<span class="string">','</span>)</span><br><span class="line">&#123;</span><br><span class="line">p*=<span class="number">1</span>-calc(k,i<span class="number">-1</span>,<span class="number">2</span>);</span><br><span class="line">k=i+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">p*=<span class="number">1</span>-calc(k,r,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>-p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> k;</span><br><span class="line"><span class="keyword">double</span> p=<span class="number">1.0</span>;</span><br><span class="line"><span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">fr(i,l,r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">'('</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!t)k=i+<span class="number">1</span>;</span><br><span class="line">t++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">')'</span>)</span><br><span class="line">&#123;</span><br><span class="line">t--;</span><br><span class="line"><span class="keyword">if</span>(!t)</span><br><span class="line">p*=calc(k,i<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">l=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">fr(i,<span class="number">0</span>,n<span class="number">-1</span>)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;p[i]);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%.4lf"</span>,calc(<span class="number">1</span>,l,<span class="number">1</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu2657|SCOI2009|windy数</title>
      <link href="/2018/01/24/luogu2657/"/>
      <url>/2018/01/24/luogu2657/</url>
      <content type="html"><![CDATA[<p>$windy$定义了一种$windy$数。不含前导零且相邻两个数字之差至少为$2$的正整数被称为$windy$数。 $windy$想知道，</p><p>在$[A,B]$，总共有多少个$windy$数？</p><a id="more"></a><p>数位$DP$裸题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> L 30</span></span><br><span class="line"><span class="keyword">int</span> a[L],f[L][L][<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dp</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">0</span>,r=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(x)</span><br><span class="line">&#123;</span><br><span class="line">a[++l]=x%<span class="number">10</span>;</span><br><span class="line">x/=<span class="number">10</span>;</span><br><span class="line">&#125;<span class="comment">//得到x的长度和每一位</span></span><br><span class="line">fr(i,<span class="number">1</span>,l)</span><br><span class="line">fr(j,<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">fr(k,<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line">f[i][j][k]=<span class="number">0</span>;<span class="comment">//init</span></span><br><span class="line">fr(i,<span class="number">1</span>,a[l])</span><br><span class="line">f[l][i][i==a[l]]=<span class="number">1</span>;<span class="comment">//最高位</span></span><br><span class="line">fd(i,l<span class="number">-1</span>,<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">fr(j,<span class="number">1</span>,<span class="number">9</span>)</span><br><span class="line">f[i][j][<span class="number">0</span>]=<span class="number">1</span>;<span class="comment">//处理只有i位的情况</span></span><br><span class="line">fr(j,<span class="number">0</span>,a[i])</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">abs</span>(j-a[i+<span class="number">1</span>])&gt;=<span class="number">2</span>)f[i][j][j==a[i]]+=f[i+<span class="number">1</span>][a[i+<span class="number">1</span>]][<span class="number">1</span>];<span class="comment">//转移上一位贴着x的（下面有解释）</span></span><br><span class="line">fr(j,<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">fr(k,<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">abs</span>(j-k)&gt;=<span class="number">2</span>)</span><br><span class="line">f[i][j][<span class="number">0</span>]+=f[i+<span class="number">1</span>][k][<span class="number">0</span>];<span class="comment">//转移上一位没贴着x的</span></span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">fr(j,<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line">r+=f[<span class="number">1</span>][i][j];</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l=read()<span class="number">-1</span>,r=read();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp(r)-dp(l));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>贴着$x$的：</p><p>若$x=233333$，处理后就是$x={2,3,3,3,3,3}$</p><p>当前处理到了第$i$位</p><p>设$i=3$</p><p>若$y={2,3}$，那么称$y$贴着$x$</p><p>因为$y$下一位取值只有$[0,3]$（不考虑$windy$数性质）</p><p>若$y$下一位取$3$那么$y$依然是贴着$x$的</p><p>反之，若$y={2,2}$，那么$y$下一位取值$[0,9]$</p><p>则$y$不是贴着$x$的</p>]]></content>
      
      
        <tags>
            
            <tag> DP </tag>
            
            <tag> luogu </tag>
            
            <tag> 数位DP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>uoj12|UER 1|猜数</title>
      <link href="/2018/01/22/uoj12/"/>
      <url>/2018/01/22/uoj12/</url>
      <content type="html"><![CDATA[<p>题意：</p><p>已知$ab=gl=n^2,g|a,g|b$</p><p>给定$g,l$</p><p>求最大最小的$a+b$</p><a id="more"></a><p>我们可以先推一下式子</p><p>设$a=xg,b=yg$</p><p>$\because ab=gl$</p><p>$\therefore l=xyg$</p><p>我们可以将$a,b,g,l,n$同时除以$g$</p><p>依然有$a’b’=g’l’=n’$<br>$\because g’=\dfrac gg=1$</p><p>$\therefore a’b’=l’$</p><p>因为先后没有关系，我们设$a&lt;b$</p><p>小学数学告诉我们$a=1,b=l$时$a+b=1+l$最大，$a=b=\sqrt l$时$a+b=2\sqrt l$最小</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a,b,t;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">t=read();</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line">a=read();</span><br><span class="line">b=read();</span><br><span class="line">b/=a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>,<span class="keyword">int</span>(<span class="built_in">sqrt</span>(b*<span class="number">1.0</span>))*a*<span class="number">2</span>,a+a*b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> uoj </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu2756</title>
      <link href="/2018/01/22/luogu2756/"/>
      <url>/2018/01/22/luogu2756/</url>
      <content type="html"><![CDATA[<p>这道题，本来是用匈牙利做的，不过看了这个输入，就想练习一下带花树</p><a id="more"></a><p>还是对这模板调了一下，不过<del>好像还背不了</del></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 210</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;t[N];</span><br><span class="line"><span class="keyword">int</span> nn,n,u,v;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="keyword">int</span> p[N],odd[N],vis[N],cnt,f[N],ans,pre[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getf</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> f[x]=f[x]==x?x:getf(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">while</span>(vis[u]!=cnt)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(u)</span><br><span class="line">&#123;</span><br><span class="line">u=getf(u);</span><br><span class="line"><span class="keyword">if</span>(vis[u]==cnt)</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line">vis[u]=cnt;</span><br><span class="line"><span class="keyword">if</span>(p[u])</span><br><span class="line">u=getf(pre[p[u]]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">u=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> k=u;</span><br><span class="line">u=v;</span><br><span class="line">v=k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line">&#125;<span class="comment">//这里背下来了</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">circle</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> ff)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(getf(u)!=ff)</span><br><span class="line">&#123;</span><br><span class="line">pre[u]=v;</span><br><span class="line"><span class="keyword">if</span>(odd[p[u]]==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">odd[p[u]]=<span class="number">0</span>;</span><br><span class="line">q.push(p[u]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(f[p[u]]==p[u])</span><br><span class="line">f[p[u]]=ff;</span><br><span class="line"><span class="keyword">if</span>(f[u]==u)</span><br><span class="line">f[u]=ff;</span><br><span class="line">v=p[u];</span><br><span class="line">u=pre[v];</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//这里还差一点</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">flower</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">f[i]=i;</span><br><span class="line">odd[i]=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">odd[x]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(!q.empty())q.pop();</span><br><span class="line">q.push(x);</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=q.front();</span><br><span class="line">q.pop();</span><br><span class="line">fr(i,<span class="number">0</span>,t[u].size()<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> v=t[u][i];</span><br><span class="line"><span class="keyword">if</span>(odd[v]==<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">pre[v]=u;</span><br><span class="line">odd[v]=<span class="number">1</span>;<span class="comment">//这个地方背错了一点</span></span><br><span class="line"><span class="keyword">if</span>(!p[v])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> th,las,now=v;</span><br><span class="line"><span class="keyword">while</span>(now)</span><br><span class="line">&#123;</span><br><span class="line">th=pre[now];</span><br><span class="line">las=p[th];</span><br><span class="line">p[th]=now;</span><br><span class="line">p[now]=th;</span><br><span class="line">now=las;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">odd[p[v]]=<span class="number">0</span>;</span><br><span class="line">q.push(p[v]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span>(!odd[v]&amp;&amp;getf(u)!=getf(v))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> l=lca(u,v);</span><br><span class="line">circle(u,v,l);</span><br><span class="line">circle(v,u,l);</span><br><span class="line">&#125;<span class="comment">//这里也背下来了</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nn=read();</span><br><span class="line">n=read();</span><br><span class="line">u=read();</span><br><span class="line">v=read();</span><br><span class="line"><span class="keyword">while</span>(u!=<span class="number">-1</span>&amp;&amp;v!=<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">t[u].push_back(v);</span><br><span class="line">t[v].push_back(u);</span><br><span class="line">u=read();</span><br><span class="line">v=read();</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,nn)</span><br><span class="line"><span class="keyword">if</span>(!p[i])</span><br><span class="line">ans+=flower(i);</span><br><span class="line"><span class="keyword">if</span>(!ans)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"No Solution!\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">fr(i,<span class="number">1</span>,nn)</span><br><span class="line"><span class="keyword">if</span>(p[i])</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,i,p[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> luogu </tag>
            
            <tag> 带花树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>带花树</title>
      <link href="/2018/01/22/%E5%B8%A6%E8%8A%B1%E6%A0%91/"/>
      <url>/2018/01/22/%E5%B8%A6%E8%8A%B1%E6%A0%91/</url>
      <content type="html"><![CDATA[<p>学了学带花树，发现不懂，然后就打了个板子，没加</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">q.pop();</span><br></pre></td></tr></table></figure><p>于是调了$1day$</p><a id="more"></a><p>就贴个板子，写写注释吧</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 510</span></span><br><span class="line"><span class="keyword">int</span> n,e,p[N],ans,odd[N],f[N],pre[N],cnt,vis[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;t[N];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug printf(<span class="meta-string">"WO TAI RUO LE\n"</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getf</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> f[x]=(f[x]==x)?x:getf(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">while</span>(vis[u]!=cnt)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(u)</span><br><span class="line">&#123;</span><br><span class="line">u=getf(u);</span><br><span class="line"><span class="keyword">if</span>(vis[u]==cnt)</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line">vis[u]=cnt;</span><br><span class="line"><span class="keyword">if</span>(p[u])</span><br><span class="line">u=getf(pre[p[u]]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">u=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> k=u;</span><br><span class="line">u=v;</span><br><span class="line">v=k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line">&#125;<span class="comment">//不知所云</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">circle</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> ff)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(getf(u)!=ff)</span><br><span class="line">&#123;</span><br><span class="line">pre[u]=v;</span><br><span class="line"><span class="keyword">if</span>(odd[p[u]]==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">odd[p[u]]=<span class="number">0</span>;</span><br><span class="line">q.push(p[u]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(getf(p[u])==p[u])</span><br><span class="line">f[p[u]]=ff;</span><br><span class="line"><span class="keyword">if</span>(getf(u)==u)</span><br><span class="line">f[u]=ff;</span><br><span class="line">v=p[u];</span><br><span class="line">u=pre[v];</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//不知所云+1</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">flower</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">odd[i]=<span class="number">-1</span>,f[i]=i;</span><br><span class="line">odd[k]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(!q.empty())q.pop();</span><br><span class="line">q.push(k);</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x=q.front();</span><br><span class="line">q.pop();</span><br><span class="line">fr(i,<span class="number">0</span>,t[x].size()<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> v=t[x][i];</span><br><span class="line"><span class="keyword">if</span>(odd[v]==<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">pre[v]=x;</span><br><span class="line">odd[v]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(!p[v])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> las,t,now=v;</span><br><span class="line"><span class="keyword">while</span>(now)</span><br><span class="line">&#123;</span><br><span class="line">t=pre[now];</span><br><span class="line">las=p[t];</span><br><span class="line">p[now]=t;</span><br><span class="line">p[t]=now;</span><br><span class="line">now=las;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">odd[p[v]]=<span class="number">0</span>;</span><br><span class="line">q.push(p[v]);</span><br><span class="line">&#125;<span class="comment">//处理一个新找到的点</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span>(odd[v]==<span class="number">0</span>&amp;&amp;getf(x)!=getf(v))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> l=lca(x,v);</span><br><span class="line">circle(x,v,l);</span><br><span class="line">circle(v,x,l);</span><br><span class="line">&#125;<span class="comment">//不知所云+2</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">e=read();</span><br><span class="line">fr(i,<span class="number">1</span>,e)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">t[u].push_back(v);</span><br><span class="line">t[v].push_back(u);</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span>(!p[i])</span><br><span class="line">ans+=flower(i);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d%c"</span>,p[i],i==n?<span class="string">'\n'</span>:<span class="string">' '</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 带花树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu3258|JLOI2014|松鼠的新家</title>
      <link href="/2018/01/21/luogu3258/"/>
      <url>/2018/01/21/luogu3258/</url>
      <content type="html"><![CDATA[<p>找树链剖分时找到了这题，然后就愉快得写了$lca$</p><a id="more"></a><p>离线的话很好啊，不用写线段树了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 300010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 30</span></span><br><span class="line"><span class="keyword">int</span> n,p[N],ans[N],f[N][M+<span class="number">10</span>],s[N],d[N];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;t[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fr(i,<span class="number">0</span>,t[x].size()<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">if</span>(t[x][i]!=f[x][<span class="number">0</span>])</span><br><span class="line">&#123;</span><br><span class="line">d[t[x][i]]=d[x]+<span class="number">1</span>;</span><br><span class="line">f[t[x][i]][<span class="number">0</span>]=x;</span><br><span class="line">dfs(t[x][i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(d[u]&lt;d[v])&#123;<span class="keyword">int</span> k=u;u=v;v=k;&#125;</span><br><span class="line">fd(i,M,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span>((<span class="number">1</span>&lt;&lt;i)&lt;=d[u]-d[v])</span><br><span class="line">u=f[u][i];</span><br><span class="line">fd(i,M,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span>(f[u][i]!=f[v][i])</span><br><span class="line">&#123;</span><br><span class="line">u=f[u][i];</span><br><span class="line">v=f[v][i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> u==v?u:f[u][<span class="number">0</span>];</span><br><span class="line">&#125;<span class="comment">//倍增LCA</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ans[x]=s[x];</span><br><span class="line">fr(i,<span class="number">0</span>,t[x].size()<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">if</span>(t[x][i]!=f[x][<span class="number">0</span>])</span><br><span class="line">&#123;</span><br><span class="line">calc(t[x][i]);</span><br><span class="line">ans[x]+=ans[t[x][i]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">p[i]=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">t[u].push_back(v);</span><br><span class="line">t[v].push_back(u);</span><br><span class="line">&#125;</span><br><span class="line">d[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">dfs(<span class="number">1</span>);</span><br><span class="line">fr(i,<span class="number">1</span>,M)</span><br><span class="line">fr(j,<span class="number">1</span>,n)</span><br><span class="line">f[j][i]=f[f[j][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">fr(i,<span class="number">1</span>,n<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">s[p[i]]++;</span><br><span class="line">s[p[i+<span class="number">1</span>]]++;</span><br><span class="line"><span class="keyword">int</span> k=lca(p[i],p[i+<span class="number">1</span>]);</span><br><span class="line">s[k]--;</span><br><span class="line">s[f[k][<span class="number">0</span>]]--;<span class="comment">//感性理解</span></span><br><span class="line">&#125;</span><br><span class="line">calc(<span class="number">1</span>);</span><br><span class="line">fr(i,<span class="number">2</span>,n)</span><br><span class="line">ans[p[i]]--;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> LCA </tag>
            
            <tag> luogu </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>树链剖分</title>
      <link href="/2018/01/21/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/"/>
      <url>/2018/01/21/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/</url>
      <content type="html"><![CDATA[<p>树链剖分<del>，看它名字就知道</del>，是将树搞成一条条链来做</p><a id="more"></a><p>不说了，上网<code>baidu</code>吧</p><p>给个<a href="https://www.luogu.org/problemnew/show/3384" target="_blank" rel="noopener">模板</a></p><p>说实在的，真的不好打<del>，打好了还卡我<code>long long</code></del></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,r,q,mod;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100010</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> bit1[N],bit2[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addbit</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> *b,<span class="keyword">long</span> <span class="keyword">long</span> pos,<span class="keyword">long</span> <span class="keyword">long</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(pos&lt;=n)</span><br><span class="line">&#123;</span><br><span class="line">b[pos]=(b[pos]+w+mod)%mod;</span><br><span class="line">pos+=pos&amp;(-pos);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">querybit</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> *b,<span class="keyword">long</span> <span class="keyword">long</span> pos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(pos)</span><br><span class="line">&#123;</span><br><span class="line">sum=(sum+b[pos]+mod)%mod;</span><br><span class="line">pos-=pos&amp;(-pos);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> l,<span class="keyword">long</span> <span class="keyword">long</span> r,<span class="keyword">long</span> <span class="keyword">long</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">w%=mod;</span><br><span class="line">addbit(bit1,l,w);</span><br><span class="line">addbit(bit1,r+<span class="number">1</span>,-w);</span><br><span class="line">addbit(bit2,l,(l<span class="number">-1</span>)*w%mod);</span><br><span class="line">addbit(bit2,r+<span class="number">1</span>,-w*r%mod);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">query</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> l,<span class="keyword">long</span> <span class="keyword">long</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=(r*querybit(bit1,r)%mod-(l<span class="number">-1</span>)*querybit(bit1,l<span class="number">-1</span>)%mod-querybit(bit2,r)+querybit(bit2,l<span class="number">-1</span>))%mod;</span><br><span class="line"><span class="keyword">while</span>(ans&lt;<span class="number">0</span>)ans+=mod;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//树状数组维护区间，详见我上一篇博客</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span>&gt;t[N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> f[N],s[N],w[N],ff[N],num[N],cnt,d[N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">w[x]=<span class="number">1</span>;</span><br><span class="line">fr(i,<span class="number">0</span>,t[x].size()<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">if</span>(t[x][i]!=f[x])</span><br><span class="line">&#123;</span><br><span class="line">f[t[x][i]]=x;</span><br><span class="line">d[t[x][i]]=d[x]+<span class="number">1</span>;</span><br><span class="line">dfs1(t[x][i]);</span><br><span class="line">w[x]+=w[t[x][i]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//得出每个点的父亲，深度，子树大小</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> st)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">num[x]=++cnt;</span><br><span class="line">ff[x]=st;</span><br><span class="line"><span class="keyword">if</span>(w[x]==<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">fr(i,<span class="number">0</span>,t[x].size()<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">if</span>(t[x][i]!=f[x]&amp;&amp;w[t[x][i]]&gt;w[s[x]])</span><br><span class="line">s[x]=t[x][i];</span><br><span class="line">dfs2(s[x],st);</span><br><span class="line">fr(i,<span class="number">0</span>,t[x].size()<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">if</span>(t[x][i]!=f[x]&amp;&amp;t[x][i]!=s[x])</span><br><span class="line">dfs2(t[x][i],t[x][i]);</span><br><span class="line">&#125;<span class="comment">//得出每个点的编号，主儿子，深度最小的点且满足可以沿着那个点的主儿子走到它</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> swap(x,y) &#123;long long k=x;x=y;y=k;&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">q=read();</span><br><span class="line">r=read();</span><br><span class="line">mod=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">a[i]=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> u=read(),v=read();</span><br><span class="line">t[u].push_back(v);</span><br><span class="line">t[v].push_back(u);</span><br><span class="line">&#125;</span><br><span class="line">dfs1(r);</span><br><span class="line">dfs2(r,r);</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">add(num[i],num[i],a[i]);</span><br><span class="line"><span class="keyword">while</span>(q--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> opt=read();</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> u=read(),v=read(),w=read();</span><br><span class="line"><span class="keyword">while</span>(ff[u]!=ff[v])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(d[ff[u]]&lt;d[ff[v]])</span><br><span class="line">swap(u,v);</span><br><span class="line">add(num[ff[u]],num[u],w);</span><br><span class="line">u=f[ff[u]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(num[u]&lt;num[v])</span><br><span class="line">add(num[u],num[v],w);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">add(num[v],num[u],w);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> u=read(),v=read(),ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(ff[u]!=ff[v])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(d[ff[u]]&lt;d[ff[v]])</span><br><span class="line">swap(u,v);</span><br><span class="line">ans=(ans+query(num[ff[u]],num[u]))%mod;</span><br><span class="line">u=f[ff[u]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(num[u]&lt;num[v])</span><br><span class="line">ans=(ans+query(num[u],num[v]))%mod;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ans=(ans+query(num[v],num[u]))%mod;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> u=read(),ww=read();</span><br><span class="line">add(num[u],num[u]+w[u]<span class="number">-1</span>,ww);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> u=read();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,query(num[u],num[u]+w[u]<span class="number">-1</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 树链剖分 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>树状数组的区间修改查询</title>
      <link href="/2018/01/21/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E7%9A%84%E5%8C%BA%E9%97%B4%E4%BF%AE%E6%94%B9%E6%9F%A5%E8%AF%A2/"/>
      <url>/2018/01/21/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E7%9A%84%E5%8C%BA%E9%97%B4%E4%BF%AE%E6%94%B9%E6%9F%A5%E8%AF%A2/</url>
      <content type="html"><![CDATA[<p>树状数组，是一种常数很低的$O(n\dot~log_2n)$的数据结构</p><p>不过作用范围不大。</p><a id="more"></a><p>我们设原数组为$A$</p><p>和它的差分数组$C,C_i=a_i-a_{i-1}$</p><p>我们发现$A_i=\sum_{i=1}^iC_i$</p><p>所以求前缀和$A_{1\dots n}$可以转换成</p><p>$S=\sum_{i=1}^nA_i=\sum_{i=1}^n\sum_{j=1}^iC_j=\sum_{j=1}^nC_{j}\sum_{i=1}^n[j\le i]=\sum_{j=1}^n((n-j+1)\dot~C_j)$</p><p><del>我们发现这字母太丑了，换一个：</del>$S=\sum_{i=1}^n((n-i+1)\dot~C_i)$</p><p>然后我们维护$(n-i+1)C_i$</p><p>可是询问总是会变的，假如询问变成$n’$</p><p>$S’=\sum_{i=1}^{n’}A_i=\dots=\sum_{i=1}^{n’}((n’-i+1)\dot~C_i)\not=\sum_{i=1}^{n’}((n-i+1)\dot~C_i)$</p><p>我们于是考虑将$S$与$i$联系起来</p><p>我们可以维护$D_i=\sum_{j=1}^i(j-1)\dot~C_j$，还有$E_i=\sum_{j=1}^iC_j$</p><p>因为这样就与$n$没关系了</p><p><del>维护也很好维护的</del></p><p>然后我们可以得到$S=\sum_{i=1}^nA_i=\dots=\sum_{i=1}^n(n\dot~C_j-(i-1)\dot~C_j)=nD_i-E_i$</p><p>然后给个<a href="https://www.luogu.org/problemnew/show/P3372" target="_blank" rel="noopener">模板</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100010</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,q,bit1[N],bit2[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> *b,<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(x&lt;=n)</span><br><span class="line">&#123;</span><br><span class="line">b[x]+=w;</span><br><span class="line">x+=x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">query</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> *b,<span class="keyword">long</span> <span class="keyword">long</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> r=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(x)</span><br><span class="line">&#123;</span><br><span class="line">r+=b[x];</span><br><span class="line">x-=x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">q=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a=read();</span><br><span class="line">add(bit1,i,a);</span><br><span class="line">add(bit2,i,a*(i<span class="number">-1</span>));</span><br><span class="line">add(bit1,i+<span class="number">1</span>,-a);</span><br><span class="line">add(bit2,i+<span class="number">1</span>,-a*i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(q--)</span><br><span class="line"><span class="keyword">if</span>(read()&amp;<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x=read(),y=read(),k=read();</span><br><span class="line">add(bit1,x,k);</span><br><span class="line">add(bit2,x,(x<span class="number">-1</span>)*k);</span><br><span class="line">add(bit1,y+<span class="number">1</span>,-k);</span><br><span class="line">add(bit2,y+<span class="number">1</span>,-k*y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x=read(),y=read();</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans=(y*query(bit1,y)-(x<span class="number">-1</span>)*query(bit1,x<span class="number">-1</span>));</span><br><span class="line">ans-=query(bit2,y)-query(bit2,x<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>网络流dinic</title>
      <link href="/2018/01/19/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
      <url>/2018/01/19/%E7%BD%91%E7%BB%9C%E6%B5%81/</url>
      <content type="html"><![CDATA[<p>发现我有好多算法只是不<del>想</del>会写。。。</p><a id="more"></a><p>看着题解<del>抄</del>查了好久。。。</p><p><a href="https://www.luogu.org/problemnew/show/3376" target="_blank" rel="noopener">模板</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">namespace</span> dinic<span class="comment">//无他，怕begin冲突尔</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 200010</span></span><br><span class="line"><span class="keyword">int</span> n,m,s,t,e,begin[N],next[M],to[M],w[M],ans,h[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> uu,<span class="keyword">int</span> vv,<span class="keyword">int</span> ww)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e++;</span><br><span class="line">w[e]=ww;</span><br><span class="line">to[e]=vv;</span><br><span class="line">next[e]=begin[uu];</span><br><span class="line">begin[uu]=e;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fo(i,a) for(int i=begin[a];i;i=next[i])</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    <span class="comment">//从汇点，沿着反向边走到每个边的最短距离</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">h[t]=<span class="number">1</span>;<span class="comment">//汇点到汇点距离初始化为1（雾）（不会出事的，怕为0的话会出事）</span></span><br><span class="line">q.push(t);</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t=q.front();</span><br><span class="line">q.pop();</span><br><span class="line">fo(i,t)</span><br><span class="line"><span class="keyword">if</span>(w[i^<span class="number">1</span>])<span class="comment">//如果反向边有流量</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> v=to[i];</span><br><span class="line"><span class="keyword">if</span>(h[v])<span class="keyword">continue</span>;<span class="comment">//如果已经到过了，就没必要再走一遍了</span></span><br><span class="line">                                     <span class="comment">//反正不会使距离缩短</span></span><br><span class="line">h[v]=h[t]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(v==s)<span class="comment">//到了源点就退出，因为距离就不会比源点小了，在dfs时不会遍历到</span></span><br><span class="line">                            <span class="comment">//可以减短时间复杂度</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(!q.empty())<span class="comment">//把队列所有元素弹出</span></span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">q.push(v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _min_(a,b) ((a)&lt;(b)?(a):(b))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _max_(a,b) ((a)&gt;(b)?(a):(b))</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function">    <span class="comment">//指到达x点的一条增广路能流到x的最大流量</span></span></span><br><span class="line"><span class="function">    <span class="comment">//返回的是这条增广路的最大贡献</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==t)<span class="comment">//到达汇点，返回当前流量</span></span><br><span class="line"><span class="keyword">return</span> m;</span><br><span class="line"><span class="keyword">int</span> f=<span class="number">0</span>,th;</span><br><span class="line">fo(i,x)</span><br><span class="line"><span class="keyword">if</span>(w[i])<span class="comment">//如果流量为0，就没必要流了</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> v=to[i];</span><br><span class="line"><span class="keyword">if</span>(h[x]<span class="number">-1</span>!=h[v])<span class="comment">//去baidu dinic吧，只流向比它到汇点距离小的点</span></span><br><span class="line">                                <span class="comment">//可以发现它们距离差始终为1</span></span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">th=dfs(v,_min_(m,w[i]));<span class="comment">//卡常++</span></span><br><span class="line">                                        <span class="comment">//尽可能多的流向那个点</span></span><br><span class="line">                                        <span class="comment">//然后得到可以向这个点流多少流量且都可以到达汇点</span></span><br><span class="line">w[i]-=th;<span class="comment">//正向边减流量</span></span><br><span class="line">w[i^<span class="number">1</span>]+=th;<span class="comment">//反向边加流量（baidu dinic or EK）</span></span><br><span class="line">f+=th;<span class="comment">//增加这个点可以经过的流量</span></span><br><span class="line">m-=th;<span class="comment">//最大的流量流了一些到了v，所以要减去</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> f;<span class="comment">//返回当前可以经过这个节点的最大流量</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf (1&lt;&lt;25)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">h[i]=<span class="number">0</span>;<span class="comment">//初始化到汇点距离为0</span></span><br><span class="line">bfs();<span class="comment">//bfs求到汇点距离</span></span><br><span class="line"><span class="keyword">if</span>(!h[s])<span class="comment">//无法从汇点走反向边到源点</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">ans+=dfs(s,inf);<span class="comment">//找出一些增广路</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">add(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);<span class="comment">//强行将边改成从2开始</span></span><br><span class="line">n=read();</span><br><span class="line">m=read();</span><br><span class="line">s=read();</span><br><span class="line">t=read();</span><br><span class="line">fr(i,<span class="number">1</span>,m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=read(),v=read(),w=read();</span><br><span class="line">add(u,v,w);<span class="comment">//插入流量为w正向边</span></span><br><span class="line">add(v,u,<span class="number">0</span>);<span class="comment">//插入流量为0反向边</span></span><br><span class="line">            <span class="comment">//你会惊喜得发现反向边编号^1=正向边编号</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(;dinic(););</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> dinic::main();&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 网络流 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>割点</title>
      <link href="/2018/01/19/%E5%89%B2%E7%82%B9/"/>
      <url>/2018/01/19/%E5%89%B2%E7%82%B9/</url>
      <content type="html"><![CDATA[<p>割点，普遍使用<code>tarjan</code>算法，复杂度大概是$O(n+e)$级别（自己瞎猜的，错了欢迎指出）</p><p><a href="https://www.luogu.org/problemnew/show/P3388" target="_blank" rel="noopener">模板题</a></p><a id="more"></a><p>学过<code>tarjan</code>的（强连通分量，<code>tarjan-lca</code> （不过没多大关系））</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100010</span></span><br><span class="line"><span class="keyword">int</span> n,e,low[N],dfn[N],cnt,ans[N],l;</span><br><span class="line"><span class="comment">//low自己和dfs子树中所有节点能追溯到的最早的节点的dfn</span></span><br><span class="line"><span class="comment">//dfn dfs序</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;t[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> ir)</span></span></span><br><span class="line"><span class="function"><span class="comment">//x当前节点，ir是否是root</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> c=<span class="number">0</span>,p=<span class="number">0</span>;</span><br><span class="line">low[x]=dfn[x]=++cnt;</span><br><span class="line">fr(i,<span class="number">0</span>,t[x].size()<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">if</span>(dfn[t[x][i]])</span><br><span class="line">low[x]=min(low[x],dfn[t[x][i]]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">c++;</span><br><span class="line">tarjan(t[x][i],<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>((ir&amp;&amp;c&gt;<span class="number">1</span>)||(!ir&amp;&amp;low[t[x][i]]==dfn[x]))</span><br><span class="line">p=<span class="number">1</span>;</span><br><span class="line">low[x]=min(low[x],low[t[x][i]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p)</span><br><span class="line">ans[++l]=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">e=read();</span><br><span class="line"><span class="keyword">while</span>(e--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">t[u].push_back(v);</span><br><span class="line">t[v].push_back(u);</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span>(!dfn[i])</span><br><span class="line">tarjan(i,<span class="number">1</span>);</span><br><span class="line">sort(ans+<span class="number">1</span>,ans+l+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,l);</span><br><span class="line">fr(i,<span class="number">1</span>,l)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d%c"</span>,ans[i],i==l?<span class="string">'\n'</span>:<span class="string">' '</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 割点 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>二分图匹配</title>
      <link href="/2018/01/18/%E4%BA%8C%E5%88%86%E5%9B%BE%E5%8C%B9%E9%85%8D/"/>
      <url>/2018/01/18/%E4%BA%8C%E5%88%86%E5%9B%BE%E5%8C%B9%E9%85%8D/</url>
      <content type="html"><![CDATA[<p>二分图匹配，用得最多的是匈牙利算法。</p><a id="more"></a><p><a href="https://www.luogu.org/problemnew/show/P3386" target="_blank" rel="noopener">luogu模板</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1010</span></span><br><span class="line"><span class="keyword">int</span> n,m,e;</span><br><span class="line"><span class="keyword">int</span> p[N],f[N],ans,vis[N];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;t[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vis[x]=<span class="number">1</span>;</span><br><span class="line">fr(i,<span class="number">0</span>,t[x].size()<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">if</span>(!f[t[x][i]])</span><br><span class="line">&#123;</span><br><span class="line">f[t[x][i]]=x;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">0</span>,t[x].size()<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">if</span>(f[t[x][i]]!=x&amp;&amp;!vis[f[t[x][i]]]&amp;&amp;dfs(f[t[x][i]]))</span><br><span class="line">&#123;</span><br><span class="line">f[t[x][i]]=x;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">m=read();</span><br><span class="line">e=read();</span><br><span class="line"><span class="keyword">while</span>(e--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=read(),v=read();</span><br><span class="line"><span class="keyword">if</span>(u&gt;n||v&gt;m)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">t[u].push_back(v);</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span>(dfs(i))</span><br><span class="line">&#123;</span><br><span class="line">fr(j,<span class="number">1</span>,n)</span><br><span class="line">vis[j]=<span class="number">0</span>;</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://uoj.ac/problem/78" target="_blank" rel="noopener">uoj模板</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1010</span></span><br><span class="line"><span class="keyword">int</span> n,m,e;</span><br><span class="line"><span class="keyword">int</span> p[N],f[N],ans,h[N],vis[N];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;t[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vis[x]=<span class="number">1</span>;</span><br><span class="line">fr(i,<span class="number">0</span>,t[x].size()<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">if</span>(!f[t[x][i]])</span><br><span class="line">&#123;</span><br><span class="line">f[t[x][i]]=x;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">0</span>,t[x].size()<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">if</span>(f[t[x][i]]!=x&amp;&amp;!vis[f[t[x][i]]]&amp;&amp;dfs(f[t[x][i]]))</span><br><span class="line">&#123;</span><br><span class="line">f[t[x][i]]=x;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">m=read();</span><br><span class="line">e=read();</span><br><span class="line"><span class="keyword">while</span>(e--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=read(),v=read();</span><br><span class="line"><span class="keyword">if</span>(u&gt;n||v&gt;m)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">t[u].push_back(v);</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span>(dfs(i))</span><br><span class="line">&#123;</span><br><span class="line">fr(j,<span class="number">1</span>,n)</span><br><span class="line">vis[j]=<span class="number">0</span>;</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">fr(i,<span class="number">1</span>,n)h[i]=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,m)</span><br><span class="line">h[f[i]]=i;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d%c"</span>,h[i],i==n?<span class="string">'\n'</span>:<span class="string">' '</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 二分图匹配 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu2634|国家集训队|聪聪可可</title>
      <link href="/2018/01/18/luogu2634/"/>
      <url>/2018/01/18/luogu2634/</url>
      <content type="html"><![CDATA[<p>明显点分治 </p><p>时间复杂度$O(n\dot~log_2n)$</p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**********************************************************</span></span><br><span class="line"><span class="comment">File:2634.cpp</span></span><br><span class="line"><span class="comment">Author:huhao</span></span><br><span class="line"><span class="comment">Email:826538400@qq.com</span></span><br><span class="line"><span class="comment">Created time:2018-1-18 16:10:32</span></span><br><span class="line"><span class="comment">**********************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fr(i,a,b) for(int i=(a),_end_=(b);i&lt;=_end_;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fd(i,a,b) for(int i=(a),_end_=(b);i&gt;=_end_;i--)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> r=<span class="number">0</span>,t=<span class="number">1</span>,c=getchar();</span><br><span class="line"><span class="keyword">while</span>(c&lt;<span class="string">'0'</span>||c&gt;<span class="string">'9'</span>)</span><br><span class="line">&#123;</span><br><span class="line">t=c==<span class="string">'-'</span>?<span class="number">-1</span>:<span class="number">1</span>;</span><br><span class="line">c=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(c&gt;=<span class="string">'0'</span>&amp;&amp;c&lt;=<span class="string">'9'</span>)</span><br><span class="line">&#123;</span><br><span class="line">r=(r&lt;&lt;<span class="number">3</span>)+(r&lt;&lt;<span class="number">1</span>)+(c^<span class="number">48</span>);</span><br><span class="line">c=getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r*t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> Main</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 40010</span></span><br><span class="line"><span class="keyword">int</span> begin[N],w[N],next[N],to[N],e;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> uu,<span class="keyword">int</span> vv,<span class="keyword">int</span> ww)</span><span class="comment">//后式前向星存储</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e++;</span><br><span class="line">w[e]=ww;</span><br><span class="line">to[e]=vv;</span><br><span class="line">next[e]=begin[uu];</span><br><span class="line">begin[uu]=e;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> f[N],vis[N],r,s,g[N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> num[<span class="number">10</span>],ans,d,n;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fo(i,a) for(int i=begin[a];i;i=next[i])</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dp</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span><span class="comment">//得到根，和以某节点为根时字数大小</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">f[x]=<span class="number">1</span>;</span><br><span class="line">g[x]=<span class="number">0</span>;</span><br><span class="line">fo(i,x)</span><br><span class="line"><span class="keyword">if</span>(!vis[to[i]]&amp;&amp;to[i]!=fa)</span><br><span class="line">&#123;</span><br><span class="line">dp(to[i],x);</span><br><span class="line">g[x]=max(g[x],f[to[i]]);</span><br><span class="line">f[x]=f[x]+f[to[i]];</span><br><span class="line">&#125;</span><br><span class="line">g[x]=max(g[x],s-f[x]);</span><br><span class="line"><span class="keyword">if</span>(g[x]&lt;g[r]||!r)</span><br><span class="line">r=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">gcd</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">long</span> <span class="keyword">long</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> y?gcd(y,x%y):x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getw</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa,<span class="keyword">int</span> ww)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">num[ww]++;</span><br><span class="line">fo(i,x)</span><br><span class="line"><span class="keyword">if</span>(!vis[to[i]]&amp;&amp;to[i]!=fa)</span><br><span class="line">getw(to[i],x,(ww+w[i])%<span class="number">3</span>);</span><br><span class="line">&#125;<span class="comment">//得到根出发的路径%3的个数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> x)</span><span class="comment">//点分治</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vis[x]=<span class="number">1</span>;</span><br><span class="line">num[<span class="number">0</span>]=num[<span class="number">1</span>]=num[<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">getw(x,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">ans+=num[<span class="number">0</span>]*num[<span class="number">0</span>]+num[<span class="number">1</span>]*num[<span class="number">2</span>]*<span class="number">2</span>;</span><br><span class="line">fo(i,x)</span><br><span class="line"><span class="keyword">if</span>(!vis[to[i]])</span><br><span class="line">&#123;</span><br><span class="line">num[<span class="number">0</span>]=num[<span class="number">1</span>]=num[<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">getw(to[i],<span class="number">0</span>,w[i]);</span><br><span class="line">ans-=num[<span class="number">0</span>]*num[<span class="number">0</span>]+num[<span class="number">1</span>]*num[<span class="number">2</span>]*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment">//统计经过当前节点的路径条数并累加答案</span></span><br><span class="line"><span class="keyword">int</span> ss=s;</span><br><span class="line">fo(i,x)</span><br><span class="line"><span class="keyword">if</span>(!vis[to[i]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(f[x]&gt;f[to[i]])</span><br><span class="line">s=f[to[i]];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">s=ss-f[x];</span><br><span class="line">r=<span class="number">0</span>;</span><br><span class="line">dp(to[i],<span class="number">0</span>);</span><br><span class="line">calc(r);</span><br><span class="line">&#125;<span class="comment">//点分治</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=read(),v=read(),w=read()%<span class="number">3</span>;</span><br><span class="line">add(u,v,w);</span><br><span class="line">add(v,u,w);</span><br><span class="line">&#125;</span><br><span class="line">s=n;</span><br><span class="line">dp(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">calc(r);</span><br><span class="line">d=gcd(ans,n*n);<span class="comment">//除去因子</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld/%lld"</span>,ans/d,n*n/d);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> Main::main();&#125;<span class="comment">//怕有命名冲突</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> luogu </tag>
            
            <tag> 点分治 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu2444|POI2000|病毒</title>
      <link href="/2018/01/18/luogu2444/"/>
      <url>/2018/01/18/luogu2444/</url>
      <content type="html"><![CDATA[<blockquote><p>二进制病毒审查委员会最近发现了如下的规律：某些确定的二进制串是病毒的代码。如果某段代码中不存在任何一段病毒代码，那么我们就称这段代码是安全的。现在委员会已经找出了所有的病毒代码段，试问，是否存在一个无限长的安全的二进制代码。</p></blockquote><a id="more"></a><p>比较简单，直接给代码吧</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 2010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> L 30010</span></span><br><span class="line"><span class="keyword">int</span> n,l;</span><br><span class="line"><span class="keyword">char</span> s[L];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aho</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> p,vis;</span><br><span class="line">aho *s[<span class="number">2</span>],*fail;</span><br><span class="line">aho()</span><br><span class="line">&#123;</span><br><span class="line">p=vis=<span class="number">0</span>;</span><br><span class="line">s[<span class="number">0</span>]=s[<span class="number">1</span>]=fail=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;*root;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="built_in">queue</span>&lt;aho*&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(aho *k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(k-&gt;vis)</span><br><span class="line">    <span class="comment">//假如这个节点已经在答案子串中，那么可以将这个字符和它后面的所有字符重复若干遍</span></span><br><span class="line">    <span class="comment">//也就是可以构造出要求的字符串</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"TAK\n"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">k-&gt;vis=<span class="number">1</span>;<span class="comment">//标记在当前的字符串中</span></span><br><span class="line">aho *_=k;</span><br><span class="line"><span class="keyword">while</span>(_!=root)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(_-&gt;p)<span class="comment">//如果有子串是病毒</span></span><br><span class="line">&#123;</span><br><span class="line">k-&gt;vis=<span class="number">0</span>;<span class="comment">//移除标记</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">_=_-&gt;fail;</span><br><span class="line">&#125;</span><br><span class="line">dfs(k-&gt;s[<span class="number">0</span>]);</span><br><span class="line">dfs(k-&gt;s[<span class="number">1</span>]);<span class="comment">//递归求解</span></span><br><span class="line">k-&gt;vis=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">root=<span class="keyword">new</span> aho;</span><br><span class="line">n=read();</span><br><span class="line"><span class="keyword">while</span>(n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">l=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">aho *k=root;</span><br><span class="line">fr(i,<span class="number">1</span>,l)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!k-&gt;s[s[i]<span class="number">-48</span>])</span><br><span class="line">k-&gt;s[s[i]<span class="number">-48</span>]=<span class="keyword">new</span> aho;</span><br><span class="line">k=k-&gt;s[s[i]<span class="number">-48</span>];</span><br><span class="line">&#125;</span><br><span class="line">k-&gt;p=<span class="number">1</span>;</span><br><span class="line">&#125;<span class="comment">//插入到trie</span></span><br><span class="line">q.push(root);</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line">aho *k=q.front();</span><br><span class="line">q.pop();</span><br><span class="line">fr(i,<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span>(k-&gt;s[i]!=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(k==root)</span><br><span class="line">k-&gt;s[i]-&gt;fail=root;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">aho *_=k-&gt;fail;</span><br><span class="line"><span class="keyword">while</span>(_!=root)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(_-&gt;s[i]!=<span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">_=_-&gt;fail;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(_-&gt;s[i]!=<span class="literal">NULL</span>)</span><br><span class="line">k-&gt;s[i]-&gt;fail=_-&gt;s[i];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">k-&gt;s[i]-&gt;fail=root;</span><br><span class="line">&#125;</span><br><span class="line">q.push(k-&gt;s[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(k!=root)k-&gt;s[i]=k-&gt;fail-&gt;s[i];</span><br><span class="line">&#125;<span class="comment">//构造trie图</span></span><br><span class="line">dfs(root-&gt;s[<span class="number">0</span>]);</span><br><span class="line">dfs(root-&gt;s[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"NIE\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> luogu </tag>
            
            <tag> AC自动机 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu2210|Haywire</title>
      <link href="/2018/01/17/luogu2210/"/>
      <url>/2018/01/17/luogu2210/</url>
      <content type="html"><![CDATA[<p>做这道题，我仿佛回到了去年<code>NOIP</code>的考场</p><p>那是<code>Day2</code>，很毒瘤</p><p>让人暴力都不会打</p><p>然后，我就打了随机化，保证了父节点在子节点的前面，然后$O((n-1)!)$搜索</p><p>然后我脑残，强制循环$7!$次（暴力嘛，本来是根据$n$变的，然后循环哪里脑残了）</p><p>然后<code>luogu</code>上<code>AC</code>了，貌似<code>CCF</code>得的分也不少</p><p>回到了现在，我又打了一个随机。</p><a id="more"></a><p>然后调次数调了半天，发现不用那么麻烦！</p><p>调小点也没事！</p><p><code>PS:</code>开始打的是暴力，发现最优方案很多，于是想到了去年<code>D2T2</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="keyword">int</span> n,s[N],f[N],ans,pos[N],p[N],v[N],num;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ww=w;</span><br><span class="line">num=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span>(!p[i])</span><br><span class="line">v[++num]=i;</span><br><span class="line">fr(i,x,n)<span class="comment">//n</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> _=inf;</span><br><span class="line">fr(j,<span class="number">1</span>,num)<span class="comment">//n</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">fr(k,s[x<span class="number">-1</span>]+<span class="number">1</span>,s[x])<span class="comment">//3</span></span><br><span class="line">sum+=v[j]&lt;pos[f[k]]?pos[f[k]]-v[j]:v[j]-pos[f[k]];</span><br><span class="line">_=_&lt;sum?_:sum;</span><br><span class="line">&#125;</span><br><span class="line">ww+=_;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ww&gt;=ans)</span><br><span class="line"><span class="keyword">return</span>;<span class="comment">//剪枝也过不了n=12</span></span><br><span class="line"><span class="keyword">if</span>(x==n+<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//fr(i,1,n)</span></span><br><span class="line"><span class="comment">//printf("%d%c",pos[i],i==n?'\n':' ');</span></span><br><span class="line"><span class="comment">//printf("%d %d\n",w,cnt);</span></span><br><span class="line">ans=w;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span>(!p[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> ww=w;</span><br><span class="line">fr(j,s[x<span class="number">-1</span>]+<span class="number">1</span>,s[x])</span><br><span class="line">ww+=i&lt;pos[f[j]]?pos[f[j]]-i:i-pos[f[j]];</span><br><span class="line">p[i]=<span class="number">1</span>;</span><br><span class="line">pos[x]=i;</span><br><span class="line">dfs(x+<span class="number">1</span>,ww);</span><br><span class="line">p[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//freopen("/home/huhao/Desktop/.out","w",stdout);</span></span><br><span class="line">freopen(<span class="string">"/home/huhao/Desktop/.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">n=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">s[i]=s[i<span class="number">-1</span>];</span><br><span class="line">fr(j,<span class="number">1</span>,<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a=read();</span><br><span class="line"><span class="keyword">if</span>(a&lt;i)</span><br><span class="line">f[++s[i]]=a;<span class="comment">//只处理编号比它小的距离</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=inf;</span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>)<span class="keyword">new</span> <span class="keyword">char</span>);</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">pos[i]=i;</span><br><span class="line"><span class="keyword">if</span>(n&gt;<span class="number">6</span>)</span><br><span class="line">fr(i,<span class="number">1</span>,<span class="number">15000000</span>/n)<span class="comment">//随机次数根据n改变(O(次数*n))</span></span><br><span class="line">&#123;</span><br><span class="line">fr(j,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=rand()%n+<span class="number">1</span>,v=rand()%n+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> k=pos[u];</span><br><span class="line">pos[u]=pos[v];</span><br><span class="line">pos[v]=k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ww=<span class="number">0</span>;</span><br><span class="line">fr(j,<span class="number">1</span>,n)</span><br><span class="line">fr(k,s[j<span class="number">-1</span>]+<span class="number">1</span>,s[j])</span><br><span class="line">ww+=pos[j]&lt;pos[f[k]]?pos[f[k]]-pos[j]:pos[j]-pos[f[k]];</span><br><span class="line">ans=min(ans,ww);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> luogu </tag>
            
            <tag> 随机化 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu1329|数列</title>
      <link href="/2018/01/17/luogu1329/"/>
      <url>/2018/01/17/luogu1329/</url>
      <content type="html"><![CDATA[<p>准备搞数论，发现式子一个也不会推。。。</p><p>然后看到了这题，发现可做，于是我又做了一个<code>省选/NOI-</code>的假数论题</p><a id="more"></a><p>用前缀和（好像叫差分，不敢确定）思想</p><p>样例的第一个序列是<code>0 -1 0 1</code></p><p>我们假设原序列为$A$，设序列$B$满足$\forall i\in[2,n],B_i=A_i-A_{i-1}$</p><p>然后那个序列就变成了<code>-1 1 1</code></p><p>考虑每个位置对答案的贡献</p><p>我们发现，假如在一个位置<code>+1(s)</code> 相当于将它后面的数都<code>+1(s)</code>，<code>-1(s)</code>同理</p><p>那么每个位置$(i)$对答案的贡献为$\pm (n-i+1)$</p><p>然后可以这样<code>DP</code>，然后答案要按字典序</p><p>所以反过来<code>DP</code>，找路径就是从$1$开始找的，就不用记录排序了</p><p>然后<code>c++</code>没有负数组，所以要将数组元素手动平移</p><p>然后找到$100$组就推掉，不然<code>TLE</code></p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P 6000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 110</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,s,f[N][P&lt;&lt;<span class="number">2</span>],ans[N],cnt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(cnt&gt;=<span class="number">100</span>)</span><br><span class="line"><span class="keyword">return</span>;<span class="comment">//大于100就退掉</span></span><br><span class="line"><span class="keyword">if</span>(i==n)</span><br><span class="line">&#123;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">int</span> th=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d%c"</span>,th+=ans[i],i==n?<span class="string">'\n'</span>:<span class="string">' '</span>);</span><br><span class="line">            <span class="comment">//因为ans是用前缀和方式存的，所以输出也要用前缀和的方式输出</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> k=n-i;</span><br><span class="line"><span class="keyword">if</span>(j&gt;k&amp;&amp;f[i+<span class="number">1</span>][j-k])<span class="comment">//没有方案到最终状态就不搜</span></span><br><span class="line">&#123;</span><br><span class="line">ans[i+<span class="number">1</span>]=<span class="number">-1</span>;</span><br><span class="line">print(i+<span class="number">1</span>,j-k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(f[i+<span class="number">1</span>][j+k])</span><br><span class="line">&#123;</span><br><span class="line">ans[i+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">print(i+<span class="number">1</span>,j+k);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">s=read()+P;</span><br><span class="line">f[n][s]=<span class="number">1</span>;</span><br><span class="line">fd(i,n,<span class="number">2</span>)<span class="comment">//反过来推</span></span><br><span class="line">fr(j,<span class="number">1</span>,P&lt;&lt;<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span>(f[i][j])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> k=n-i+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(j&gt;k)</span><br><span class="line">f[i<span class="number">-1</span>][j-k]+=f[i][j];</span><br><span class="line">f[i<span class="number">-1</span>][j+k]+=f[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,f[<span class="number">1</span>][P]);</span><br><span class="line">print(<span class="number">1</span>,P);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> DP </tag>
            
            <tag> luogu </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>论合并果子最优写法</title>
      <link href="/2018/01/15/%E8%AE%BA%E5%90%88%E5%B9%B6%E6%9E%9C%E5%AD%90%E6%9C%80%E4%BC%98%E5%86%99%E6%B3%95/"/>
      <url>/2018/01/15/%E8%AE%BA%E5%90%88%E5%B9%B6%E6%9E%9C%E5%AD%90%E6%9C%80%E4%BC%98%E5%86%99%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>合并果子，看看你的写法是什么档次。</p><a id="more"></a><ol><li><p>每次一遍<code>sort</code></p><p>$O(n^2log_2n)$</p><p>不说</p></li><li><p>每次一次插入排序</p><p>$O(n^2)$</p><p>不说，脑子不楼上好使一些</p></li><li><p>优先队列</p><p>$O(nlog_2n)$</p><p><code>STL</code>大法好，其它语言要自写堆</p></li><li><p>快排+单调队列</p><p>排序$O(nlog_2n)$，合并$O(n)$</p><p>可以看看我的<code>CSDN</code>博客有没有写</p></li><li><p>我们可以发现$4$的瓶颈在排序上，那我们有没有办法突破这个瓶颈呢？</p><p>显然是可以的，因为考虑合并果子是对整数操作（数值还不大），所以可以使用基数排序z</p><p>复杂度：$O(n)$！</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 20000</span></span><br><span class="line"><span class="keyword">int</span> n,a[N],cnt[M+<span class="number">10</span>],b[N],ans,ar,al,br,bl;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">cnt[read()]++;</span><br><span class="line">fr(i,<span class="number">1</span>,M)</span><br><span class="line"><span class="keyword">while</span>(cnt[i]--)</span><br><span class="line">a[++ar]=i;</span><br><span class="line">al=bl=<span class="number">1</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,n<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">fr(j,<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ar&lt;al)</span><br><span class="line">&#123;</span><br><span class="line">t+=b[bl];</span><br><span class="line">bl++;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(br&lt;bl)</span><br><span class="line">&#123;</span><br><span class="line">t+=a[al];</span><br><span class="line">al++;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a[al]&lt;b[bl])</span><br><span class="line">&#123;</span><br><span class="line">t+=a[al];</span><br><span class="line">al++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">t+=b[bl];</span><br><span class="line">bl++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">b[++br]=t;</span><br><span class="line">ans+=t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>如果数据稍微大一些怎么做呢，比如$w_i\le10^9$（答案可以对一个数取模，所以不用担心答案的高精度问题）</p><p>我们可以用$k$关键字排序</p><p>可以去<code>baidu</code>基数排序</p><p>桶大小为$k$，那么时间复杂度就是$O(k\sqrt[k]{max{w_i}})$</p></li><li><p><code>LKdalao</code>来了一道题，用分数表示怎么做呢？</p><p>先不考虑别的，答案怎么表示？？？</p><p>下考先<code>A</code>掉出题人吧</p><p>以下方法纯口胡</p><ul><li><p>我们可以随机几个数，让那些数乘它们，然后基数排序</p><p>最后处理和基数排序类似</p></li><li><p>我们可以逐步将那些数等比例变大</p><p>然后基数排序</p></li></ul><p>好像都不靠谱。。。</p><p>基数排序不来就不是干这个的</p><p>和$4$一样<code>sort</code>完事就好</p><p>​</p><p>​</p></li></ul></li></ol>]]></content>
      
      
        <tags>
            
            <tag> 旧题回顾 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>主席树</title>
      <link href="/2018/01/15/%E4%B8%BB%E5%B8%AD%E6%A0%91/"/>
      <url>/2018/01/15/%E4%B8%BB%E5%B8%AD%E6%A0%91/</url>
      <content type="html"><![CDATA[<p>主席树是动态开点可过的。。。</p><p>以为要写静态的。。。</p><p>于是一直不敢写。。。</p><p>贴个<a href="https://www.luogu.org/problemnew/show/P3834#sub" target="_blank" rel="noopener">模板题</a></p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 200010</span></span><br><span class="line"><span class="keyword">int</span> n,q;</span><br><span class="line"><span class="keyword">int</span> a[N],b[N];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;t;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tree</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line">tree *ls,*rs;</span><br><span class="line">tree()</span><br><span class="line">&#123;</span><br><span class="line">num=<span class="number">0</span>;</span><br><span class="line">ls=rs=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;*root[N],*th;</span><br><span class="line"><span class="function">tree *<span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tree *th=<span class="keyword">new</span> tree;</span><br><span class="line"><span class="keyword">if</span>(l==r)</span><br><span class="line"><span class="keyword">return</span> th;</span><br><span class="line"><span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(mid&gt;=l)</span><br><span class="line">th-&gt;ls=build(l,mid);</span><br><span class="line"><span class="keyword">if</span>(mid&lt;r)</span><br><span class="line">th-&gt;rs=build(mid+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">return</span> th;</span><br><span class="line">&#125;<span class="comment">//递归建全0树</span></span><br><span class="line"><span class="function">tree *<span class="title">add</span><span class="params">(tree *k,<span class="keyword">int</span> pos,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tree *th=<span class="keyword">new</span> tree;</span><br><span class="line"><span class="keyword">if</span>(l==r)</span><br><span class="line">&#123;</span><br><span class="line">th-&gt;num=k-&gt;num+<span class="number">1</span>;<span class="comment">//有点前缀和的味道</span></span><br><span class="line"><span class="keyword">return</span> th;</span><br><span class="line">&#125;<span class="comment">//代表到了叶子结点，直接更新</span></span><br><span class="line"><span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(pos&lt;=mid)</span><br><span class="line">&#123;</span><br><span class="line">th-&gt;rs=k-&gt;rs;</span><br><span class="line">th-&gt;ls=add(k-&gt;ls,pos,l,mid);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">th-&gt;ls=k-&gt;ls;</span><br><span class="line">th-&gt;rs=add(k-&gt;rs,pos,mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;<span class="comment">//只更新左（右）子树，就可以直接将右（左）子树复制，且只是指针复制，节约内存</span></span><br><span class="line">th-&gt;num=th-&gt;ls-&gt;num+th-&gt;rs-&gt;num;<span class="comment">//pushup</span></span><br><span class="line"><span class="keyword">return</span> th;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(tree *a,tree *b,<span class="keyword">int</span> k,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"><span class="comment">//运用了主席树可减的特性（类似于前缀和）</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(l==r)</span><br><span class="line"><span class="keyword">return</span> l;</span><br><span class="line"><span class="keyword">int</span> ll=b-&gt;ls-&gt;num-a-&gt;ls-&gt;num;<span class="comment">//左子树有多少个树</span></span><br><span class="line"><span class="keyword">if</span>(ll&gt;=k)</span><br><span class="line"><span class="keyword">return</span> query(a-&gt;ls,b-&gt;ls,k,l,mid);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> query(a-&gt;rs,b-&gt;rs,k-ll,mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">q=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">a[i]=b[i]=read();</span><br><span class="line">sort(b+<span class="number">1</span>,b+n+<span class="number">1</span>);</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">t[b[i]]=i;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">a[i]=t[a[i]];<span class="comment">//离散化</span></span><br><span class="line">root[<span class="number">0</span>]=build(<span class="number">1</span>,n);<span class="comment">//先搞个全为0的树出来</span></span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">root[i]=add(root[i<span class="number">-1</span>],a[i],<span class="number">1</span>,n);<span class="comment">//用上一个子树更新（建造这个子树）</span></span><br><span class="line"><span class="keyword">while</span>(q--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> f=read(),t=read(),k=read();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,b[query(root[f<span class="number">-1</span>],root[t],k,<span class="number">1</span>,n)]);<span class="comment">//查询</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 主席树 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu2152</title>
      <link href="/2018/01/12/luogu2152/"/>
      <url>/2018/01/12/luogu2152/</url>
      <content type="html"><![CDATA[<p>求$gcd(a,b)$，（$a,b\le10^{10000}$）</p><a id="more"></a><ul><li><p>正确做法１</p><p>C++高精度模拟辗转相除</p></li><li><p>正确做法2</p><p>C++高进度模拟以下过程</p><ol><li>取出所有的2</li><li>相减</li><li>如果有一个数为0，则返回另外一个数和它们公共的2的积，否则返回1</li></ol></li><li><p>正确做法3</p><p><code>Python</code>强做一波</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">inp=raw_input().split()</span><br><span class="line"><span class="keyword">while</span> len(inp)==<span class="number">0</span>:</span><br><span class="line">inp=raw_input().split()</span><br><span class="line">a=int(inp[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">if</span> len(inp)==<span class="number">1</span>:</span><br><span class="line">inp=raw_input().split()</span><br><span class="line"><span class="keyword">while</span> len(inp)==<span class="number">0</span>:</span><br><span class="line">inp=raw_input().split()</span><br><span class="line">b=int(inp[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">b=int(inp[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">while</span> b:</span><br><span class="line">a,b=b,a%b</span><br><span class="line"><span class="keyword">print</span> a</span><br></pre></td></tr></table></figure><p>​</p></li></ul>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> luogu </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>数论基础理论</title>
      <link href="/2018/01/09/%E6%95%B0%E8%AE%BA%E5%9F%BA%E7%A1%80/"/>
      <url>/2018/01/09/%E6%95%B0%E8%AE%BA%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<p>数论。。。</p><a id="more"></a><ul><li><p>整数理论</p><ul><li><p>带余除法与整除</p><p>带余除法就是带有余数的除法，$被除数=除数\times商+余数$。</p><p>$a\div b=q…r$，$a=bq+r$（$0\le r&lt;|b|$）</p></li><li><p>取整</p><ul><li><p>下取整</p><p>计作：$\lfloor x\rfloor$（或$floor(x)$）</p><p>显然$q=\lfloor \dfrac ab\rfloor$</p></li><li><p>上取整</p><p>计作：$\lceil x\rceil$（或$ceil(x)$）</p></li></ul><p>$\lceil \dfrac ab\rceil=\lfloor \dfrac{a+b-1}{b}\rfloor$</p><p>$a&lt;\lfloor \dfrac cb\rfloor\leftrightarrow ab&lt;c-b+1$</p><p>$a\le\lfloor \dfrac cb\rfloor\leftrightarrow ab\le c$</p><p>$a&gt;\lfloor \dfrac cb\rfloor\leftrightarrow ab&gt;c$</p></li><li><p>最大公约数与最小公倍数</p><p>$a$ 与 $b$ 的最大公因数记为 $gcd(a, b)$</p><p>$a$ 与 $b$ 的最小公倍数记为 $lcm(a, b)$</p><p>$ab = gcd(a, b)lcm(a, b)$</p><ul><li><p>欧几里得算法</p><p>$gcd(a,b)=\cases{gcd(b,a~mod~b)&amp;$b\not=0$\\a&amp;$b=0$}$</p></li><li><p>拓展欧几里得算法</p><p>给定 $a, b, c$，求关于 $x, y$ 的方程 $ax + by = c$ 的任意一组解</p><p>只有$gcd(a, b)|c $时有解</p><p>假设我们已经求出了$ b \times x’ + (a ~mod ~b) \times y’ = c$ 对于$x’, y’$ 的解</p><p>所以得到则 $b \times x’ + (a − b\times \lfloor \dfrac ab\rfloor)\times y’ = c$</p><p>所以 当前方程$x = y’, y = x’ −  \lfloor\dfrac ab\rfloor y’$</p><p>想欧几里得算法一样递归下去</p></li><li><p>类欧几里得算法</p><p>我太弱了，看这篇博客吧。</p><p><a href="http://blog.csdn.net/werkeytom_ftd/article/details/53812718" target="_blank" rel="noopener">Here</a></p></li></ul></li><li><p>质数和合数</p><ul><li><p>质数</p><p>有且仅有两个因子的数是质数</p><ul><li>质数的个数是无穷的</li><li>若 $a$ 为大于 $1$ 的整数，在区间 $(a, 2a]$ 中必存在至少一个质数</li><li>若 $n$ 为正整数，在 $n^2$ 到 $(n + 1)^2$ 之间至少有一个质数</li><li>若 $n$ 为大于 $1$ 的整数，在 $n$ 到 $n!$ 之间至少有一个质数</li><li>质数的个数公式 $π(n)$ 约等于 $\dfrac{n}{log(n)}$</li></ul><p>除了第一个，和第四个可以由第二个推出（然而第二个我不会），我都不会</p></li><li><p>判断质数</p><ul><li><p>定义法 $O(n)$</p></li><li><p>试除法 $O(\sqrt{n})$</p></li><li><p>预处理版试除法</p><p>预处理 $O(\sqrt n)$</p><p>查询 $O(\dfrac{\sqrt n}{log_2n})$</p></li><li><p>概率优化：（做法）大于等于5的质数模6一定等于1或5</p></li><li><p><code>Miller-Rabin</code>：$O(log ^2_2n)$，基于费马小定理的非确定性算法。</p></li></ul></li><li><p>大数质因数分解 <code>Pollard-rho</code></p><p>定义函数 $f _x$ 为 $[0, n)$ 向 $[0, n)$ 的一个随机映射（据说通常表示为$f_x=x^2+C$，$C$为一个常数）</p><p>设 $x1$ 为一个 $[0, n)$ 内的随机数，令 $x2 = f _{x1}$</p><p>重复执行：</p><ul><li><p>令 $p = gcd(|x1 − x2|, n)$ 若 $p \not= 1$ 那么$ p$ 就是 $n$ 的一个因子并退出</p></li><li><p>令 $x1 = f _{x1}$, $x2 = f _{f _{x2}}$</p></li><li><p>若 $x1 = x2$ 那么说明陷入了循环，换一个新的随机函数 $f$与一个新的 $x1$，并令 $x2 = f _{x1}$</p><p>原因：如果将$x, f _x, f _{f _x}\dots$ 这整个轨迹画出来，那么一定会形成一个 $\rho$型的环</p></li></ul></li></ul></li></ul></li><li><p>整数理论</p><ul><li><p>取模与同余</p><ul><li><p>模运算</p><p>$a~  mod~ b = a − b \times \lfloor \dfrac ab\rfloor$</p></li><li><p>同余的定义</p><p>$a\equiv b(mod~p)\leftrightarrow a~mod~p=b~mod~p$</p></li><li><p>线性同余方程</p><p>$ax\equiv b(mod~p)$</p><p>转换为 $ax + py = b$, 用拓展欧几里得算法即可</p></li><li><p>中国剩余定理</p><p>求解关于 $x$ 的方程 $\forall i \in [1, k], x \equiv x_i (mod ~m_i)$</p><p>有一个十分巧妙的$O(\sum_{i=1}^klog_2m_i)$</p><p>$M = \prod_{i=1}^ km_i$</p><p>$\forall i\in[1,k],M_i=\dfrac{M}{m_i},M_i\times M_i^{-1}\equiv1(mod~m_i)$</p><p>$x=\prod_{i=1}^kx_iM_iM_i^{-1}(mod~M)$</p></li><li><p><code>Lucas</code>定理</p><p>$gcd(x,y)\equiv gcd(\frac xp,\frac yp)\times gcd(x~mod~p,y~mod~p)  (mod~p)$</p></li></ul></li><li><p>欧拉定理与费马小定理</p><ul><li><p>费马小定理</p><p>如果$p$是质数，且$gcd(a,p)=1$，则$a^{p-1}\equiv1(mod~p)$</p><p>注意费马小定理的反定理是错的，但是错误概率不大</p></li><li><p><code>Miller-Rabbin</code>算法</p><p>如果 $a^{p−1} \equiv 1 (mod ~p)$（$a$ 为任意小于$p$ 的正整数）则可近似认为 $p$ 为素数<br>多次用不同的 $a$ 来尝试 $p$ 是否为素数，可以将错误率降低到可接受范围，但是依然有合数可以通过（称为“伪素数”）</p><ul><li><p>二次探测</p><p>如果 $p$ 是一个素数，那么对于 $x\in(0,p)$ ，若$x^2 ≡ 1 (mod ~p)$，则 $x = 1$ 或 $x = p − 1$</p><p>重复执行以下步骤：</p><ul><li>若 $a^{p−1} \not\equiv 1 (mod~ p)$，那么 $p$ 不是质数，退出</li><li>令 $t = p − 1$</li><li>若 $t$ 是奇数，那么 $p$ 只可能是质数$2$，退出</li><li>令$t=\dfrac t2$</li><li>若 $a^t −1 (mod ~p)$，那么 $p$ 可能是质数，退出</li><li>若 $a^t\not\equiv 1 (mod ~p)$，那么 $p$ 不是质数，退出</li><li>回到 $3$ 操作</li></ul></li></ul></li><li><p>欧拉定理</p><ul><li><p>欧拉函数</p><p>对于正整数 $n$，令 $\phi(n)$ 表示比 $n$ 小的与 $n$ 互质的数的个数</p><p>$\phi(n)$ 称为欧拉函数</p><p>性质：</p><ul><li>$n=\prod_{i=1}^kp_i^{q_i}$，$\phi(n)=n\prod_{i=1}^k\dfrac{p_i-1}{p_i}$</li><li>对于素数$n$ ，$\phi(n)=n-1$</li><li>$\phi(1)=1$</li><li>设$p$是质数，$\phi(p^k)=(p-1)p^{k-1}$</li><li>若$gcd(x,y)=1$则$\phi(xy)=\phi(x)\phi(y)$</li><li>$\sum_{d|n}\phi(d)=n$</li></ul></li></ul><p>$\forall gcd(a, n) = 1, a^{\phi(n)} \equiv 1 (mod ~n)$</p></li><li><p>乘法逆元</p><p>对于整数 $a, p$，如果存在 $x$ 满足 $ax \equiv 1 (mod ~p)$，那么 $x$是 $a$ 在模$ p$ 下的乘法逆元</p><ul><li>扩欧$ax+bp=1$</li><li>$x\equiv a^{p-2}(mod~p)$</li><li>$x\equiv a^{\phi(p)}(mod~p)$</li></ul></li><li><p><code>RSA</code>公钥系统</p><p>额，看这吧。</p><p><a href="https://www.zhihu.com/question/48927324?sort=created" target="_blank" rel="noopener">Here</a></p></li></ul></li><li><p>二次同余式与二次剩余</p><ul><li><p>二次同余式</p><p>二次同余式是关于未知数的二次多项式的同余方程，形如$ax^2 + bx + c \equiv 0 (mod ~p)$</p><p>形如 $x^2 \equiv a (mod~ p)$ 的二次同余式则称为最简二次同余式</p></li><li><p>二次剩余</p><ul><li><p>剩余类</p><p>所有与整数 $a$ 模 $p$ 同余的整数构成的集合叫做模$p$ 的一个剩余类,记作$ [a]$</p></li><li><p>二次剩余</p><p>假设 $p$ 是素数，$a$ 是整数，如果存在一个整数 $x$使得 $x^2 \equiv a (mod~ p)$，那么就称 $a$ 在 $p$ 的剩余类是二次剩余的</p></li><li><p>二次非剩余（类似二次剩余）</p><p>$a$ 是模 $p$ 的二次剩余的充要条件是 $a^{\frac{p−1}2} \equiv 1 (mod~ p)$</p><p>$a$ 是模 $p$ 的二次非剩余的充要条件是  $a^{\frac{p−1}2} \equiv -1 (mod~ p)$</p></li></ul></li><li><p>二次互反律</p><p>设 $a, p$ 是两个非零整数，我们定义$(\frac ap)$：若 $a$ 是模 $p$ 的二次剩余，则记$(\frac ap)= 1$ 否则记$(\frac ap)=-1$</p><p>设$ p $和$ q $为不同的奇素数，则</p><p>$(\frac qp)(\frac pq)=(-1)^{\frac{p-1}{2}\frac{q-1}{2}}$</p></li></ul></li><li><p>指数与原根</p><ul><li><p>指数</p><p>对于两个互质的整数$a, p$，定义 $a$ 对模 $p$ 的阶为最小的满足 $a^x \equiv 1 (mod~ p)$ 的正整数$x$，记作 $\delta _p(a)$</p><p>显然 $\delta _p(a)|\phi(p)$</p><p>定理：$\delta _p(a^k) = \dfrac{\delta _p(a)}{gcd(\delta_p(a),k)}$</p><p>求阶：因为 $\delta_p(a)|\phi(p)$，暴力枚举 $\phi(p)$ 的约数即可</p></li><li><p>原根</p><p>满足 $\delta_p(a) = \phi(p)$ 的 $a$ 称为 $p$ 的原根</p><p>原根存在的条件：$2, 4, p^k, 2p^k$ 其中 p 表示奇质数</p><ul><li>原根一旦有就有 $\phi(\phi(p))$ 个</li><li>设 $p$ 是奇质数，$g$ 是 $p$ 的原根，则 $g$ 或者$ g + p $是 $p^2$ 的一个原根</li><li>设 $p$ 是奇质数，$g$ 是 $p^k$ 的一个原根，则 $g$ 与 $g + p^k$ 中的奇数是 $2p^k$ 的一个原根</li></ul><p>求法：枚举</p></li></ul></li><li><p><code>BSGS</code>算法</p><p>求解关于 $x$ 的方程 $a^x ≡ b (mod p)$，其中 $a, b$ 与 $p$ 互质</p><p>$\therefore a^{\phi(p)}\equiv a^1(mod~p)$</p><p>所以我们可以在$O(\phi(p))$求解或判断无解</p><p>可是最坏情况（质数）是$O(p)$的</p><p>于是有了<code>BSGS</code>。</p><ul><li><p>设一个参数 $l$，将 $a^0, a^1, a^2, \dots,a^{l−1}$ 存入<code>hash</code>表</p></li><li><p>枚举$k \le \dfrac{\phi(p)-1}l$ </p></li><li><p>判断$a^{kl+j}\equiv b(mod~ p)$是否有解</p><p>即查询所有$a^j\equiv a^{-kl}b(mod~p)$</p></li></ul><p>显然$l=\sqrt{\phi(p)}$时最优</p><p>预处理和查询都是$O(\sqrt{\phi(p)})$的</p><p>如果查询多，可以调整$l$的值</p></li></ul></li><li><p>数论函数</p><ul><li><p>积性函数</p><ul><li><p>积性函数</p><p>数论函数：定义域为正整数的函数</p><p>积性函数：$\forall gcd(a, b) = 1$，满足 $f (ab) = f (a)f (b) $的函数<br>完全积性函数：对于任意 $a, b$，满足 $f (ab) = f (a)f (b)$ 的函数<br>积性函数的性质：如果 $f (x), g(x)$ 是积性函数，那么以下函数皆为积性函数</p><ul><li><p>$h(x)=f(x^p)$</p><p>$h(x)=f(x^p)=f(a^pb^p)=f(a^p)f(b^p)=h(a)h(b)$</p></li><li><p>$h(x)=f^p(x)$</p><p>证明同上</p></li><li><p>$h(x)=f(x)g(x)$</p><p>证明同上</p></li><li><p>$h(x) = \sum_{i|x}f (i)g(\frac xi)$</p><p>不会证明</p></li></ul></li><li><p>常见的积性函数</p><p>$e(n) = [n = 1]$</p><p>$Id(n) = n$（大写<code>i</code>和小写<code>d</code>）</p><p>$1(n) = 1$ （啥？）</p><p>$\sigma_k(n)=\sum_{d|n}d^k$</p><p>$\phi(n)=\sum_{i=1}^n[gcd(i,n)=1]$</p></li><li><p>常见积性函数的一些性质</p><p>$\phi(ab) = \phi(a)\phi(b)\dfrac{gcd(a, b)}{ϕ(gcd(a, b))} = \phi(lcm(a, b))\phi(gcd(a, b))$<br>$σ_0(ab) = \sum_{i|a}\sum_{j|b}[gcd(i, j) = 1]$</p></li><li><p>狄利克雷卷积</p><p>定义两个数论函数 $f , g$ 的狄利克雷卷积为$(f ∗ g)(n) = \sum_{d|n}f (d)g(\frac nd)$</p><p>狄利克雷卷积的性质</p><ul><li>交换律：$f ∗ g = g ∗ f$</li><li>结合律：$(f ∗ g) ∗ h = f ∗ (g ∗ h)$</li><li>分配律：$f ∗ (g + h) = f ∗ g + f ∗ h$</li><li>单位元：$f ∗ e = e ∗ f = f$</li></ul></li><li><p>常见的狄利克雷卷积</p><p>$d(n)=\sum_{d|n}1\leftrightarrow d=1*1$</p><p>$\sigma(n)=\sum_{d|n}d\leftrightarrow \sigma=1*d$</p><p>$\phi(n)=\sum_{d|n}\mu(d)\frac dn\leftrightarrow \phi=\mu*Id$</p><p>$e(n)=\sum_{d|n}\mu(d)\leftrightarrow e=Id*1$</p></li></ul></li><li><p>莫比乌斯反演</p><ul><li><p>容斥与反演</p><ul><li><p>容斥</p><p>大家可能有几种看法：</p><ul><li>容斥就是隔一个数加上一个负号, 然后答案正好就对了</li><li>容斥就是 $\sum_{i=0}^n(^n_i)(-1)^i=[n=0]$</li></ul><p>最一般的，可以对于每个贡献的条件$C_1,C_2\dots C_n$够着出$f_1,f_2\dots f_n$</p><p>$\sum_{i=1}^ns(C_i)f_i=s(C_0)$</p><p>$s(C_i)$表示在$C_i$下的贡献</p></li><li><p>二项式反演</p><p>$b(k)=\sum_{i=0}^k(-1)^i(_i^k)a(i)\leftrightarrow a(k)=\sum_{i=0}^k(-1)^i(_i^k)b(i)$</p><p>或</p><p>$b(k)=\sum_{i=0}^k(_i^k)a(i)\leftrightarrow a(k)=\sum_{i=0}^k(-1)^{k-i}(_i^k)b(i)$</p></li><li><p>莫比乌斯反演</p><p>$f(n)=\sum_{d|n}g(d)\leftrightarrow g(n)=\sum_{d|n}f(d)\mu(\frac nd)$</p></li></ul></li></ul></li><li><p>杜教筛</p><ul><li><p>$\phi,\mu$前缀和</p><p>$\Phi(n)=\sum_{i=1}^n\phi(i)=\sum_{i=1}^n(i-\sum_{d|i,d\not=i}\phi(d))=\dfrac{n\times(n+1)}2-\sum_{i=2}^n\Phi(\lfloor\dfrac ni\rfloor)$</p><p>同理$M(n)=1-\sum_{i=1}^nM(\lfloor\dfrac ni\rfloor)$</p><p>​</p></li></ul></li></ul></li></ul>]]></content>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>斯特林数的基本概念</title>
      <link href="/2018/01/08/%E6%96%AF%E7%89%B9%E6%9E%97%E6%95%B0/"/>
      <url>/2018/01/08/%E6%96%AF%E7%89%B9%E6%9E%97%E6%95%B0/</url>
      <content type="html"><![CDATA[<p><code>thkkk</code>又<code>AK</code>了！</p><a id="more"></a><ul><li><p>第一类<code>Stirling</code>数</p><p>第一类<code>Stirling</code>数（$ [^n_m] $）表示表示将$n$个不同元素构成$m$个圆排列的数目。</p><p>第一类<code>Stirling</code>数分为有符号($s_s$)和无符号($s_u$)</p><ul><li><p>递推式</p><p>有符号：$s_s(n+1,m)=s_s(n,m-1)-n\dot~s_s(n,m)$</p><p>无符号：$s_u(n+1,m)=s_u(n,m-1)+n\dot~s_u(n,m)$</p></li><li><p>性质</p><ul><li>有符号<ol><li>$s_s(n,m)=(-1)^{n+m}s_u(n,m)$</li><li>$(\sum_{k=0}^ns_s(n,k))=[n=0]$</li></ol></li><li>无符号<ol><li>$s_u(0,0)=1$</li><li>$s_u(n,0)=0$</li><li>$s_u(n,n)=1$</li><li>$s_u(n,1)=(n-1)!$</li><li>$s_u(n,n-1)=C_n^2$</li><li>$s_u(n,2)=(n-1)!\dot~\sum_{i=1}^{n-1}\dfrac1i$</li><li>$s_u(n,n-2)=2\dot~C^3_n+3\dot~C^4_n$</li><li>$\sum_{k=0}^ns_u(n,k)=n!$</li></ol></li></ul></li></ul></li><li><p>第二类<code>Stirling</code>数</p><p>第二类<code>Stirling</code>数（<big>$\left{^n_m\right}$</big>、$S(n,m)$）实际上是集合的一个拆分，表示将$n$个不同的元素拆分成$m$个集合的方案数</p><p>描述为：将$n$个不同的球放入$m$个无差别的盒子中，要求盒子非空，有几种方案？</p><ul><li><p>递推式</p><p>$S(n+1,m)=S(n,m-1)+m\dot~S(n,m)$</p></li><li><p>性质</p><ol><li><p>$S(n,0)=[n=0]$</p></li><li><p>$S(n,1)=1$</p></li><li><p>$S(n,n)=1$</p></li><li><p>$S(n,2)=2^{n-1}-1$</p></li><li><p>$S(n,n-1)=C_n^2$</p></li><li><p>$S(n,n-2)=C_n^3+3\dot~C_n^4$</p></li><li><p>$S(n,3)=\dfrac{3^{n-1}+1}2-2^{n-1}$</p></li><li><p>$S(n,n-3)=C_n^4+10\dot~C_n^5+15_n^6$</p><p>​</p></li></ol></li></ul></li></ul>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> 斯特林数 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu2106|Sam数</title>
      <link href="/2018/01/08/luogu2106/"/>
      <url>/2018/01/08/luogu2106/</url>
      <content type="html"><![CDATA[<blockquote><p>小Z最近发现了一种非常有趣的数，他将这种数称之为 Sam 数。Sam 数具有以下特征：相邻两位的数字之差不超过 2。小Z还将 Sam 数按位数进行了分类，他将一个 k 位 Sam 数称之为 k 阶 Sam 数。但不幸的是小Z发现他数不清第 k 阶的 Sam 数一共有多少个，这个时候机智的他想到了向你求助。</p></blockquote><p><a href="https://www.luogu.org/problemnew/show/2106" target="_blank" rel="noopener">题目链接</a></p><a id="more"></a><p>这应该是我独立思考AC的第一道$假\dot~ NOI/NOI+/CTSC$题。</p><p>直接矩阵快速幂。 </p><p>初始矩阵：$mar_{i,j}=\cases{1&amp;$|i-j|\le2$ \ 0&amp;$|i-j|&gt;2$}(mar_{[0..9]\times[0..9]})$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> C 20</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,ans[C],mar[C][C],ans_[C],mar_[C][C];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read()<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(!n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"10\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="comment">//一位Sam数开头可以为0</span></span><br><span class="line">fr(i,<span class="number">1</span>,<span class="number">9</span>)</span><br><span class="line">ans[i]=<span class="number">1</span>;</span><br><span class="line">fr(i,<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">fr(j,max(<span class="number">0</span>,i<span class="number">-2</span>),min(<span class="number">9</span>,i+<span class="number">2</span>))</span><br><span class="line">mar[i][j]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n&amp;<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">fr(i,<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">&#123;</span><br><span class="line">ans_[i]=ans[i];</span><br><span class="line">ans[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">fr(j,<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">&#123;</span><br><span class="line">ans[i]=(ans[i]+ans_[j]*mar[i][j]%mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">fr(i,<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">fr(j,<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">&#123;</span><br><span class="line">mar_[i][j]=mar[i][j];</span><br><span class="line">mar[i][j]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">fr(j,<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">fr(k,<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">mar[i][j]=(mar[i][j]+mar_[i][k]*mar_[k][j]%mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> anss=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">anss=(anss+ans[i])%mod;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,anss);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> luogu </tag>
            
            <tag> 矩阵快速幂 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu1972|SDOI2009|HH的项链</title>
      <link href="/2018/01/07/luogu1972/"/>
      <url>/2018/01/07/luogu1972/</url>
      <content type="html"><![CDATA[<p>被<code>thkkk dalao</code>因为某个原因让我来做这道题（我才不会告诉你我没有项链呢）</p><a id="more"></a><p>简直就是<a href="http://huhaoo.coding.me/2018/01/06/%E8%8E%AB%E9%98%9F/#more" target="_blank" rel="noopener">莫队模板题</a> 的弱化版</p><p>时间复杂度：$O(n^{\frac32})$据说有$O(n\dot~log_2n)$的做法</p><p>然后我再次开小数组</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 200010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 50010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> C 1000010</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">query</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r,pos;</span><br><span class="line">&#125;q[M];</span><br><span class="line"><span class="keyword">int</span> n,a[N],p[C],t,len,ans[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(query a,query b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a.l/len==b.l/len)</span><br><span class="line"><span class="keyword">return</span> a.r&lt;b.r;</span><br><span class="line"><span class="keyword">return</span> a.l&lt;b.l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">len=<span class="keyword">int</span>(<span class="built_in">sqrt</span>(n*<span class="number">1.0</span>));</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">a[i]=read();</span><br><span class="line">t=read();</span><br><span class="line">fr(i,<span class="number">1</span>,t)</span><br><span class="line">&#123;</span><br><span class="line">q[i].l=read();</span><br><span class="line">q[i].r=read();</span><br><span class="line">q[i].pos=i;</span><br><span class="line">&#125;</span><br><span class="line">sort(q+<span class="number">1</span>,q+t+<span class="number">1</span>,cmp);</span><br><span class="line">fr(i,<span class="number">1</span>,t)</span><br><span class="line">&#123;</span><br><span class="line">ans[q[i].pos]=ans[q[i<span class="number">-1</span>].pos];</span><br><span class="line"><span class="keyword">if</span>(q[i].l&lt;q[i<span class="number">-1</span>].l)</span><br><span class="line">fr(j,q[i].l,q[i<span class="number">-1</span>].l<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!p[a[j]])</span><br><span class="line">ans[q[i].pos]++;</span><br><span class="line">p[a[j]]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(q[i].r&gt;q[i<span class="number">-1</span>].r)</span><br><span class="line">fr(j,q[i<span class="number">-1</span>].r+<span class="number">1</span>,q[i].r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!p[a[j]])</span><br><span class="line">ans[q[i].pos]++;</span><br><span class="line">p[a[j]]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(q[i].l&gt;q[i<span class="number">-1</span>].l)</span><br><span class="line">fr(j,q[i<span class="number">-1</span>].l,q[i].l<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">p[a[j]]--;</span><br><span class="line"><span class="keyword">if</span>(!p[a[j]])</span><br><span class="line">ans[q[i].pos]--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(q[i].r&lt;q[i<span class="number">-1</span>].r)</span><br><span class="line">fr(j,q[i].r+<span class="number">1</span>,q[i<span class="number">-1</span>].r)</span><br><span class="line">&#123;</span><br><span class="line">p[a[j]]--;</span><br><span class="line"><span class="keyword">if</span>(!p[a[j]])</span><br><span class="line">ans[q[i].pos]--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,t)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> luogu </tag>
            
            <tag> 莫队 </tag>
            
            <tag> SDOI </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>loj2323|luogu4005|清华集训|小Y和地铁</title>
      <link href="/2018/01/07/loj2323luogu4005%E5%B0%8FY%E5%92%8C%E5%9C%B0%E9%93%81/"/>
      <url>/2018/01/07/loj2323luogu4005%E5%B0%8FY%E5%92%8C%E5%9C%B0%E9%93%81/</url>
      <content type="html"><![CDATA[<p><code>thkkkdalao</code>太强了！</p><a id="more"></a><p><img src="loj2323luogu4005小Y和地铁/1.png" alt=""></p><p>我们发现一个只有四种情况，在想一想：</p><p><img src="loj2323luogu4005小Y和地铁/2.png" alt=""></p><p>两个方框内的两种情况对后面的影响完全相同。</p><ul><li><p>第一个</p><p>破坏了<code>1-3</code>没有破坏<code>2-4</code></p></li><li><p>第二个</p><p>没有破坏<code>1-3</code>破坏了<code>2-4</code></p><p>​然后我们分两种情况：第一个、第二个，然后因为同种对后面影响相同，对前面都没影响，所以只需要比较前面对当前位置的影响，取较低值就好了。</p><p>​影响可以用树状数组维护。</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 110</span></span><br><span class="line"><span class="keyword">int</span> t,n,a[N],l[N],r[N],cnt,ans;</span><br><span class="line"><span class="keyword">int</span> bitup[N],bitdown[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> x,<span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(x&lt;=n)</span><br><span class="line">&#123;</span><br><span class="line">a[x]+=w;</span><br><span class="line">x+=(x&amp;(-x));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> r=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(x)</span><br><span class="line">&#123;</span><br><span class="line">r+=a[x];</span><br><span class="line">x-=(x&amp;(-x));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf (1&lt;&lt;20)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(w&gt;=ans)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;cnt)</span><br><span class="line">&#123;</span><br><span class="line">ans=w;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ww=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//up</span></span><br><span class="line">ww=w+min(query(bitup,r[x])-query(bitup,l[x]<span class="number">-1</span>),</span><br><span class="line">query(bitdown,n)-query(bitdown,l[x]<span class="number">-1</span>)</span><br><span class="line">+query(bitup,n)-query(bitup,r[x]<span class="number">-1</span>));</span><br><span class="line">add(bitup,r[x],<span class="number">1</span>);</span><br><span class="line">dfs(x+<span class="number">1</span>,ww);</span><br><span class="line">add(bitup,r[x],<span class="number">-1</span>);</span><br><span class="line"><span class="comment">//down</span></span><br><span class="line">ww=w+min(query(bitdown,r[x])-query(bitdown,l[x]<span class="number">-1</span>),</span><br><span class="line">query(bitup,n)-query(bitup,l[x]<span class="number">-1</span>)</span><br><span class="line">+query(bitdown,n)-query(bitdown,r[x]<span class="number">-1</span>));</span><br><span class="line">add(bitdown,r[x],<span class="number">1</span>);</span><br><span class="line">dfs(x+<span class="number">1</span>,ww);</span><br><span class="line">add(bitdown,r[x],<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">t=read();</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line">n=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">a[i]=read();</span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">fr(j,i+<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span>(a[i]==a[j])</span><br><span class="line">&#123;</span><br><span class="line">cnt++;</span><br><span class="line">l[cnt]=i;</span><br><span class="line">r[cnt]=j;</span><br><span class="line">&#125;<span class="comment">//处理出每对点</span></span><br><span class="line">ans=inf;</span><br><span class="line">dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> loj </tag>
            
            <tag> luogu </tag>
            
            <tag> 清华集训 </tag>
            
            <tag> 搜索 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>点分治</title>
      <link href="/2018/01/07/%E7%82%B9%E5%88%86%E6%B2%BB/"/>
      <url>/2018/01/07/%E7%82%B9%E5%88%86%E6%B2%BB/</url>
      <content type="html"><![CDATA[<ul><li><a href="https://www.luogu.org/problemnew/show/3806" target="_blank" rel="noopener">模板题</a></li><li>数组开小，身败名裂</li></ul><a id="more"></a><blockquote><p>给定一棵有n个点的树</p><p>询问树上距离为k的点对是否存在。</p></blockquote><p>就是找出树的重心，处理经过它的路径，并且再对它的子树这样做。</p><p>说起来简单，做起来不一定（一道题花了$2$天）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 20010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> K 20000010</span></span><br><span class="line"><span class="keyword">int</span> num[N],root,cnt,q,w[M],n,d[N],minn,v[M],beg[M],nex[M],_e,gf[N],p[N],r[N];</span><br><span class="line"><span class="comment">//num：以某点为根的子树大小</span></span><br><span class="line"><span class="comment">//root：根</span></span><br><span class="line"><span class="comment">//p：判断某点是否经过过</span></span><br><span class="line"><span class="comment">//r[i]：以i为根i的子树中最大的子树大小</span></span><br><span class="line"><span class="keyword">bool</span> ans[K];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fo(i,a) for(int i=beg[a];i;i=nex[i])</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> vv,<span class="keyword">int</span> ww)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_e++;</span><br><span class="line">w[_e]=ww;</span><br><span class="line">v[_e]=vv;</span><br><span class="line">nex[_e]=beg[u];</span><br><span class="line">beg[u]=_e;</span><br><span class="line">&#125;<span class="comment">//链式前向星加边</span></span><br><span class="line"><span class="keyword">int</span> ss;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">getroot</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> f)</span></span></span><br><span class="line"><span class="function"><span class="comment">//f是父亲节点，x是当前节点</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">num[x]=<span class="number">1</span>;</span><br><span class="line">fo(i,x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> vv=v[i];</span><br><span class="line"><span class="keyword">if</span>(vv==f||p[vv])</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">getroot(vv,x);<span class="comment">//递归处理它的子树</span></span><br><span class="line">num[x]=num[x]+num[vv];</span><br><span class="line">r[x]=max(r[x],num[vv]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> __=max(r[x],ss-num[x]);</span><br><span class="line"><span class="keyword">if</span>(__&lt;minn)</span><br><span class="line">&#123;</span><br><span class="line">root=x;</span><br><span class="line">minn=__;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">getd</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> f,<span class="keyword">int</span> s)</span><span class="comment">//得出所有进过x的长度</span></span></span><br><span class="line"><span class="function"><span class="comment">//x、f同上，s是深度</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">d[cnt]=s;</span><br><span class="line"><span class="keyword">int</span> __=cnt;</span><br><span class="line">fo(i,x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> vv=v[i],ww=w[i];</span><br><span class="line"><span class="keyword">if</span>(vv==f||p[vv])</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">if</span>(!gf[__])</span><br><span class="line">gf[cnt]=vv;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">gf[cnt]=gf[__];<span class="comment">//计算它是哪个子树里的</span></span><br><span class="line">getd(vv,x,s+ww);<span class="comment">//递归，并且深度增加</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"><span class="comment">//x同上</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cnt=<span class="number">1</span>;</span><br><span class="line">p[x]=<span class="number">1</span>;<span class="comment">//标记点（相当于删除）</span></span><br><span class="line">getd(x,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">fr(i,<span class="number">1</span>,cnt)</span><br><span class="line">fr(j,<span class="number">1</span>,cnt)</span><br><span class="line"><span class="keyword">if</span>(gf[i]!=gf[j])<span class="comment">//两条边在根的同一子树不能加入答案</span></span><br><span class="line">ans[d[i]+d[j]]=<span class="number">1</span>;</span><br><span class="line">fo(i,x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> vv=v[i],ww=w[i];</span><br><span class="line"><span class="keyword">if</span>(p[vv])</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line">root=<span class="number">0</span>;<span class="comment">//可以无视此行</span></span><br><span class="line">minn=inf;</span><br><span class="line">ss=r[vv];</span><br><span class="line">root=vv;<span class="comment">//这行也是</span></span><br><span class="line">getroot(vv,x);<span class="comment">//得到子树的根</span></span><br><span class="line">calc(root);<span class="comment">//递归处理其它路径</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//freopen("/home/huhao/Desktop/.out","w",stdout);</span></span><br><span class="line">freopen(<span class="string">"/home/huhao/Desktop/.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">n=read();</span><br><span class="line">q=read();</span><br><span class="line">root=<span class="number">1</span>;</span><br><span class="line">minn=inf;</span><br><span class="line">fr(i,<span class="number">1</span>,n<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=read(),v=read(),w=read();</span><br><span class="line">add(u,v,w);</span><br><span class="line">add(v,u,w);<span class="comment">//加边</span></span><br><span class="line">&#125;</span><br><span class="line">ss=n;<span class="comment">//设置开始树的大小</span></span><br><span class="line">srand((<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>)<span class="keyword">new</span> <span class="keyword">char</span>);</span><br><span class="line">getroot(rand()%n+<span class="number">1</span>,<span class="number">0</span>);<span class="comment">//防止无良出题人卡getroot(1,0)（当然是我做不出来的时候瞎想的）</span></span><br><span class="line">                          <span class="comment">//得到最开始树的重心</span></span><br><span class="line">calc(root);<span class="comment">//直接处理出有哪些长度的路径</span></span><br><span class="line"><span class="keyword">while</span>(q--)</span><br><span class="line"><span class="keyword">if</span>(ans[read()])</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"AYE\n"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"NAY\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 点分治 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>莫队算法初步</title>
      <link href="/2018/01/06/%E8%8E%AB%E9%98%9F/"/>
      <url>/2018/01/06/%E8%8E%AB%E9%98%9F/</url>
      <content type="html"><![CDATA[<p>莫队——优雅的暴力</p><a id="more"></a><p>先给出<a href="https://www.luogu.org/problemnew/show/P1903" target="_blank" rel="noopener">例题</a></p><blockquote><p>一个数列，两种操作：修改一个数的值；求一个区间内不同种类数的种数</p></blockquote><ul><li><p><code>Sample Input:</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">6 5</span><br><span class="line">1 2 3 4 5 5</span><br><span class="line">Q 1 4</span><br><span class="line">Q 2 6</span><br><span class="line">R 1 2</span><br><span class="line">Q 1 4</span><br><span class="line">Q 2 6</span><br></pre></td></tr></table></figure></li><li><p><code>Sample Output:</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">4</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td></tr></table></figure></li></ul><p>我们考虑一下做法：</p><p>暴力$O(n\dot~m)$不解释，<del>Luogu上可过</del></p><p>那么就来看看这个优雅的暴力——莫队</p><p>我们先不考虑修改，只考虑询问，来个新样例：</p><ul><li><p><code>Sample Input 2:</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">4 6</span><br><span class="line">1 2 1 3</span><br><span class="line">Q 1 2</span><br><span class="line">Q 1 3</span><br><span class="line">Q 1 4</span><br><span class="line">Q 2 3</span><br><span class="line">Q 2 4</span><br><span class="line">Q 3 4</span><br></pre></td></tr></table></figure></li></ul><p><code>Sample Output 2</code>就你们手推吧。</p><p>我们发现<code>1~2</code>在<code>Q 1 2</code>时遍历了一遍，<code>Q 1 3</code>时又遍历了一遍，<code>Q 1 4</code>时也是如此。    </p><p>我们就考虑可不可以像<code>manacher</code>算法一样用已知呢？</p><p>显然可以，这也满足莫队算法的一个要求：</p><p>$(x,y)-&gt;{(x,y+1),(x,y-1),(x+1,y),(x-1,y)}$</p><p>意思是知道$(x,y)$的答案，就可以较快得求出$(x,y+1),(x,y-1),(x+1,y),(x-1,y)$的答案。</p><p>然后我们就可以由上一个得出的答案计算下一个。</p><p>但是。。。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">10 10</span><br><span class="line">1 2 3 4 5 6 7 8 9 10</span><br><span class="line">1 1</span><br><span class="line">10 10</span><br><span class="line">1 1</span><br><span class="line">10 10</span><br><span class="line">1 1</span><br><span class="line">10 10</span><br><span class="line">1 1</span><br><span class="line">10 10</span><br><span class="line">1 1</span><br><span class="line">10 10</span><br></pre></td></tr></table></figure><p>这的来回推多少遍。。。</p><p>根据$l$排序不就好了吗？</p><p>再来个反例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">10 10</span><br><span class="line">1 2 3 4 5 6 7 8 9 10</span><br><span class="line">1 10</span><br><span class="line">2 1</span><br><span class="line">3 10</span><br><span class="line">4 1</span><br><span class="line">5 10</span><br><span class="line">6 1</span><br><span class="line">7 10</span><br><span class="line">8 1</span><br><span class="line">9 10</span><br><span class="line">10 1</span><br></pre></td></tr></table></figure><p>这也十分慢了。。。</p><p>我们发现只考虑了$l$，没有考虑$r$</p><p>那么怎么考虑呢？</p><p>我们可以用分块解决，把$l$分成$\sqrt n$块就好了，同一块里的就比较$r$，这样期望就是$n^{\frac32}$</p><p><code>cmp</code>函数：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//(len=sqrt(n))</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(query x,query y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x.l/len!=y.l/len)</span><br><span class="line">    <span class="keyword">return</span> x.l&lt;y.l;</span><br><span class="line">  <span class="keyword">return</span> x.r&lt;y.r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>带修改的呢？？</p><p>我们加一维表示修改次数，每个询问都加上上一次修改的标号。</p><p>接着用之前的方法，构造出新的<code>cmp</code>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(query a,query b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a.l/len!=b.l)</span><br><span class="line"><span class="keyword">return</span> a.l&lt;b.l;</span><br><span class="line"><span class="keyword">if</span>(a.r/len!=b.r)</span><br><span class="line"><span class="keyword">return</span> a.r&lt;b.r;</span><br><span class="line"><span class="keyword">return</span> a.pre&lt;b.pre;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后就和之前的方法一样，一个一个数推。</p><p>我们取$len=n^{\frac 23}$，我也不知道为什么，数学太差没办法</p><p>这样就是$O(n^{\frac53})$的时间复杂度了。</p><p><code>时间复杂度--</code>，<code>代码复杂度*=n</code></p><p><code>code:</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10010</span></span><br><span class="line"><span class="keyword">int</span> n,t,a[N],len,nc,nq,num[N],ans,print[N];</span><br><span class="line"><span class="keyword">char</span> opt[<span class="number">100010</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">query</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> l,r,pre,num;</span><br><span class="line">&#125;q[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">change</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> pos,bef,aft;</span><br><span class="line">&#125;c[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(query a,query b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a.l/len!=b.l)</span><br><span class="line"><span class="keyword">return</span> a.l&lt;b.l;</span><br><span class="line"><span class="keyword">if</span>(a.r/len!=b.r)</span><br><span class="line"><span class="keyword">return</span> a.r&lt;b.r;</span><br><span class="line"><span class="keyword">return</span> a.pre&lt;b.pre;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">len=<span class="built_in">pow</span>(n,<span class="number">2.0</span>/<span class="number">3</span>);</span><br><span class="line">t=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">a[i]=read();</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,opt);</span><br><span class="line"><span class="keyword">if</span>(*opt==<span class="string">'Q'</span>)</span><br><span class="line">&#123;</span><br><span class="line">nq++;</span><br><span class="line">q[nq].l=read();</span><br><span class="line">q[nq].r=read();</span><br><span class="line">q[nq].pre=nc;<span class="comment">//之前的第一次询问编号，推时间的时候需要特别考虑</span></span><br><span class="line">q[nq].num=nq;<span class="comment">//记录是第几个询问，因为不是氨输入顺序询问</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">nc++;</span><br><span class="line">c[nc].pos=read();</span><br><span class="line">c[nc].bef=a[c[nc].pos];</span><br><span class="line">c[nc].aft=a[c[nc].pos]=read();<span class="comment">//记录每个修改前后的a数组</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fd(i,nc,<span class="number">1</span>)</span><br><span class="line">a[c[i].pos]=c[i].bef;<span class="comment">//还原a数组</span></span><br><span class="line">sort(q+<span class="number">1</span>,q+nq+<span class="number">1</span>,cmp);<span class="comment">//排序</span></span><br><span class="line">fr(i,<span class="number">1</span>,nq)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(q[i].r&gt;q[i<span class="number">-1</span>].r)</span><br><span class="line">fr(j,q[i<span class="number">-1</span>].r+<span class="number">1</span>,q[i].r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!num[a[j]])</span><br><span class="line">ans++;</span><br><span class="line">num[a[j]]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(q[i].l&lt;q[i<span class="number">-1</span>].l)</span><br><span class="line">fd(j,q[i<span class="number">-1</span>].l<span class="number">-1</span>,q[i].l)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!num[a[j]])</span><br><span class="line">ans++;</span><br><span class="line">num[a[j]]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(q[i].l&gt;q[i<span class="number">-1</span>].l)</span><br><span class="line">fr(j,q[i<span class="number">-1</span>].l,q[i].l<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">num[a[j]]--;</span><br><span class="line"><span class="keyword">if</span>(!num[a[j]])</span><br><span class="line">ans--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(q[i].r&lt;q[i<span class="number">-1</span>].r)</span><br><span class="line">fd(j,q[i<span class="number">-1</span>].r,q[i].r+<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">num[a[j]]--;</span><br><span class="line"><span class="keyword">if</span>(!num[a[j]])</span><br><span class="line">ans--;</span><br><span class="line">&#125;<span class="comment">//改左右界，被thkkk(dalao)说写得shi</span></span><br><span class="line"><span class="keyword">if</span>(q[i].pre&lt;q[i<span class="number">-1</span>].pre)</span><br><span class="line">fd(j,q[i<span class="number">-1</span>].pre,q[i].pre+<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">a[c[j].pos]=c[j].bef;</span><br><span class="line"><span class="keyword">if</span>(q[i].l&lt;=c[j].pos&amp;&amp;q[i].r&gt;=c[j].pos)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!num[c[j].bef])</span><br><span class="line">ans++;</span><br><span class="line">num[c[j].bef]++;</span><br><span class="line">num[c[j].aft]--;</span><br><span class="line"><span class="keyword">if</span>(!num[c[j].aft])</span><br><span class="line">ans--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(q[i].pre&gt;q[i<span class="number">-1</span>].pre)</span><br><span class="line">fr(j,q[i<span class="number">-1</span>].pre+<span class="number">1</span>,q[i].pre)</span><br><span class="line">&#123;</span><br><span class="line">a[c[j].pos]=c[j].aft;</span><br><span class="line"><span class="keyword">if</span>(q[i].l&lt;=c[j].pos&amp;&amp;q[i].r&gt;=c[j].pos)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!num[c[j].aft])</span><br><span class="line">ans++;</span><br><span class="line">num[c[j].aft]++;</span><br><span class="line">num[c[j].bef]--;</span><br><span class="line"><span class="keyword">if</span>(!num[c[j].bef])</span><br><span class="line">ans--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//推时间，需要认真想想</span></span><br><span class="line">print[q[i].num]=ans;<span class="comment">//对应到输入顺序</span></span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,nq)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,print[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 莫队 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu4006|loj2324|清华集训 2017|小Y和二叉树</title>
      <link href="/2018/01/05/luogu4006loj2324/"/>
      <url>/2018/01/05/luogu4006loj2324/</url>
      <content type="html"><![CDATA[<blockquote><p>给定点的连边情况，求字典序最小的中序遍历</p></blockquote><ul><li><p>Sample</p><ul><li><p>Input</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">3 2 3 4</span><br><span class="line">1 1</span><br><span class="line">1 1</span><br><span class="line">1 1</span><br></pre></td></tr></table></figure></li><li><p>Output</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 1 3 4</span><br></pre></td></tr></table></figure></li></ul></li></ul><a id="more"></a><p>去<a href="https://loj.ac/problem/2324" target="_blank" rel="noopener"><code>loj</code></a>做吧，可以下数据。</p><p>显然我们从$min_{k_i\le2}i$开始考虑。</p><p><img src="luogu4006loj2324/img.png" alt=""></p><p>显然<code>A</code>就是序列的第一个数，也就是说上面式子里的$i$，$k_i$不能$&gt;2$是因为那样$A$就有右子树，也就不是序列的第一个数了，然后$i$要尽量小。</p><p>我们要分情况讨论，先设$f_i$表示以$A$为根中序遍历可能的最小值。</p><p>那么$f_i=min\cases{\cases{i&amp;$k_i\le2$\\0&amp;$k_i=3$}\\f_u&amp;$uv$有边连接}$</p><p>然后贪心遍历。</p><p>现在遍历顺序是：<code>A-B-f-G-C-D-E</code></p><p>先把<code>A</code>小的子树放在<code>B</code>上</p><p>如果没有两个儿子，那么当且仅当$f_{son}=son$时放<code>C</code>，其它放<code>B</code></p><p>注意细节。</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1000010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf (1&lt;&lt;30)</span></span><br><span class="line"><span class="keyword">int</span> n,d[N],s[N],v[N&lt;&lt;<span class="number">1</span>],p[N],k,f[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">p[x]=<span class="number">1</span>;</span><br><span class="line">f[x]=d[x]==<span class="number">3</span>?inf:x;</span><br><span class="line">fr(i,<span class="number">1</span>,d[x])</span><br><span class="line"><span class="keyword">if</span>(!p[v[s[x<span class="number">-1</span>]+i]])</span><br><span class="line">&#123;</span><br><span class="line">dfs(v[s[x<span class="number">-1</span>]+i]);</span><br><span class="line">f[x]=min(f[x],f[v[s[x<span class="number">-1</span>]+i]]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print1</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">p[x]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(d[x]==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" %d"</span>,x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(d[x]==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> son;</span><br><span class="line">fr(i,<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span>(p[v[s[x<span class="number">-1</span>]+i]])</span><br><span class="line">son=v[s[x<span class="number">-1</span>]+i];</span><br><span class="line"><span class="keyword">if</span>(f[son]&lt;x)</span><br><span class="line">&#123;</span><br><span class="line">print1(son);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" %d"</span>,x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" %d"</span>,x);</span><br><span class="line">print1(son);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(d[x]==<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> son1=<span class="number">0</span>,son2=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,<span class="number">3</span>)</span><br><span class="line"><span class="keyword">if</span>(p[v[s[x<span class="number">-1</span>]+i]])</span><br><span class="line">&#123;</span><br><span class="line">son1=son2;</span><br><span class="line">son2=v[s[x<span class="number">-1</span>]+i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(f[son1]&gt;f[son2])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> _=son1;</span><br><span class="line">son1=son2;</span><br><span class="line">son2=_;</span><br><span class="line">&#125;</span><br><span class="line">print1(son1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" %d"</span>,x);</span><br><span class="line">print1(son2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print2</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">p[x]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(d[x]==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" %d"</span>,x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(d[x]==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> son;</span><br><span class="line">fr(i,<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span>(p[v[s[x<span class="number">-1</span>]+i]])</span><br><span class="line">son=v[s[x<span class="number">-1</span>]+i];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" %d"</span>,x);</span><br><span class="line"><span class="keyword">if</span>(son&gt;f[son])</span><br><span class="line">print1(son);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">print2(son);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(d[x]==<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> son1=<span class="number">0</span>,son2=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,<span class="number">3</span>)</span><br><span class="line"><span class="keyword">if</span>(p[v[s[x<span class="number">-1</span>]+i]])</span><br><span class="line">&#123;</span><br><span class="line">son1=son2;</span><br><span class="line">son2=v[s[x<span class="number">-1</span>]+i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(f[son1]&gt;f[son2])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> _=son1;</span><br><span class="line">son1=son2;</span><br><span class="line">son2=_;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" %d"</span>,x);</span><br><span class="line">print1(son1);</span><br><span class="line">print2(son2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">d[i]=read();</span><br><span class="line">s[i]=s[i<span class="number">-1</span>]+d[i];</span><br><span class="line">fr(j,<span class="number">1</span>,d[i])</span><br><span class="line">v[s[i<span class="number">-1</span>]+j]=read();</span><br><span class="line">sort(v+s[i<span class="number">-1</span>]+<span class="number">1</span>,v+s[i]+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">fd(i,n,<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span>(d[i]&lt;=<span class="number">2</span>)</span><br><span class="line">k=i;</span><br><span class="line">p[k]=<span class="number">1</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,d[k])</span><br><span class="line">dfs(v[s[k<span class="number">-1</span>]+i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,k);</span><br><span class="line"><span class="keyword">if</span>(d[k]==<span class="number">2</span>&amp;&amp;f[v[s[k]]]&lt;f[v[s[k]<span class="number">-1</span>]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> _=v[s[k]];</span><br><span class="line">v[s[k]]=v[s[k]<span class="number">-1</span>];</span><br><span class="line">v[s[k]<span class="number">-1</span>]=_;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(d[k]==<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span>(v[s[k]]&gt;f[v[s[k]]])</span><br><span class="line">print1(v[s[k]]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">print2(v[s[k]]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">print1(v[s[k]<span class="number">-1</span>]);</span><br><span class="line">print2(v[s[k]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> DP </tag>
            
            <tag> loj </tag>
            
            <tag> luogu </tag>
            
            <tag> 清华集训 </tag>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>KMP快速匹配字符串</title>
      <link href="/2018/01/05/KMP/"/>
      <url>/2018/01/05/KMP/</url>
      <content type="html"><![CDATA[<p>最近<a href="http://huhaoo.coding.me/tags/%E6%A8%A1%E6%9D%BF/" target="_blank" rel="noopener">模板</a>题搞得有点多啊。</p><p><del>还不是本蒟蒻太菜集训时候发现啥也不会来狂补</del></p><a id="more"></a><p><code>KMP</code>的精华在于<code>next</code>数组</p><p><code>next</code>数组的定义是：</p><p>$next_i$表示$S_{1\dots i}$（$S$从$1$开始）中最大的$len$</p><p>使$S_{1\dots len}=S_{(i-len+1)\dots i}$</p><p>且$next_1=0$</p><p>举个<del>栗</del>子</p><p><code>S=&#39;ABCABABCA&#39;</code></p><table><thead><tr><th><code>i</code></th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th></tr></thead><tbody><tr><td><code>S[i]</code></td><td>A</td><td>B</td><td>C</td><td>A</td><td>B</td><td>A</td><td>B</td><td>C</td><td>A</td></tr><tr><td><code>next[i]</code></td><td>0</td><td>0</td><td>0</td><td>1</td><td>2</td><td>1</td><td>2</td><td>3</td><td>4</td></tr></tbody></table><p>然后我们可以计算<code>next[i]</code>了</p><ul><li><p>$next_i\le next_{i-1}+1$</p><p>显然，不过没用</p></li><li><p>$next_i=next_{i-1}+1$当且仅当$S_i=S_{1+next_{i-1}}$</p><p>也显然，原因自己想</p><p>以<code>ABCABC</code>、<code>ABCABD</code>为例，已知：$next_5=2$</p><p>若$S_6=S_3$（<code>ABCABC</code>），$next_6=3$，符合</p><p>若$S_6\not=S_3$（<code>ABCABD</code>），$next_6=1&lt;next_5+1=3$，符合</p></li><li><p>若$S_i\not=S_{next_{i-1}~+1}$，就去看$S_i$是否<big>$=S_{1+next_{next_{i-1}}}$</big>，若是，则$next_i=1+next_{next_{i-1}}$</p><p>不解释，结合<code>next</code>的定义想一想，就知道了</p><p>也给个例子：</p><p><code>ABCDABCA</code></p><p>已知$next_7=3$，且$S_8\not=S_4$</p><p>且得出$next_8=1+next_{next_4}=1$</p><p>（比较显然吧）</p></li><li><p>若还不等于，就照着$\uparrow$做，直到等于或为$0$为止</p></li><li><p>若实在$=0$了，直接得出结论：$next_i=\cases{1&amp;$S_i=S_1$\\0&amp;$S_i\not=S_0$}$</p></li></ul><p>查询和插入差不多，具体看代码。</p><p>例题：<a href="https://www.luogu.org/problemnew/show/3375" target="_blank" rel="noopener">Luogu3375</a></p><p>裸的模板题，不解释。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1000010</span></span><br><span class="line"><span class="keyword">char</span> s1[N],s2[N];</span><br><span class="line"><span class="keyword">int</span> l1,l2,n[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,s1+<span class="number">1</span>,s2+<span class="number">1</span>);</span><br><span class="line">l1=<span class="built_in">strlen</span>(s1+<span class="number">1</span>);</span><br><span class="line">l2=<span class="built_in">strlen</span>(s2+<span class="number">1</span>);</span><br><span class="line">fr(i,<span class="number">2</span>,l2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> k=n[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">while</span>(s2[k+<span class="number">1</span>]!=s2[i]&amp;&amp;k)</span><br><span class="line">k=n[k];</span><br><span class="line"><span class="keyword">if</span>(s2[k+<span class="number">1</span>]==s2[i])</span><br><span class="line">n[i]=k+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,l1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s2[k+<span class="number">1</span>]==s1[i])</span><br><span class="line">k++;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(k&amp;&amp;s2[k+<span class="number">1</span>]!=s1[i])</span><br><span class="line">k=n[k];</span><br><span class="line">k++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k==l2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i-l2+<span class="number">1</span>);</span><br><span class="line">k=n[k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,l2)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d%c"</span>,n[i],i==l2?<span class="string">'\n'</span>:<span class="string">' '</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> KMP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>线性基模板(luogu3812)</title>
      <link href="/2018/01/05/%E7%BA%BF%E6%80%A7%E5%9F%BA%E6%A8%A1%E6%9D%BF-luogu3812/"/>
      <url>/2018/01/05/%E7%BA%BF%E6%80%A7%E5%9F%BA%E6%A8%A1%E6%9D%BF-luogu3812/</url>
      <content type="html"><![CDATA[<p>Luogu上的一道模板题，也是线性基最基础的运用。</p><a id="more"></a><p>线性基，指的是：</p><p>一个序列${s_i}(i\in[0,m])$</p><p>其中$m$通常取到$\lfloor log_2k\rfloor$，$k$是输入数据的最大值</p><p>先来看<a href="https://www.luogu.org/problemnew/show/3812" target="_blank" rel="noopener">洛谷</a>的那个模板题</p><blockquote><p>给定$n$个整数$S1,S_2\dots S_n$（数字可能重复），求在这些数中选取任意个，使得他们的异或和最大。</p></blockquote><blockquote><p>（$n\le50$，$0\le S_i\le2^{50}$）</p></blockquote><p>$n\le50$。。。</p><p><del>可以搜索剪枝吧</del></p><p><del>太小了吧</del></p><p>来看看线性基：</p><ul><li><p>$\forall k$，$2^{k+1}&gt;S_k\ge2^k$</p><p>就是$S_k$最高位（$2$进制下）一定在第$k$位。</p></li><li><p>$\forall k,\exists p_{1..j}$，$S_{p_1}~xor~S_{p_2}\dots xor~S_{p_j}$</p><p>也就是说在考虑异或的情况下，这组线性基可以表示所有输入的数</p></li></ul><p>所以线性基插入就是这个样子：</p><p>对于每一个数$a$：</p><ul><li><p>找到它的最高位$k$（$2$进制下）</p><ul><li><p>若$S_k=0$</p><p>直接<code>s[k]=a</code></p><p>并且退出</p></li><li><p>若$S_k\not=0$</p><p>就<code>a^=s[k]</code></p><p>再重复一遍</p></li></ul></li></ul><p>关于那个<code>a^=k</code></p><p>$\because a~xor~S_k~xor~S_k=a$</p><p>$\therefore a$可以用$a~xor~S_k,S_k$表示</p><p>$\therefore$这样不会错</p><p>查询就很简单了，不解释了，稍微想想就可以想出，看看代码吧。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 70</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,s[<span class="number">70</span>],ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a=read();</span><br><span class="line">fd(i,<span class="number">60</span>,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span>(a&gt;=(<span class="number">1l</span>l&lt;&lt;i))</span><br><span class="line"><span class="keyword">if</span>(!s[i])</span><br><span class="line">&#123;</span><br><span class="line">s[i]=a;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">a^=s[i];<span class="comment">//插入</span></span><br><span class="line">&#125;</span><br><span class="line">fd(i,<span class="number">60</span>,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span>((ans^s[i])&gt;ans)</span><br><span class="line">ans^=s[i];<span class="comment">//查询</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> luogu </tag>
            
            <tag> 线性基 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu3808</title>
      <link href="/2018/01/04/luogu3808/"/>
      <url>/2018/01/04/luogu3808/</url>
      <content type="html"><![CDATA[<p>模板题++</p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1000010</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">trie</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">trie *t[<span class="number">26</span>];</span><br><span class="line">trie *fail;</span><br><span class="line"><span class="keyword">int</span> num,vis;</span><br><span class="line">trie()</span><br><span class="line">&#123;</span><br><span class="line">fr(i,<span class="number">0</span>,<span class="number">25</span>)</span><br><span class="line">t[i]=<span class="literal">NULL</span>;</span><br><span class="line">fail=<span class="literal">NULL</span>;</span><br><span class="line">num=vis=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;*root;</span><br><span class="line"><span class="keyword">int</span> n,l,ans;</span><br><span class="line"><span class="keyword">char</span> s[N];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="built_in">queue</span>&lt;trie*&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">root=<span class="keyword">new</span> trie;</span><br><span class="line">n=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">l=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">trie *k=root;</span><br><span class="line">fr(i,<span class="number">1</span>,l)</span><br><span class="line">&#123;</span><br><span class="line">s[i]-=<span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">if</span>(k-&gt;t[s[i]]==<span class="literal">NULL</span>)</span><br><span class="line">k-&gt;t[s[i]]=<span class="keyword">new</span> trie;</span><br><span class="line">k=k-&gt;t[s[i]];</span><br><span class="line">&#125;</span><br><span class="line">k-&gt;num++;</span><br><span class="line">&#125;</span><br><span class="line">q.push(root);</span><br><span class="line">root-&gt;fail=root;</span><br><span class="line"><span class="keyword">while</span>(!q.empty())<span class="comment">//记住：BFS序！！！</span></span><br><span class="line">&#123;</span><br><span class="line">trie *k=q.front();</span><br><span class="line">q.pop();</span><br><span class="line">fr(i,<span class="number">0</span>,<span class="number">25</span>)</span><br><span class="line"><span class="keyword">if</span>(k-&gt;t[i]!=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">q.push(k-&gt;t[i]);</span><br><span class="line"><span class="keyword">if</span>(k==root)</span><br><span class="line">k-&gt;t[i]-&gt;fail=root;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">trie *a=k-&gt;fail;</span><br><span class="line"><span class="keyword">while</span>(a-&gt;fail!=root&amp;&amp;a-&gt;t[i]==<span class="literal">NULL</span>)</span><br><span class="line">a=a-&gt;fail;</span><br><span class="line"><span class="keyword">if</span>(a-&gt;t[i]==<span class="literal">NULL</span>)</span><br><span class="line">k-&gt;t[i]-&gt;fail=root;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">k-&gt;t[i]-&gt;fail=a-&gt;t[i];</span><br><span class="line">&#125;<span class="comment">//连接fail指针</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">k-&gt;t[i]=k-&gt;fail-&gt;t[i];<span class="comment">//构造trie图</span></span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">0</span>,<span class="number">25</span>)</span><br><span class="line"><span class="keyword">if</span>(root-&gt;t[i]==<span class="literal">NULL</span>)</span><br><span class="line">root-&gt;t[i]=root;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">l=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">trie *k=root;</span><br><span class="line">fr(i,<span class="number">1</span>,l)</span><br><span class="line">&#123;</span><br><span class="line">s[i]-=<span class="string">'a'</span>;</span><br><span class="line">k=k-&gt;t[s[i]];</span><br><span class="line">trie *a=k;</span><br><span class="line"><span class="keyword">while</span>(a!=root&amp;&amp;(!a-&gt;vis))</span><br><span class="line">&#123;</span><br><span class="line">ans+=a-&gt;num;</span><br><span class="line">a-&gt;vis=<span class="number">1</span>;<span class="comment">//判重（并且不判重#1会T）</span></span><br><span class="line">                     <span class="comment">//也可以a-&gt;fail=root，但是很毁美观的</span></span><br><span class="line">a=a-&gt;fail;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> luogu </tag>
            
            <tag> AC自动机 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>tarjan缩点</title>
      <link href="/2018/01/04/tarjan%E7%BC%A9%E7%82%B9/"/>
      <url>/2018/01/04/tarjan%E7%BC%A9%E7%82%B9/</url>
      <content type="html"><![CDATA[<blockquote><p>求有向图（边权为1）上最长链长度</p></blockquote><a id="more"></a><p>计几个数组：</p><p><code>dfn[i]</code>表示<code>i</code>号点被第几个搜索到的</p><p><code>low[i]</code>表示<code>i</code>和它的搜索子树中所有点<code>j</code> 的<code>min{dfn[j]}</code></p><p>然后就可以得到：</p><p>$low_i=\cases{dfn_i \ low_v&amp;(u到v有边) \ dfn_v&amp;(u到v有边)}$</p><p>若$dfn_i=low_i$表示<code>s[top]</code>到<code>s[k]</code>都是在一个强连通分量里的（<code>s[k]=i</code>，强连通分量是一个极大的点集满足内部点互相可达）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1000010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;t[N],nt[N];</span><br><span class="line"><span class="keyword">int</span> n,m,u[N],v[N],g[N],f[N],dfn[N],low[N],top,s[N],sum,ins[N],now,w[N],ans;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">now++;</span><br><span class="line">dfn[x]=now;</span><br><span class="line">low[x]=dfn[x];</span><br><span class="line">s[++top]=x;</span><br><span class="line">ins[x]=<span class="number">1</span>;</span><br><span class="line">fr(i,<span class="number">0</span>,t[x].size()<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dfn[t[x][i]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ins[t[x][i]])</span><br><span class="line">low[x]=min(dfn[t[x][i]],low[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">dfs(t[x][i]);</span><br><span class="line">low[x]=min(low[t[x][i]],low[x]);</span><br><span class="line">&#125;<span class="comment">//计算low[i]</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dfn[x]==low[x])</span><br><span class="line">&#123;</span><br><span class="line">sum++;</span><br><span class="line"><span class="keyword">while</span>(s[top+<span class="number">1</span>]!=x)</span><br><span class="line">&#123;</span><br><span class="line">ins[s[top]]=<span class="number">0</span>;</span><br><span class="line">w[sum]++;</span><br><span class="line">f[s[top]]=sum;</span><br><span class="line">top--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//处理强连通分量</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(g[x])</span><br><span class="line"><span class="keyword">return</span> g[x];</span><br><span class="line">fr(i,<span class="number">0</span>,nt[x].size()<span class="number">-1</span>)</span><br><span class="line">g[x]=max(g[x],calc(nt[x][i]));</span><br><span class="line">g[x]+=w[x];</span><br><span class="line"><span class="keyword">return</span> g[x];</span><br><span class="line">&#125;<span class="comment">//DP求最长路径（DAG图）</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">m=read();</span><br><span class="line">fr(i,<span class="number">1</span>,m)</span><br><span class="line">&#123;</span><br><span class="line">u[i]=read();</span><br><span class="line">v[i]=read();<span class="comment">//方便建新图</span></span><br><span class="line">t[u[i]].push_back(v[i]);</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span>(!dfn[i])</span><br><span class="line">dfs(i);<span class="comment">//tarjan缩点</span></span><br><span class="line">fr(i,<span class="number">1</span>,m)</span><br><span class="line"><span class="keyword">if</span>(f[u[i]]!=f[v[i]])</span><br><span class="line">nt[f[u[i]]].push_back(f[v[i]]);<span class="comment">//不是同一个点就连边</span></span><br><span class="line">fr(i,<span class="number">1</span>,sum)</span><br><span class="line">ans=max(ans,calc(i));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>时间复杂度：$O(n+m)$</p>]]></content>
      
      
        <tags>
            
            <tag> tarjan </tag>
            
            <tag> 缩点 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>51nod1491</title>
      <link href="/2018/01/03/51nod1491/"/>
      <url>/2018/01/03/51nod1491/</url>
      <content type="html"><![CDATA[<p>$q=\dfrac{\sqrt5+1}2$，在黄金系统下面$a_i(i\in[1,n])$等于$\sum_{i=0}^na_i\dot q^{n-i}$，其中$a_i\in{0,1}$。</p><p>现在给出两个黄金系统下面的数字，请比较他们的大小。</p><a id="more"></a><p>先推一下：</p><p>$q^0=1$</p><p>$q^1=\dfrac{\sqrt5+1}{2}$</p><p>$q^2=\dfrac{(\sqrt5+1)^2}4=\dfrac{6+2\sqrt5}{4}=\dfrac{\sqrt5+3}2$</p><p>发现$q^2=q^1+q^0$</p><p>于是有：$q^{i+2}=q^2\dot q^i=(q^1+q^0)\dot q^i=q^{i+1}+q^i$</p><p>这不就是斐波拉契数列？？</p><p>于是就可以做了</p><p>斐波拉契数列的判大小，看程序吧<img src="http://img.uoj.ac/utility/bear-flying.gif" alt=""></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100010</span></span><br><span class="line"><span class="keyword">char</span> a[N],b[N];</span><br><span class="line"><span class="keyword">int</span> n,m,c[N],d[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,a+<span class="number">1</span>,b+<span class="number">1</span>);</span><br><span class="line">n=<span class="built_in">strlen</span>(a+<span class="number">1</span>);</span><br><span class="line">m=<span class="built_in">strlen</span>(b+<span class="number">1</span>);</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">c[i]=a[n-i+<span class="number">1</span>]<span class="number">-48</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,m)</span><br><span class="line">d[i]=b[m-i+<span class="number">1</span>]<span class="number">-48</span>;</span><br><span class="line"><span class="keyword">while</span>(!c[n])</span><br><span class="line">n--;</span><br><span class="line"><span class="keyword">while</span>(!d[m])</span><br><span class="line">m--;</span><br><span class="line">n=max(n,m);</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">c[i]-=d[i];</span><br><span class="line">fd(i,n,<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(c[i]&gt;=<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"&gt;\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(c[i]&lt;=<span class="number">-2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"&lt;\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="comment">//这两个在下面解释</span></span><br><span class="line"><span class="keyword">if</span>(i&gt;=<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">c[i<span class="number">-1</span>]+=c[i];</span><br><span class="line">c[i<span class="number">-2</span>]+=c[i];</span><br><span class="line">c[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(c[<span class="number">2</span>]&lt;<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"&lt;\n"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span>(c[<span class="number">2</span>]&gt;<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"&gt;\n"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span>(c[<span class="number">1</span>]&lt;<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"&lt;\n"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span>(c[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"&gt;\n"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"=\n"</span>);<span class="comment">//最后两位特判掉（相当于边界）</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释：</p><p>满足$c_{j}\in{-1,0,1}(j&lt;i)$且有$c_i=2(or -2)$</p><p>$\therefore C={\cdots,x,a,b,2}(a,b\in{-1,0,1})\rightarrow C={\cdots,x,a+2,b+2}$</p><p>我们可以得到：$a+2&gt;0,b+2&gt;0$</p><p>在提出来：$C={\cdots,x+1,a+3,b+1}$</p><p>其中：$b+1\ge0,a+3\ge2$</p><p>又得到了开始的情况！</p><p>所以$C$一定是大于$0$的！</p><p>然后$c_i=-2$的情况同理：$C&lt;0$</p>]]></content>
      
      
        <tags>
            
            <tag> 51nod </tag>
            
            <tag> 斐波拉契数列 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu1439</title>
      <link href="/2018/01/03/luogu1439/"/>
      <url>/2018/01/03/luogu1439/</url>
      <content type="html"><![CDATA[<blockquote><p>给出1-n的两个排列P1和P2，求它们的最长公共子序列。</p></blockquote><a id="more"></a><p>$O(n^2)$的算法大家估计都会，就不说了。</p><hr><p>正解是$O(n\dot  log_2n)$的，可能有点难想。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5 </span><br><span class="line">3 2 1 4 5</span><br><span class="line">1 2 3 4 5</span><br></pre></td></tr></table></figure><p>这是输入，输出是<code>3</code>。</p><p>手推一下，发现就是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3 4 5</span><br><span class="line">2 4 5</span><br><span class="line">1 4 5</span><br></pre></td></tr></table></figure><p>这三种情况，发现它们都是上升序列！！！</p><p>再来一个样例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">3 2 1 4 5</span><br><span class="line">5 4 3 2 1</span><br></pre></td></tr></table></figure><p>算出来是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 2 1</span><br></pre></td></tr></table></figure><p>不符合刚才的规律！</p><p>观察样例，第二行满足：$\forall i,a_i=i$</p><p>我们可以把所有的数据的第一个排列变为以上形式，之后的最长公共子序列就会变成第二个序列的最长上升子序列！</p><p><code>Code:</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100010</span></span><br><span class="line"><span class="keyword">int</span> n,t[N],s[N],top;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">t[read()]=i;</span><br><span class="line">top=<span class="number">0</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a=t[read()];<span class="comment">//一一对应到第一个序列</span></span><br><span class="line"><span class="keyword">if</span>(a&gt;s[top])</span><br><span class="line">s[++top]=a;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>,r=top+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(l&lt;r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(s[mid]&lt;a)</span><br><span class="line">l=mid+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">r=mid;</span><br><span class="line">&#125;</span><br><span class="line">s[l]=a;</span><br><span class="line">&#125;<span class="comment">//O(n log n)求最长上升子序列</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,top);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> DP </tag>
            
            <tag> luogu </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>prufer序列</title>
      <link href="/2018/01/02/prufer/"/>
      <url>/2018/01/02/prufer/</url>
      <content type="html"><![CDATA[<p><code>prufer</code>序列，可以将一个无向图转换为一个序列，这个序列叫做<code>prufer</code>序列<del>（好像有语病？）</del></p><a id="more"></a><ul><li>树构造<code>prufer</code>序列<ol><li>找到度数为1的编号最小的点</li><li>将与它相邻的点加入<code>prufer</code>序列</li><li>删掉它</li><li>重复$n-2$次，余下两个点</li></ol></li></ul><p>代码如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100010</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;t[N];</span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="keyword">int</span> n,d[N],prufer[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">d[u]++;</span><br><span class="line">d[v]++;</span><br><span class="line">t[u].push_back(v);</span><br><span class="line">t[v].push_back(u);</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">&#123;</span><br><span class="line">d[i]--;</span><br><span class="line"><span class="keyword">if</span>(!d[i])</span><br><span class="line">q.push(-i);<span class="comment">//取相反数就可以由大根堆变为小根堆（忘记小根堆怎么定义了）</span></span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,n<span class="number">-2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> k=-q.top();</span><br><span class="line"><span class="keyword">int</span> o=<span class="number">0</span>;</span><br><span class="line">q.pop();</span><br><span class="line">fr(j,<span class="number">0</span>,t[k].size()<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">if</span>(d[t[k][j]])</span><br><span class="line">o=t[k][j];</span><br><span class="line">d[o]--;</span><br><span class="line"><span class="keyword">if</span>(!d[o])</span><br><span class="line">q.push(-o);</span><br><span class="line">prufer[i]=o;</span><br><span class="line">&#125;</span><br><span class="line">fr(i,<span class="number">1</span>,n<span class="number">-2</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d%c"</span>,prufer[i],i==n<span class="number">-2</span>?<span class="string">'\n'</span>:<span class="string">' '</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>树构造<code>prufer</code>序列就是模拟定义</p><ul><li><p><code>prufer</code>序列构造树</p><p>根据定义来想：</p><ul><li><p><code>prufer</code>序列第一个数是原树最小的叶子节点的父亲</p><p>原树的叶子结点一定没在<code>prufer</code>序列出现</p><p>所以：</p><ul><li>第一条可以确定的边由<code>prufer</code>序列中没出现过的最小的点和<code>prufer</code>序列的第一个点构成</li></ul></li><li><p>照着 $\uparrow$ 做下去</p><p>做完了，可是只有$n-2$条边<del>（QAQ）</del></p></li><li><p>不是还余下了两个点？</p><p>连接就好了啊</p></li></ul></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="keyword">int</span> n,num[N],prufer[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n<span class="number">-2</span>)</span><br><span class="line">num[prufer[i]=read()]++;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span>(!num[i])</span><br><span class="line">q.push(-i);</span><br><span class="line">fr(i,<span class="number">1</span>,n<span class="number">-2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> o=-q.top();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,prufer[i],o);</span><br><span class="line">num[prufer[i]]--;</span><br><span class="line"><span class="keyword">if</span>(!num[prufer[i]])</span><br><span class="line">q.push(-prufer[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,-q.top());</span><br><span class="line">q.pop();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,-q.top());</span><br><span class="line">q.pop();<span class="comment">//输出队列里剩下的元素（最后一步）</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> prufer </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>lantern在linux下的安装</title>
      <link href="/2017/12/30/lanternlinux/"/>
      <url>/2017/12/30/lanternlinux/</url>
      <content type="html"><![CDATA[<p>lantern，绝对是您翻墙的第一选择<del>（不是广告）</del></p><a id="more"></a><ul><li><p>下载蓝灯（没翻墙的<a href="https://github.com/getlantern/lantern" target="_blank" rel="noopener">github</a>太慢了，所以<a href="https://pan.baidu.com/s/1bZJWQy" target="_blank" rel="noopener">百度云</a>（密码：2tsq）估计还快些）</p><ul><li><p>如果下载的是本蒟蒻百度云里的，先重命名吧</p><p><code>mv 1 1.deb</code></p></li></ul></li><li><p>下载<code>gdebi</code>（据说更好用，反正不大，装了也没事）</p><ul><li><code>sudo apt install gdebi-core</code></li></ul></li><li><p>安装<code>lantern</code> </p><ul><li><p><code>sudo gdebi lantern-installer-64-bit.deb</code></p><p>如果是文件名不对，就改成你的<code>lantern</code>安装包</p></li></ul></li><li><p>安装<code>libappindicator3-1</code>（不装会报错，应该是支持吧）</p><ul><li><code>sudo apt-get install libappindicator3-1</code></li></ul></li></ul><p>~~~~</p>]]></content>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> lantern </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luogu2330</title>
      <link href="/2017/12/10/luogu2330/"/>
      <url>/2017/12/10/luogu2330/</url>
      <content type="html"><![CDATA[<p>题目好像好难看懂。。</p><a id="more"></a><p>就是最小生成树。</p><p>白白给题目加上<code>unsigned long long _=</code>$2^{64}-1$层难度<code>buff</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 50010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 310</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">road</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,v,w;</span><br><span class="line">&#125;r[M];</span><br><span class="line"><span class="keyword">int</span> f[N],n,m,ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getf</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> f[x]=(f[x]==x?x:getf(f[x]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(road a,road b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.w&lt;b.w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//freopen(".out","w",stdout);</span></span><br><span class="line">freopen(<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">n=read();</span><br><span class="line">m=read();</span><br><span class="line">fr(i,<span class="number">1</span>,m)</span><br><span class="line">r[i].u=read(),r[i].v=read(),r[i].w=read();</span><br><span class="line">sort(r+<span class="number">1</span>,r+m+<span class="number">1</span>,cmp);</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">f[i]=i;</span><br><span class="line">fr(i,<span class="number">1</span>,m)</span><br><span class="line"><span class="keyword">if</span>(getf(r[i].u)!=getf(r[i].v))</span><br><span class="line">&#123;</span><br><span class="line">f[getf(r[i].u)]=getf(r[i].v);</span><br><span class="line">ans=r[i].w;</span><br><span class="line"><span class="comment">//printf("%d\n",r[i].w);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,n<span class="number">-1</span>,ans);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> luogu </tag>
            
            <tag> dijkstra </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>UOJ69</title>
      <link href="/2017/12/09/UOJ69/"/>
      <url>/2017/12/09/UOJ69/</url>
      <content type="html"><![CDATA[<p><del>一道我也不知道怎么AC的题</del></p><a id="more"></a><p>我们设单次正确的概率为$p$，总正确率为$P$，来分析以下代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">input n</span><br><span class="line">input m</span><br><span class="line">a = <span class="number">0</span></span><br><span class="line">b = <span class="number">1</span></span><br><span class="line">c = a + b</span><br><span class="line">c = c % m</span><br><span class="line">a = b</span><br><span class="line">b = c</span><br><span class="line">n = n - <span class="number">1</span></span><br><span class="line">p = n == <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> p <span class="keyword">goto</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><p>如果我们那么写，P=$(\dfrac18×\dfrac18×\dfrac18)^n$，若$n=200$,$P&lt;8^{−600}$</p><p>期望得分：$0′$~$1′$</p><p>首先，我们先解决$c=a+b$</p><p>我们可以多取几个值，然后，判相等，还有，请不要打注释。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c = a + b</span><br><span class="line">d = a + b          <span class="comment">//重复算两次</span></span><br><span class="line">e = c - d          <span class="comment">//当e为0时，c=d</span></span><br><span class="line"><span class="keyword">if</span> e <span class="keyword">goto</span> <span class="number">1</span>        <span class="comment">//1是这个程序段的1，可以降低出错概率</span></span><br></pre></td></tr></table></figure><p>出错概率很小，当且仅当$e$和$c$或$d$同时出错，而且要求$c≠d$,$e≠0$，所以。。。</p><p>同样的思路：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">input a</span><br><span class="line">input b</span><br><span class="line">c = <span class="number">0</span></span><br><span class="line">d = <span class="number">1</span></span><br><span class="line">e = c + d</span><br><span class="line">f = c + d</span><br><span class="line">g = e - f</span><br><span class="line"><span class="keyword">if</span> g <span class="keyword">goto</span> <span class="number">5</span></span><br><span class="line">c = d</span><br><span class="line">d = e</span><br><span class="line">e = c % b</span><br><span class="line">f = c % b</span><br><span class="line">g = e - f</span><br><span class="line"><span class="keyword">if</span> g <span class="keyword">goto</span> <span class="number">11</span></span><br><span class="line">c = e</span><br><span class="line">e = d % b</span><br><span class="line">f = d % b</span><br><span class="line">g = e - f</span><br><span class="line"><span class="keyword">if</span> g <span class="keyword">goto</span> <span class="number">16</span></span><br><span class="line">d = e</span><br><span class="line">e = a - <span class="number">1</span></span><br><span class="line">f = a - <span class="number">1</span></span><br><span class="line">g = e - f</span><br><span class="line"><span class="keyword">if</span> g <span class="keyword">goto</span> <span class="number">21</span></span><br><span class="line">a = e</span><br><span class="line"><span class="keyword">if</span> a <span class="keyword">goto</span> <span class="number">5</span></span><br><span class="line">output c</span><br></pre></td></tr></table></figure><p>然后果断出现一行绿绿的$100$.</p>]]></content>
      
      
        <tags>
            
            <tag> uoj </tag>
            
            <tag> 提交答案 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>求LCS的长度和数量</title>
      <link href="/2017/12/09/LCS/"/>
      <url>/2017/12/09/LCS/</url>
      <content type="html"><![CDATA[<p>DP求LCS的长度和数量</p><a id="more"></a><h3 id="子串"><a href="#子串" class="headerlink" title="子串"></a>子串</h3><p>给定一个字符串 $A_{1..n}$</p><p>对于任意一个集合 $G_{1..m}$ 并且 $1≤G_1&lt;G_2&lt;⋯&lt;G_m≤n$</p><p>那么 $A_{G_{1..m}}$ 就是 $A$ 的一个子串</p><p>如：</p><p><code>AABC</code> 就是<code>ABCABC</code>的一个子串</p><h3 id="LCS"><a href="#LCS" class="headerlink" title="LCS"></a>LCS</h3><p>给定两个字符串 $A,B$ ，求出他们最长的公共子串 $C$</p><p>意思是： $C$ 既是 $A$ 的子串，又是 $B$ 的子串</p><h3 id="求法"><a href="#求法" class="headerlink" title="求法"></a>求法</h3><p>先给出代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 5010</span></span><br><span class="line"><span class="keyword">int</span> n,m,f[N][N],h[N][N],ans;</span><br><span class="line"><span class="keyword">char</span> s1[N],s2[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,s1+<span class="number">1</span>,s2+<span class="number">1</span>);</span><br><span class="line">n=<span class="built_in">strlen</span>(s1+<span class="number">1</span>);</span><br><span class="line">m=<span class="built_in">strlen</span>(s2+<span class="number">1</span>);</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">f[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">fr(i,<span class="number">0</span>,m)</span><br><span class="line">f[<span class="number">0</span>][i]=<span class="number">1</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">s1[i]-=<span class="string">'a'</span><span class="number">-1</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,m)</span><br><span class="line">s2[i]-=<span class="string">'a'</span><span class="number">-1</span>;</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">fr(j,<span class="number">1</span>,m)</span><br><span class="line"><span class="keyword">if</span>(s1[i]==s2[j])</span><br><span class="line">&#123;</span><br><span class="line">h[i][j]=h[i<span class="number">-1</span>][j<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">f[i][j]=f[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(h[i<span class="number">-1</span>][j]==h[i][j])</span><br><span class="line">f[i][j]=(f[i][j]+f[i<span class="number">-1</span>][j])%mod;</span><br><span class="line"><span class="keyword">if</span>(h[i][j<span class="number">-1</span>]==h[i][j])</span><br><span class="line">f[i][j]=(f[i][j]+f[i][j<span class="number">-1</span>])%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">h[i][j]=max(h[i<span class="number">-1</span>][j],h[i][j<span class="number">-1</span>]);</span><br><span class="line"><span class="keyword">if</span>(h[i<span class="number">-1</span>][j]==h[i][j])</span><br><span class="line">f[i][j]=(f[i][j]+f[i<span class="number">-1</span>][j])%mod;</span><br><span class="line"><span class="keyword">if</span>(h[i][j<span class="number">-1</span>]==h[i][j])</span><br><span class="line">f[i][j]=(f[i][j]+f[i][j<span class="number">-1</span>])%mod;</span><br><span class="line"><span class="keyword">if</span>(h[i<span class="number">-1</span>][j<span class="number">-1</span>]==h[i][j])</span><br><span class="line">f[i][j]=(f[i][j]-f[i<span class="number">-1</span>][j<span class="number">-1</span>]+mod)%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n%d\n"</span>,h[n][m],f[n][m]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>$h_{n,m}$ 表示`LCS长度</p><p>$f_{n,m}$ 表示LCS个数</p><p>就是一个<code>DP</code>看代码还直观些。</p>]]></content>
      
      
        <tags>
            
            <tag> LCS </tag>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>倍增算法求LCA</title>
      <link href="/2017/12/09/LCA/"/>
      <url>/2017/12/09/LCA/</url>
      <content type="html"><![CDATA[<h3 id="LCA"><a href="#LCA" class="headerlink" title="LCA"></a>LCA</h3><p>就是给定一棵<strong>有根</strong>树，和两个点，求他们的最近公共祖先（深度最大）</p><a id="more"></a><h3 id="一般算法"><a href="#一般算法" class="headerlink" title="一般算法"></a>一般算法</h3><p>先将两个点 $u,v$ 移到同一层，再同时上移，直到相等（比较容易想到不是吗）</p><p>单次复杂度： $O(n)$</p><h3 id="倍增算法"><a href="#倍增算法" class="headerlink" title="倍增算法"></a>倍增算法</h3><p>求出每个点$i$距离为$2^k$的祖先（若没有则为$0$）</p><p>可以用以下式子以O(1)O(1)的时间复杂度求出：</p><p>$f_{i,j}=f_{f_{i,j−1}, j−1}$</p><p>然后求就用一般算法的思想</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 500010</span></span><br><span class="line"><span class="keyword">int</span> e,t[N&lt;&lt;<span class="number">1</span>],nex[N&lt;&lt;<span class="number">1</span>],beg[N],f[N][<span class="number">20</span>],n,m,r,h[N];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fo(i,a) for(int i=beg[a];i;i=nex[i])</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e++;</span><br><span class="line">t[e]=v;</span><br><span class="line">nex[e]=beg[u];</span><br><span class="line">beg[u]=e;</span><br><span class="line">&#125;<span class="comment">//加入边</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getf0</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fo(i,x)</span><br><span class="line"><span class="keyword">if</span>(t[i]!=f[x][<span class="number">0</span>])</span><br><span class="line">&#123;</span><br><span class="line">h[t[i]]=h[x]+<span class="number">1</span>;</span><br><span class="line">f[t[i]][<span class="number">0</span>]=x;</span><br><span class="line">getf0(t[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//得出f[i][0]</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=read();</span><br><span class="line">m=read();</span><br><span class="line">r=read();</span><br><span class="line">fr(i,<span class="number">1</span>,n<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=read(),v=read();</span><br><span class="line">add(u,v);</span><br><span class="line">add(v,u);</span><br><span class="line">&#125;</span><br><span class="line">h[r]=<span class="number">1</span>;</span><br><span class="line"><span class="comment">//f[r][0]=r;</span></span><br><span class="line">getf0(r);</span><br><span class="line">fr(j,<span class="number">1</span>,<span class="number">18</span>)</span><br><span class="line">fr(i,<span class="number">1</span>,n)</span><br><span class="line">f[i][j]=f[f[i][j<span class="number">-1</span>]][j<span class="number">-1</span>];<span class="comment">//得出f[i][j]</span></span><br><span class="line"><span class="keyword">while</span>(m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> u=read(),v=read();</span><br><span class="line"><span class="keyword">if</span>(h[u]&lt;h[v])</span><br><span class="line">swap(u,v);</span><br><span class="line">fd(i,<span class="number">18</span>,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span>(h[f[u][i]]&gt;=h[v])</span><br><span class="line">u=f[u][i];<span class="comment">//移到同一层</span></span><br><span class="line"><span class="keyword">if</span>(u==v)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,u);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">fd(i,<span class="number">18</span>,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span>(f[u][i]!=f[v][i])</span><br><span class="line">&#123;</span><br><span class="line">u=f[u][i];</span><br><span class="line">v=f[v][i];</span><br><span class="line">&#125;<span class="comment">//同时上移</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,f[u][<span class="number">0</span>]);<span class="comment">//记得只是最逼近的，还用上一层</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> LCA </tag>
            
            <tag> 倍增 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo下文章添加password</title>
      <link href="/2017/12/09/hexo-password/"/>
      <url>/2017/12/09/hexo-password/</url>
      <content type="html"><![CDATA[<p>在<code>hexo</code>里面，有很多有趣的东西，现在来介绍一下怎么设置访问密码。</p><p>双击<code>WoW</code>即可阅读</p><a id="more"></a><h3 id="首更"><a href="#首更" class="headerlink" title="首更"></a>首更</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (prompt(<span class="string">'请输入文章密码'</span>) !== <span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span><br><span class="line">                alert(<span class="string">'密码错误！'</span>);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>themes/next/layout/_partials/head.swig</code>末尾加上即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: password</span><br><span class="line">date: 2017-10-01 12:54:27</span><br><span class="line">tags:</span><br><span class="line">- password</span><br><span class="line">- 黑科技</span><br><span class="line">password: WoW</span><br></pre></td></tr></table></figure><p>这是这篇文章的开头</p><p>可以看出，你希望的密码就是<code>password:</code>的后面的字符串</p><p>如果你觉得<code>请输入文章密码</code>太丑陋了，可以改，就在</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (prompt(<span class="string">'请输入文章密码'</span>) !== <span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span><br></pre></td></tr></table></figure><p>改，比如我的是</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (prompt(<span class="string">'Please give a password for LJFdalao to eat'</span>) !== <span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span><br></pre></td></tr></table></figure><p>最后，因为<code>history.back();</code>的局限性，所以有一种很好的方法跳过，不过可以用莫名其妙的方法防止（懒得搞也懒得说），至于方法，在新页面打开就行了啊，那样<code>history.back();</code>会返回当前页面。</p><hr><h3 id="二更"><a href="#二更" class="headerlink" title="二更"></a>二更</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (prompt(<span class="string">'请输入文章密码'</span>) !== <span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span><br><span class="line">                alert(<span class="string">'密码错误！'</span>);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>注意到了那个</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (prompt(<span class="string">'请输入文章密码'</span>) !== <span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)</span><br></pre></td></tr></table></figure><p>中的<code>if</code>了吗？</p><p>如果改成<code>while</code>的话，那就OK了，因为它会不断执行下去。</p><p>不过要把 <code>history.back();</code> 删掉</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span> (prompt(<span class="string">'请输入文章密码'</span>) !== <span class="string">'&#123;&#123; page.password &#125;&#125;'</span>)&#123;</span><br><span class="line">                alert(<span class="string">'密码错误！'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>用hexo+next搭建coding博客</title>
      <link href="/2017/12/09/hexo/"/>
      <url>/2017/12/09/hexo/</url>
      <content type="html"><![CDATA[<p>先来一波福利，就是给出我的博客下载地址（有<code>mathjax</code>……）</p><p><a href="https://pan.baidu.com/s/1pLeEup1" target="_blank" rel="noopener">百度网盘</a> 密码：<code>mu87</code></p><p><a href="http://download.csdn.net/download/hhuhao/10006255" target="_blank" rel="noopener">CSDN</a></p><a id="more"></a><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><h4 id="安装git和npm"><a href="#安装git和npm" class="headerlink" title="安装git和npm"></a>安装git和npm</h4><p>这个不想说，自己去网上找</p><h4 id="安装hexo-1"><a href="#安装hexo-1" class="headerlink" title="安装hexo"></a>安装hexo</h4><p><code>npm install hexo-cli -g</code></p><h3 id="初始化博客"><a href="#初始化博客" class="headerlink" title="初始化博客"></a>初始化博客</h3><ul><li><p>用<code>hexo init blog</code>来初始化博客，就会出现这样：</p></li><li><p><img src="hexo/1.png" alt=""></p></li><li><p>然后<code>cd</code>进入<code>blog</code>：<code>cd blog</code></p></li><li><p>让后就是<code>npm install</code></p><p>这一步我也不知道有什么用。。。</p><p>不过网上攻略有的步骤这样做（比如什么<code>hexo ... install</code>）会有奇效</p></li><li><p>最后<code>hexo s</code>去<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>看看自己美<del>丑</del>丽<del>陋</del>的博客了（说真的初始主题好丑）</p></li><li><p><img src="hexo/2.png" alt=""></p></li><li><p><img src="hexo/3.png" alt=""></p><p>​</p></li></ul><h3 id="博客的初始配置"><a href="#博客的初始配置" class="headerlink" title="博客的初始配置"></a>博客的初始配置</h3><ul><li><p><code>vim _config.yml</code> 这样进入<strong>博客配置文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: Huhao&apos;s home</span><br><span class="line">subtitle:</span><br><span class="line">description:</span><br><span class="line">author: Huhao</span><br><span class="line">language: zh-Hans</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure><p>开头我搞成了这样</p><p>从上至下依次是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">标题</span><br><span class="line">副标题</span><br><span class="line">描述</span><br><span class="line">作者</span><br><span class="line">语言</span><br><span class="line">时区</span><br></pre></td></tr></table></figure><p>然后在<code>15</code>行（应该是）的</p><p><code>url: http://yoursite.com</code>中填上域名</p><p>最后在最后几行改成我这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"> type: git</span><br><span class="line"> repo: https://git.coding.net/huhaoo/huhaoo.coding.me.git</span><br><span class="line"> branch: master</span><br><span class="line"> message: blog update</span><br></pre></td></tr></table></figure></li></ul><h3 id="Next-主题初始化"><a href="#Next-主题初始化" class="headerlink" title="Next 主题初始化"></a>Next 主题初始化</h3><ul><li><code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></li><li>改<strong>根目录下</strong><code>_config</code> 中的<code>theme:landspace</code>为<code>theme: next</code></li><li>可以<code>hexo s</code>一下看看</li><li><img src="hexo/4.png" alt=""></li></ul><p>顺便给大家推荐以下更改：</p><ul><li><p><code>vim themes/next/_config.yml</code></p></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># Canvas-nest</span><br><span class="line">canvas_nest: true</span><br><span class="line"></span><br><span class="line"># three_waves</span><br><span class="line">three_waves: false</span><br><span class="line"></span><br><span class="line"># canvas_lines</span><br><span class="line">canvas_lines: false</span><br><span class="line"></span><br><span class="line"># canvas_sphere</span><br><span class="line">canvas_sphere: false</span><br><span class="line"></span><br><span class="line"># Only fit scheme Pisces</span><br><span class="line"># Canvas-ribbon</span><br><span class="line">canvas_ribbon: true</span><br></pre></td></tr></table></figure><p>在某个地方（<code>600</code>行左右）有这个（<code>5</code>个<code>false</code>）</p></li><li><p>再看看咋样了</p></li><li><p><img src="hexo/5.png" alt=""></p></li></ul><h3 id="写下一片博文"><a href="#写下一片博文" class="headerlink" title="写下一片博文"></a>写下一片博文</h3><h4 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h4><ul><li>就是<code>hexo n ......</code></li></ul><h4 id="写博文"><a href="#写博文" class="headerlink" title="写博文"></a>写博文</h4><ul><li>推荐<code>Typora</code> 和<code>moeditor</code></li></ul><ul><li><p><code>---title: testlatexdate: 2017-10-03 10:52:27tags:  - test---$x=\dfrac{-b\pm\sqrt{b^2-4ac}}{2a}$</code></p></li><li><p>欣喜交加接了片博文，看了看：</p></li><li><p><img src="hexo/6.png" alt=""></p><p><code>What???</code></p></li></ul><h3 id="Mathjax"><a href="#Mathjax" class="headerlink" title="Mathjax"></a>Mathjax</h3><ul><li><p>良心的<code>next</code>已经为我们准备好了，只要：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mathjax:</span><br><span class="line">  enable: false</span><br><span class="line">  per_page: false</span><br><span class="line">  cdn: //cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mathjax:</span><br><span class="line">  enable: true</span><br><span class="line">  per_page: true</span><br><span class="line">  cdn: //cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML</span><br></pre></td></tr></table></figure><p>就好了</p></li><li><p><img src="hexo/7.png" alt=""></p></li><li><p>点进去就挂了QAQ</p></li><li><p>于是，每次写文章就更麻烦了</p></li><li><p><code>mathjax: on</code></p></li><li><p>每次都要写</p></li><li><p>不过美丽的<code>mathjax</code>就出来了</p></li></ul><h3 id="其它美丽的配置"><a href="#其它美丽的配置" class="headerlink" title="其它美丽的配置"></a>其它美丽的配置</h3><h4 id="添加顶部加载条"><a href="#添加顶部加载条" class="headerlink" title="添加顶部加载条"></a>添加顶部加载条</h4><ul><li><code>vim themes/next/layout/_partials/head.swig</code></li><li><code>&lt;script src=&quot;//cdn.bootcss.com/pace/1.0.2/pace.min.js&quot;&gt;&lt;/script&gt;&lt;link href=&quot;//cdn.bootcss.com/pace/1.0.2/themes/pink/pace-theme-flash.css&quot; rel=&quot;stylesheet&quot;&gt;</code></li></ul>]]></content>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
