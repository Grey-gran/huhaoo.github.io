<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[动态DP]]></title>
    <url>%2F2019%2F09%2F08%2F%E5%8A%A8%E6%80%81DP%2F</url>
    <content type="text"><![CDATA[动态DP就是通过数据结构动态维护DP值]]></content>
      <tags>
        <tag>ddp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[lyndon分解]]></title>
    <url>%2F2019%2F09%2F05%2Flyndon%2F</url>
    <content type="text"><![CDATA[如果称一个字符串$S$为lyndon串，当且仅当 $$\forall i,S\le S_{i,\dots,|S|}$$ 我们把串$C$分解为$S_1S_2\dots$，满足$S_i$为lyndon串$S_i\ge S_{i+1}$]]></content>
      <tags>
        <tag>string</tag>
        <tag>lyndon分解</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[最值操作与历史最值查询的线段树实现]]></title>
    <url>%2F2019%2F09%2F02%2F%E6%9C%80%E5%80%BC%E6%93%8D%E4%BD%9C%E4%B8%8E%E5%8E%86%E5%8F%B2%E6%9C%80%E5%80%BC%E6%9F%A5%E8%AF%A2%E7%9A%84%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[可以看2016论文：https://github.com/huhaoo/pan/blob/master/%E5%9B%BD%E5%AE%B6%E9%98%9F%E8%AE%BA%E6%96%87/2016.pdf 下面讨论全部基于线段树]]></content>
      <tags>
        <tag>线段树</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IOI2019矩形区域]]></title>
    <url>%2F2019%2F08%2F31%2FIOI2019%E7%9F%A9%E5%BD%A2%E5%8C%BA%E5%9F%9F%2F</url>
    <content type="text"><![CDATA[给定一个$n\times m$的二维数组$a$（这里下标$1$开始，题目是$0$开始），求有多少子矩形$a_{x_1\dots x_2,y_1\dots y_2}$，满足$1&lt;x_1\le x_2&lt;n,1&lt;y_1\le y_2&lt;m$且对于所有$(x,y)$满足$x_1\le x\le x_2,y_1\le y\le y_2$，都有$a_{x,y}&lt;a_{x_1-1,y},a_{x_2+1,y},a_{x,y_1-1},a_{x,y_2+1}$]]></content>
      <tags>
        <tag>IOI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IOI2019排列鞋子]]></title>
    <url>%2F2019%2F08%2F31%2FIOI2019%E6%8E%92%E5%88%97%E9%9E%8B%E5%AD%90%2F</url>
    <content type="text"><![CDATA[给定$2n$个数，每次可以交换相邻两个数，问至少交换几次，使得$2k-1$位置上数小于$0$且为$2k$位置上数的相反数]]></content>
      <tags>
        <tag>贪心</tag>
        <tag>IOI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[FFTNTT与循环卷积]]></title>
    <url>%2F2019%2F08%2F31%2FFFTNTT%E4%B8%8E%E5%BE%AA%E7%8E%AF%E5%8D%B7%E7%A7%AF%2F</url>
    <content type="text"><![CDATA[重写FFT，NTT，简介循环卷积]]></content>
      <tags>
        <tag>循环卷积</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Burnside引理与Polya定理]]></title>
    <url>%2F2019%2F08%2F10%2FBurnside%E5%BC%95%E7%90%86%E4%B8%8EPolya%E5%AE%9A%E7%90%86%2F</url>
    <content type="text"><![CDATA[Burnside引理和Polya定理一般用来处理存在（循环、对称等）同构下的方案数]]></content>
      <tags>
        <tag>Burnside/polya</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CTSC2006歌唱王国]]></title>
    <url>%2F2019%2F08%2F06%2FCTSC2006-%E6%AD%8C%E5%94%B1%E7%8E%8B%E5%9B%BD%2F</url>
    <content type="text"><![CDATA[简要（魔改）题意： 有一个长度无限每一位为$[1,n]$随机数的序列，求它的一个最短前缀有一个连续子序列与给定序列$A$相同，多组数据 题目链接：https://www.luogu.org/problem/P4548]]></content>
      <tags>
        <tag>CTSC</tag>
        <tag>概率生成函数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[概率生成函数]]></title>
    <url>%2F2019%2F08%2F06%2F%E6%A6%82%E7%8E%87%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[概率生存函数是一类特殊的生成函数，可以用生成函数较简单地解决部分概率问题，有 $$F(z)=E(z^X)=\sum_{i\ge 0}\mathrm{Pr}(X=i)z^i$$]]></content>
      <tags>
        <tag>概率生成函数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Crash的文明世界]]></title>
    <url>%2F2019%2F08%2F06%2FCrash%E7%9A%84%E6%96%87%E6%98%8E%E4%B8%96%E7%95%8C%2F</url>
    <content type="text"><![CDATA[题目链接： https://www.luogu.org/problem/P4827]]></content>
      <tags>
        <tag>斯特林数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[斯特林数及斯特林反演]]></title>
    <url>%2F2019%2F08%2F06%2F%E6%96%AF%E7%89%B9%E6%9E%97%E6%95%B0%E5%8F%8A%E6%96%AF%E7%89%B9%E6%9E%97%E5%8F%8D%E6%BC%94%2F</url>
    <content type="text"><![CDATA[本文按介绍顺序为拓扑序基础上字典序]]></content>
      <tags>
        <tag>math</tag>
        <tag>斯特林数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu4449于神之怒加强版]]></title>
    <url>%2F2019%2F08%2F02%2Fluogu4449%E4%BA%8E%E7%A5%9E%E4%B9%8B%E6%80%92%E5%8A%A0%E5%BC%BA%E7%89%88%2F</url>
    <content type="text"><![CDATA[题意：给定$n,m,k$，求：$$\sum_{i=1}^n\sum_{j=1}^m\gcd(i,j)^k$$]]></content>
      <tags>
        <tag>math</tag>
        <tag>luogu</tag>
        <tag>杜教筛</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[NOI2019序列]]></title>
    <url>%2F2019%2F07%2F30%2FNOI2019%E5%BA%8F%E5%88%97%2F</url>
    <content type="text"><![CDATA[题目链接：https://www.luogu.org/problem/P5470]]></content>
      <tags>
        <tag>贪心</tag>
        <tag>NOI</tag>
        <tag>模拟费用流</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[NOI2019机器人]]></title>
    <url>%2F2019%2F07%2F30%2FNOI2019%E6%9C%BA%E5%99%A8%E4%BA%BA%2F</url>
    <content type="text"><![CDATA[题目链接： https://www.luogu.org/problem/P5469]]></content>
      <tags>
        <tag>math</tag>
        <tag>NOI</tag>
        <tag>多项式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[下降幂多项式乘法]]></title>
    <url>%2F2019%2F07%2F30%2F%E4%B8%8B%E9%99%8D%E5%B9%82%E5%A4%9A%E9%A1%B9%E5%BC%8F%E4%B9%98%E6%B3%95%2F</url>
    <content type="text"><![CDATA[给定两个下降幂多项式，求它们的乘积，用下降幂多项式表示]]></content>
      <tags>
        <tag>多项式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[后缀数组相关]]></title>
    <url>%2F2019%2F07%2F11%2F%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%2F</url>
    <content type="text"><![CDATA[$ $]]></content>
      <tags>
        <tag>sa</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SDOI2008Sandy的卡片]]></title>
    <url>%2F2019%2F07%2F10%2FSDOI2008Sandy%E7%9A%84%E5%8D%A1%E7%89%87%2F</url>
    <content type="text"><![CDATA[链接： https://www.luogu.org/problemnew/show/P2463]]></content>
      <tags>
        <tag>sa</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CF643E]]></title>
    <url>%2F2019%2F06%2F25%2FCF643E%2F</url>
    <content type="text"><![CDATA[http://codeforces.com/problemset/problem/643/E]]></content>
      <tags>
        <tag>math</tag>
        <tag>CF</tag>
        <tag>DP</tag>
        <tag>概率与期望</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[lemon的spj写法]]></title>
    <url>%2F2019%2F06%2F16%2Flemon%E7%9A%84spj%E5%86%99%E6%B3%95%2F</url>
    <content type="text"><![CDATA[（转自：https://www.cnblogs.com/chouti/p/5752819.html）]]></content>
  </entry>
  <entry>
    <title><![CDATA[二进制分组]]></title>
    <url>%2F2019%2F06%2F13%2F%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%88%86%E7%BB%84%2F</url>
    <content type="text"><![CDATA[如果找得到的话，可以看看2013年国家队论文 对于一些要求在线的题目，可以通过二进制分组用一个$\log$的时间转化为不要在线的，比如论文中的例题 维护下列操作： 插入一个过原点的圆 查询某点是否在所有圆内部]]></content>
      <tags>
        <tag>二进制分组</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[NOI2012迷失游乐园]]></title>
    <url>%2F2019%2F06%2F09%2FNOI2012%E8%BF%B7%E5%A4%B1%E6%B8%B8%E4%B9%90%E5%9B%AD%2F</url>
    <content type="text"><![CDATA[给定一颗带权基环树，求从任意一个点开始不断随机走向一个未访问点的期望长度。]]></content>
      <tags>
        <tag>math</tag>
        <tag>DP</tag>
        <tag>概率与期望</tag>
        <tag>NOI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[上下界网络流]]></title>
    <url>%2F2019%2F06%2F04%2F%E4%B8%8A%E4%B8%8B%E7%95%8C%E7%BD%91%E7%BB%9C%E6%B5%81%2F</url>
    <content type="text"><![CDATA[就是有上下界的网络流 记法： $(u,v,min,max)$，分别表示入点，出点，最小最大流量]]></content>
      <tags>
        <tag>网络流</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[NOI2017蔬菜]]></title>
    <url>%2F2019%2F05%2F27%2FNOI2017%E8%94%AC%E8%8F%9C%2F</url>
    <content type="text"><![CDATA[题目链接给两个吧 luogu loj]]></content>
      <tags>
        <tag>贪心</tag>
        <tag>NOI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[NOI2018冒泡排序]]></title>
    <url>%2F2019%2F05%2F25%2FNOI2018%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[题目地址]]></content>
      <tags>
        <tag>DP</tag>
        <tag>NOI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HNOI2005数三角形]]></title>
    <url>%2F2019%2F05%2F24%2FHNOI2005%E6%95%B0%E4%B8%89%E8%A7%92%E5%BD%A2%2F</url>
    <content type="text"><![CDATA[题目链接]]></content>
      <tags>
        <tag>HNOI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[幂级数]]></title>
    <url>%2F2019%2F05%2F22%2F%E5%B9%82%E7%BA%A7%E6%95%B0%2F</url>
    <content type="text"><![CDATA[参考文献？]]></content>
      <tags>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CTS2019氪金手游]]></title>
    <url>%2F2019%2F05%2F20%2FCTS2019%E6%B0%AA%E9%87%91%E6%89%8B%E6%B8%B8%2F</url>
    <content type="text"><![CDATA[考场上一直在想怎么求出每个点被选的概率，然后就挂了。]]></content>
      <tags>
        <tag>math</tag>
        <tag>DP</tag>
        <tag>CTS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[实现折叠文字块]]></title>
    <url>%2F2019%2F05%2F17%2F%E5%AE%9E%E7%8E%B0%E6%8A%98%E5%8F%A0%E6%96%87%E5%AD%97%E5%9D%97%2F</url>
    <content type="text"><![CDATA[123456&lt;details class=&quot;mydetails&quot;&gt;&lt;summary class=&quot;mysummary&quot;&gt;title&lt;/summary&gt;RT不过不支持mathjax另外不要像markdown一样换行&lt;/details&gt; 那两个class自己去网上找定义方法]]></content>
  </entry>
  <entry>
    <title><![CDATA[算法模板索引]]></title>
    <url>%2F2019%2F05%2F17%2F%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF%E7%B4%A2%E5%BC%95%2F</url>
    <content type="text"><![CDATA[为方便查询，都用小写（包括dp）]]></content>
  </entry>
  <entry>
    <title><![CDATA[luogu4931情侣？给我烧了！]]></title>
    <url>%2F2019%2F05%2F07%2Fluogu4931%2F</url>
    <content type="text"><![CDATA[求$1 \dots 2n$的所有排列中恰有$k$组$2k-1,2k$相邻的方案数]]></content>
      <tags>
        <tag>math</tag>
        <tag>luogu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu4389付公主的背包]]></title>
    <url>%2F2019%2F05%2F05%2Fluogu4389%2F</url>
    <content type="text"><![CDATA[求用$n$种不限量的大小为$w_i$物品分别填满$[1,m]$大小的方案数。]]></content>
      <tags>
        <tag>math</tag>
        <tag>生成函数</tag>
        <tag>luogu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[求导公式]]></title>
    <url>%2F2019%2F05%2F03%2F%E6%B1%82%E5%AF%BC%E5%85%AC%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[记一下，方便找。]]></content>
      <tags>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SDOI2017遗忘的集合]]></title>
    <url>%2F2019%2F05%2F03%2FSDOI2017%E9%81%97%E5%BF%98%E7%9A%84%E9%9B%86%E5%90%88%2F</url>
    <content type="text"><![CDATA[给出$n$个数，第$i$个表示要求的集合组成$i$的方案数 求这个集合（优先元素个数最少，其次是字典序）]]></content>
      <tags>
        <tag>math</tag>
        <tag>生成函数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[广义二项式定理]]></title>
    <url>%2F2019%2F05%2F02%2F%E5%B9%BF%E4%B9%89%E4%BA%8C%E9%A1%B9%E5%BC%8F%E5%AE%9A%E7%90%86%2F</url>
    <content type="text"></content>
      <tags>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[简单介绍生成函数]]></title>
    <url>%2F2019%2F04%2F30%2F%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[生成函数长$F(x)=\sum_{i\ge 0}f_ix^i$这样（不过因为一般数列没有负下标，似乎一般不写$\ge 0$也没什么不好） 然后乘以$C$就是每一项$\times C$，乘以$x^k$就是$[0,k)$位填$0$，其他向高位移$k$位 乘以一个生成函数就是求卷积，没什么好解释的。 把生成函数变回数列就是多项式算法了，似乎都是$O(n\log n)$的 通常就是列个方程解出生成函数 就（只）介绍一下fib和卡特兰的生成函数吧。]]></content>
      <tags>
        <tag>math</tag>
        <tag>生成函数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TJOI2015概率论]]></title>
    <url>%2F2019%2F04%2F30%2FTJOI2015%E6%A6%82%E7%8E%87%E8%AE%BA%2F</url>
    <content type="text"><![CDATA[问有$n$个节点的有根二叉树的期望叶子数]]></content>
      <tags>
        <tag>math</tag>
        <tag>生成函数</tag>
        <tag>TJOI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[BJOI2019光线]]></title>
    <url>%2F2019%2F04%2F29%2FBJOI2019%E5%85%89%E7%BA%BF%2F</url>
    <content type="text"><![CDATA[当一束光打到一层玻璃上时，有一定比例的光会穿过这层玻璃，一定比例的光会被反射回去，剩下的光被玻璃吸收。 设对于任意$x$，有$xa_i$单位的光会穿过它，有$xb_i$的会被反射回去。现在$n$层玻璃叠在一起，有$1$单位的光打到第$1$层玻璃上，那么有多少单位的光能穿过所有$n$层玻璃呢？]]></content>
      <tags>
        <tag>BJOI</tag>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Latex入门指北]]></title>
    <url>%2F2019%2F04%2F29%2FLatex%E5%85%A5%E9%97%A8%E6%8C%87%E5%8C%97%2F</url>
    <content type="text"><![CDATA[反正出毒瘤题的dalao都会]]></content>
  </entry>
  <entry>
    <title><![CDATA[矩阵运算]]></title>
    <url>%2F2019%2F04%2F18%2F%E7%9F%A9%E9%98%B5%E8%BF%90%E7%AE%97%2F</url>
    <content type="text"><![CDATA[简单介绍一下矩阵运算。 挖个坑：矩阵逆元]]></content>
      <tags>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HNOI2019白兔之舞]]></title>
    <url>%2F2019%2F04%2F18%2FHNOI2019%E7%99%BD%E5%85%94%E4%B9%8B%E8%88%9E%2F</url>
    <content type="text"><![CDATA[题目链接 前置知识 单位根反演 多项式算法]]></content>
      <tags>
        <tag>math</tag>
        <tag>HNOI</tag>
        <tag>单位根反演</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu2682]]></title>
    <url>%2F2019%2F04%2F17%2Fluogu2682%2F</url>
    <content type="text"><![CDATA[考完省选了，开始划水了QAQ 没有linux版check，只好wine check.exeQAQ]]></content>
      <tags>
        <tag>luogu</tag>
        <tag>题答</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[单位根反演]]></title>
    <url>%2F2019%2F04%2F16%2F%E5%8D%95%E4%BD%8D%E6%A0%B9%E5%8F%8D%E6%BC%94%2F</url>
    <content type="text"><![CDATA[给定$n,k,p$，求 $$\begin{align}\sum_{i\equiv p(\bmod k)}{n\choose i}v^i\tag{1}\end{align}$$ 还有Ex版 给定$n,k,p$，求$$\begin{align}\sum_{i}{n\choose ki+p}g_{ki+p}\tag{Ex1}\end{align}$$ 其中$g_{i}=g_{i-1}+g_{i-2},g_{0}=g_{1}=1$ 前置知识： 单位根的性质PS：那里$\omega$打成了$w$ 矩阵运算]]></content>
      <tags>
        <tag>math</tag>
        <tag>单位根反演</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HNOI2019游记]]></title>
    <url>%2F2019%2F04%2F15%2FHNOI2019%E6%B8%B8%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[又被HNOI随机筛法筛进了]]></content>
      <tags>
        <tag>游记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[c++ stl常数简析]]></title>
    <url>%2F2019%2F04%2F02%2Fstl%E5%B8%B8%E6%95%B0%2F</url>
    <content type="text"><![CDATA[简略分析一下c++ stl常数。]]></content>
      <tags>
        <tag>卡常</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[珂朵莉树]]></title>
    <url>%2F2019%2F04%2F01%2F%E7%8F%82%E6%9C%B5%E8%8E%89%E6%A0%91%2F</url>
    <content type="text"><![CDATA[珂朵莉树（又名老司机树）可以处理部分区间覆盖和查询的问题]]></content>
      <tags>
        <tag>珂朵莉树</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[min25]]></title>
    <url>%2F2019%2F03%2F25%2Fmin25%2F</url>
    <content type="text"><![CDATA[min25可以（据说）在$O(\dfrac{n^{\frac 34}}{\log n})$（还有的说是$O(n^{1-\epsilon})$的近线性复杂度），求出满足下列条件的函数和 $f(p)$是一个关于$p$的多项式 $f(p^c)$可以简单算出 $f(ab)=f(a)f(b)$ （上面$p$为质数，$a,b$互质）]]></content>
      <tags>
        <tag>math</tag>
        <tag>min25</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[单纯形]]></title>
    <url>%2F2019%2F03%2F18%2F%E5%8D%95%E7%BA%AF%E5%BD%A2%2F</url>
    <content type="text"><![CDATA[$$\forall k,\sum_{i}a_{k,i}x_i\le b_{k}\\\forall i,x_i\ge 0$$ 求$$\max(\sum_{i}c_{i}x_i)$$]]></content>
      <tags>
        <tag>单纯形</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[多项式算法合集]]></title>
    <url>%2F2019%2F03%2F14%2F%E5%A4%9A%E9%A1%B9%E5%BC%8F%E7%AE%97%E6%B3%95%E5%90%88%E9%9B%86%2F</url>
    <content type="text"><![CDATA[多项式真是神（毒）奇（瘤）！]]></content>
      <tags>
        <tag>多项式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[回文自动机]]></title>
    <url>%2F2019%2F03%2F12%2F%E5%9B%9E%E6%96%87%E8%87%AA%E5%8A%A8%E6%9C%BA%2F</url>
    <content type="text"><![CDATA[给你一个由小写拉丁字母组成的字符串$s$。我们定义$s$的一个子串的存在值为这个子串在$s$中出现的次数乘以这个子串的长度。 对于给你的这个字符串$s$，求所有回文子串中的最大存在值。 学习论文 我语文没上过D，请见谅，如果有人愿意帮我改改，那我万分感谢，OIwiki管理dalao帮忙改了改，可以看看十分惨的修改记录：https://github.com/OI-wiki/OI-wiki/pull/1081]]></content>
      <tags>
        <tag>string</tag>
        <tag>回文自动机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[杜教筛]]></title>
    <url>%2F2019%2F03%2F12%2F%E6%9D%9C%E6%95%99%E7%AD%9Brewrite%2F</url>
    <content type="text"><![CDATA[求$$\sum_{i\le n}\mu(i),\sum_{i\le n}\phi(i)$$]]></content>
      <tags>
        <tag>math</tag>
        <tag>杜教筛</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[todo]]></title>
    <url>%2F2019%2F03%2F11%2Ftodo%2F</url>
    <content type="text"><![CDATA[AFO预定！]]></content>
  </entry>
  <entry>
    <title><![CDATA[Mathematica&Geogebra入门教程]]></title>
    <url>%2F2019%2F03%2F07%2Fmath-geo%2F</url>
    <content type="text"><![CDATA[想$O(1)$做一道（解析）几何题（吊打标算）却力不从心？ 想手画$3d$图形却被自己迷到？ 来试试mathematica&amp;geogebra吧！]]></content>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[NOI2015品酒大会]]></title>
    <url>%2F2019%2F03%2F05%2FNOI2015%E5%93%81%E9%85%92%E5%A4%A7%E4%BC%9A%2F</url>
    <content type="text"><![CDATA[题目链接]]></content>
      <tags>
        <tag>NOI</tag>
        <tag>sa</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[插头DP略解]]></title>
    <url>%2F2019%2F02%2F23%2F%E6%8F%92%E5%A4%B4DP%2F</url>
    <content type="text"><![CDATA[例题： 给出$n\times m$的方格，有些格子不能铺线，其它格子必须铺，形成一个闭合回路。问有多少种铺法？]]></content>
      <tags>
        <tag>插头DP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[exbsgs]]></title>
    <url>%2F2019%2F02%2F20%2Fexbsgs%2F</url>
    <content type="text"><![CDATA[已知$a,p,b$，求$$a^x\equiv b(\mathrm{mod}~p)$$]]></content>
      <tags>
        <tag>math</tag>
        <tag>exbsgs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[简述原根与阶]]></title>
    <url>%2F2019%2F02%2F18%2F%E5%8E%9F%E6%A0%B9%E4%B8%8E%E9%98%B6%2F</url>
    <content type="text"><![CDATA[NTT要用，就记一下吧。]]></content>
      <tags>
        <tag>math</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[二次剩余]]></title>
    <url>%2F2019%2F02%2F18%2F%E4%BA%8C%E6%AC%A1%E5%89%A9%E4%BD%99%2F</url>
    <content type="text"><![CDATA[求$$\sqrt k~\mathrm{mod}~p$$即求$x$，满足$$x^2\equiv k(\mathrm{mod}~p)$$其中$p$是质数，且$p\not=2$]]></content>
      <tags>
        <tag>math</tag>
        <tag>二次剩余</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为博客添加hitokoto]]></title>
    <url>%2F2019%2F02%2F17%2Fhitokoto%2F</url>
    <content type="text"><![CDATA[hitokoto可以像下面这样（点开才能看到）：]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HNOI2017影魔]]></title>
    <url>%2F2019%2F02%2F14%2FHNOI2017%E5%BD%B1%E9%AD%94%2F</url>
    <content type="text"><![CDATA[给定排列$k$，和贡献$p_1,p_2$，每次给定$l,r$，求：$$\sum_{l\le i&lt; j\le r}p_1[\max_{i&lt;x&lt;j}k_x&lt;k_i,k_j]+p_2([k_i&lt;\max_{i&lt;x&lt;j}k_x&lt;k_j]\mathrm{or}[k_j&lt;\max_{i&lt;x&lt;j}k_x&lt;k_i])$$]]></content>
      <tags>
        <tag>HNOI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[拓展lucas]]></title>
    <url>%2F2019%2F02%2F13%2Fexlucas%2F</url>
    <content type="text"><![CDATA[给定$n,m,q$，求$${n\choose m}\mathrm{mod}~q$$]]></content>
      <tags>
        <tag>math</tag>
        <tag>exlucas</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[类gcd算法]]></title>
    <url>%2F2019%2F02%2F12%2Fsimgcd%2F</url>
    <content type="text"><![CDATA[给定$n,a,b,c$，求： $$f_{n,a,b,c}=\sum_{i=0}^n\lfloor\dfrac{ai+b}c\rfloor\\g_{n,a,b,c}=\sum_{i=0}^ni\lfloor\dfrac{ai+b}c\rfloor\\h_{n,a,b,c}=\sum_{i=0}^n\lfloor\dfrac{ai+b}c\rfloor^2$$]]></content>
      <tags>
        <tag>math</tag>
        <tag>类gcd</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[kruskal重构树|NOI2018归程]]></title>
    <url>%2F2019%2F02%2F11%2Fkruskalret%2F</url>
    <content type="text"><![CDATA[kruskal重构树用来解决一些最小生成树的各种问题]]></content>
      <tags>
        <tag>NOI</tag>
        <tag>kruskal重构树</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[NOI2018屠龙勇士]]></title>
    <url>%2F2019%2F02%2F10%2FNOI2018d2t1%2F</url>
    <content type="text"><![CDATA[一个可重集合$A$，初始$m$个元素，进行$n$次操作，有两个个数列$h_{1\dots n},b_{1\dots n}$。第$i$次在$A$中选出一个元素$a_i$：若$A$中存在不大于$h_i$的元素，$a_i$就等于$A$中不大于$h_i$的最大的数，若不存在，$a_i$等于$A$中最小的数。选好$a_i$后，在$A$中删掉一个（若有不止一个）$a_i$并且向$A$中加入$b_i$。 然后你还有一个数列$p_{1\dots n}$，求最小的$x$，使得对于所有$i$$$h_i-a_ix\le0,(-h_i+a_ix)\mathrm{mod}~p_i=0$$输入顺序：$n~m~h_{1\dots n}~p_{1\dots n}~b_{1\dots n}~A_{1\dots m}$]]></content>
      <tags>
        <tag>math</tag>
        <tag>NOI</tag>
        <tag>excrt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[excrt]]></title>
    <url>%2F2019%2F02%2F10%2Fexcrt%2F</url>
    <content type="text"><![CDATA[给定$n$组非负整数$a_i,b_i$，求最小$x$使$$\forall i,x\equiv b_i(\mathrm{mod}~a_i)$$数据保证有解]]></content>
      <tags>
        <tag>excrt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[exgcd]]></title>
    <url>%2F2019%2F02%2F10%2Fexgcd%2F</url>
    <content type="text"><![CDATA[给定$a,b$，求$x,y$，使得$ax+by=\gcd(a,b)$]]></content>
      <tags>
        <tag>math</tag>
        <tag>exgcd</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CF1100的ABCF题解]]></title>
    <url>%2F2019%2F01%2F14%2FCF1100%2F</url>
    <content type="text"><![CDATA[DE比赛时没弄出来，我好菜啊。 于是只有ABCF的题解]]></content>
      <tags>
        <tag>CF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CF1045H Self-exploration]]></title>
    <url>%2F2019%2F01%2F09%2FCF1045H%2F</url>
    <content type="text"><![CDATA[求在$[A,B]$区间内有多少数满足在二进制下： 子串$00$的个数为$c_{00}$。 子串$01$的个数为$c_{01}$。 子串$10$的个数为$c_{10}$。 子串$11$的个数为$c_{11}$。 答案对$10^9+7$取模。 $1\le A\le B\le 2^{10^5}, 0 \le c_{00}, c_{01}, c_{10}, c_{11} \le 10^5$]]></content>
      <tags>
        <tag>math</tag>
        <tag>CF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu5175数列]]></title>
    <url>%2F2019%2F01%2F07%2Fluogu5175%2F</url>
    <content type="text"><![CDATA[$$a_i=xa_{i-1}+ya_{i-2}\\\mathrm{ans}=\sum_{i=1}^{n}a_{i}^2$$]]></content>
      <tags>
        <tag>math</tag>
        <tag>luogu</tag>
        <tag>矩阵快速幂</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CF1096G]]></title>
    <url>%2F2019%2F01%2F05%2FCF1096G%2F</url>
    <content type="text"><![CDATA[一个$n$位数，每位可以是给出的$k$个数码中的一个数，可以有前导$0$,输出前$\frac n2$位之和与后$\frac n2$位之和相等的方案数，保证$n$是偶数。]]></content>
      <tags>
        <tag>math</tag>
        <tag>CF</tag>
        <tag>NTT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu5177]]></title>
    <url>%2F2019%2F01%2F05%2Fluogu5177%2F</url>
    <content type="text"><![CDATA[$$\sum_{i=1}^n\sum_{j=1}^n[\min(i,j)\le i\oplus j\le \max(i,j)]$$]]></content>
      <tags>
        <tag>math</tag>
        <tag>luogu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu3695CYaron!语]]></title>
    <url>%2F2018%2F11%2F18%2Fluogu3695%2F</url>
    <content type="text"><![CDATA[题面 给定一个语言，写出他的解释器。 其实这道题写起来也不长，就4.4K而已。]]></content>
      <tags>
        <tag>luogu</tag>
        <tag>string</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++中priority_queue详解]]></title>
    <url>%2F2018%2F11%2F07%2Fpriority-queue%2F</url>
    <content type="text"><![CDATA[priority_queue是一个神奇的容器（简称为“优先队列”）。]]></content>
      <tags>
        <tag>STL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu4999|烦人的数学作业]]></title>
    <url>%2F2018%2F11%2F05%2Fluogu4999%2F</url>
    <content type="text"><![CDATA[记$$f_x=\sum_{i=0}^{\infty}\lfloor\dfrac{x}{10^i}\rfloor\mathrm{mod}10$$即$x$的数字和，求$$\sum_{i=l}^rf_i$$]]></content>
      <tags>
        <tag>math</tag>
        <tag>luogu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu3911]]></title>
    <url>%2F2018%2F11%2F01%2Fluogu3911%2F</url>
    <content type="text"><![CDATA[求$ans=\sum_{i=1}^N\sum_{j=1}^N\mathrm{lcm}(A_i,A_j)$]]></content>
      <tags>
        <tag>math</tag>
        <tag>luogu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu2221]]></title>
    <url>%2F2018%2F08%2F21%2Fluogu2221%2F</url>
    <content type="text"><![CDATA[Y901高速公路是一条重要的交通纽带，政府部门建设初期的投入以及使用期间的养护费用都不低，因此政府在这条高速公路上设立了许多收费站。 Y901高速公路是一条由$N-1$段路以及$N$个收费站组成的东西向的链，我们按照由西向东的顺序将收费站依次编号为$1..N$，从收费站$i$行驶到$i+1$(或从$i+1$行驶到$i$)需要收取$V_i$的费用。高速路刚建成时所有的路段都是免费的。 政府部门根据实际情况，会不定期地对连续路段的收费标准进行调整，根据政策涨价或降价。 无聊的小A同学总喜欢研究一些稀奇古怪的问题，他开车在这条高速路上行驶时想到了这样一个问题:对于给定的$l,r(l&lt;r)$,在第$l$个到第$r$个收费站里等概率随机取出两个不同的收费站$a$和$b$，那么从$a$行驶到$b$将期望花费多少费用呢? 题目地址]]></content>
      <tags>
        <tag>概率与期望</tag>
        <tag>luogu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu3293]]></title>
    <url>%2F2018%2F08%2F17%2Fluogu3293%2F</url>
    <content type="text"><![CDATA[给定$a_1\dots a_n$，每次询问$b,x,l,r$：求$\max_{i=l}^r b\oplus(a_i+x)$]]></content>
      <tags>
        <tag>luogu</tag>
        <tag>主席树</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LCT]]></title>
    <url>%2F2018%2F08%2F15%2FLCT%2F</url>
    <content type="text"><![CDATA[模板地址]]></content>
      <tags>
        <tag>LCT</tag>
        <tag>splay</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[可持久化平衡树]]></title>
    <url>%2F2018%2F08%2F12%2F%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E5%B9%B3%E8%A1%A1%E6%A0%91%2F</url>
    <content type="text"><![CDATA[模板地址 您需要写一种数据结构（可参考题目标题），来维护一些数，其中需要提供以下操作（对于各个以往的历史版本）： 插入$x$数 删除$x$数(若有多个相同的数，因只删除一个，如果没有请忽略该操作) 查询$x$数的排名(排名定义为比当前数小的数的个数$+1$。若有多个相同的数，因输出最小的排名) 查询排名为$x$的数 求$x$的前驱(前驱定义为小于$x$，且最大的数，如不存在输出$-2147483647$) 求$x$的后继(后继定义为大于$x$，且最小的数，如不存在输出$2147483647$)]]></content>
      <tags>
        <tag>可持久化</tag>
        <tag>可持久化平衡树</tag>
        <tag>FHQtreap</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[拉格朗日插值]]></title>
    <url>%2F2018%2F08%2F05%2F%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC%2F</url>
    <content type="text"><![CDATA[由小学知识可知， $n$ 个点 $(x_i,y_i)$ 可以唯一地确定一个多项式 现在，给定 $n$ 个点，请你确定这个多项式，并将 $k$ 代入求值 模板链接]]></content>
      <tags>
        <tag>math</tag>
        <tag>拉格朗日插值</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2-sat]]></title>
    <url>%2F2018%2F08%2F03%2F2-sat%2F</url>
    <content type="text"><![CDATA[模板地址 有$n$个布尔变量 $x_1$~$x_n$ ，另有$m$个需要满足的条件，每个条件的形式都是“ $x_i=0/1$或 $x_j=0/1$”。比如“ $x_1=1$或 $x_3=0$”、“ $x_7=0$或 $x_2=0$”。2-SAT 问题的目标是给每个变量赋值使得所有条件得到满足。]]></content>
      <tags>
        <tag>2-sat</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu4232[单纯形伪模板]]]></title>
    <url>%2F2018%2F07%2F10%2Fluogu4232%2F</url>
    <content type="text"><![CDATA[在一个有向无环图上，阿燐和阿空第0个时刻分别站在编号为 $s_r$ , $s_k$ 的节点，二人都知道双方的初始位置，对地图完全了解。 从第$1$个时刻起，每个时刻阿燐和阿空都可以选择站着不动，也可以选择移动到相邻的节点，二人每时刻的移动是同时开始的，并且不能中途改变方向。 阿燐被阿空捉住时，游戏立即结束。如果阿空一直没有捉住阿燐，第 $t$ 个时刻结束后两人就不能再继续移动了，游戏将在第 $t+1$ 个时刻结束。 阿空的目的是尽快捉住阿燐(捉住的定义是与阿燐同一时刻站在同一节点)，而阿燐的目的是尽可能更长时间不被阿空捉住。具体而言，若一场游戏进行了$ t_0$ 时刻，阿燐的得分是 $t_0$ ，阿空的得分是 $-t_0$，双方都希望自己得分(或得分的期望值)更高。 我们认为在这个过程中阿燐和阿空随时都能知道对方的位置。两人在第 $t$ 个时刻不能看出第 $t+1$个时刻对方要走到哪里。 恋恋想知道，在双方最优决策的情况下，游戏结束时刻的期望值是多少。 题目好长啊]]></content>
      <tags>
        <tag>单纯形</tag>
        <tag>纳什均衡</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HNOI2017礼物]]></title>
    <url>%2F2018%2F07%2F05%2FHNOI2017%E7%A4%BC%E7%89%A9%2F</url>
    <content type="text"><![CDATA[FFT巧妙啊]]></content>
      <tags>
        <tag>HNOI</tag>
        <tag>FFT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu1999]]></title>
    <url>%2F2018%2F07%2F04%2Fluogu1999%2F</url>
    <content type="text"><![CDATA[在$a$维空间的元素中，包含着多少个$b$维空间的元素。]]></content>
      <tags>
        <tag>math</tag>
        <tag>找规律</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Uoj8.Quine]]></title>
    <url>%2F2018%2F05%2F01%2FQuine%2F</url>
    <content type="text"><![CDATA[貌似之前发过一次了…… 不过这次做法不一样。]]></content>
      <tags>
        <tag>uoj</tag>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu4212]]></title>
    <url>%2F2018%2F02%2F22%2Fluogu4212%2F</url>
    <content type="text"><![CDATA[这道题。。。 好坑。。。 原来正解是骗分。。。]]></content>
      <tags>
        <tag>luogu</tag>
        <tag>骗分</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WC2018T1]]></title>
    <url>%2F2018%2F02%2F21%2FWC2018T1%2F</url>
    <content type="text"><![CDATA[写了个暴力，发现可过 学习集训队大爷做法。。。]]></content>
      <tags>
        <tag>WC</tag>
        <tag>爬山算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[wineQQ]]></title>
    <url>%2F2018%2F02%2F21%2FwineQQ%2F</url>
    <content type="text"><![CDATA[linux没有现成QQ，很不好，wine也有各种问题，来教一下wine怎么装QQ]]></content>
      <tags>
        <tag>linux</tag>
        <tag>wine</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[对拍shell]]></title>
    <url>%2F2018%2F02%2F11%2F%E5%AF%B9%E6%8B%8Dshell%2F</url>
    <content type="text"><![CDATA[写了个对拍程序（shell） 还行，比较美观]]></content>
      <tags>
        <tag>linux</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu2413|yyy loves physics IV]]></title>
    <url>%2F2018%2F01%2F26%2Fluogu2413%2F</url>
    <content type="text"><![CDATA[看了别人的，感觉我做的好复杂。]]></content>
      <tags>
        <tag>string</tag>
        <tag>模拟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu2657|SCOI2009|windy数]]></title>
    <url>%2F2018%2F01%2F24%2Fluogu2657%2F</url>
    <content type="text"><![CDATA[$windy$定义了一种$windy$数。不含前导零且相邻两个数字之差至少为$2$的正整数被称为$windy$数。 $windy$想知道， 在$[A,B]$，总共有多少个$windy$数？]]></content>
      <tags>
        <tag>DP</tag>
        <tag>luogu</tag>
        <tag>数位DP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[uoj12|UER 1|猜数]]></title>
    <url>%2F2018%2F01%2F22%2Fuoj12%2F</url>
    <content type="text"><![CDATA[题意： 已知$ab=gl=n^2,g|a,g|b$ 给定$g,l$ 求最大最小的$a+b$]]></content>
      <tags>
        <tag>math</tag>
        <tag>uoj</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu2756]]></title>
    <url>%2F2018%2F01%2F22%2Fluogu2756%2F</url>
    <content type="text"><![CDATA[这道题，本来是用匈牙利做的，不过看了这个输入，就想练习一下带花树]]></content>
      <tags>
        <tag>luogu</tag>
        <tag>带花树</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[带花树]]></title>
    <url>%2F2018%2F01%2F22%2F%E5%B8%A6%E8%8A%B1%E6%A0%91%2F</url>
    <content type="text"><![CDATA[学了学带花树，发现不懂，然后就打了个板子，没加 1q.pop(); 于是调了$1day$]]></content>
      <tags>
        <tag>带花树</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu3258|JLOI2014|松鼠的新家]]></title>
    <url>%2F2018%2F01%2F21%2Fluogu3258%2F</url>
    <content type="text"><![CDATA[找树链剖分时找到了这题，然后就愉快得写了$lca$]]></content>
      <tags>
        <tag>LCA</tag>
        <tag>luogu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树链剖分]]></title>
    <url>%2F2018%2F01%2F21%2F%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86%2F</url>
    <content type="text"><![CDATA[树链剖分，看它名字就知道，是将树搞成一条条链来做]]></content>
      <tags>
        <tag>树链剖分</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[树状数组的区间修改查询]]></title>
    <url>%2F2018%2F01%2F21%2F%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E7%9A%84%E5%8C%BA%E9%97%B4%E4%BF%AE%E6%94%B9%E6%9F%A5%E8%AF%A2%2F</url>
    <content type="text"><![CDATA[树状数组，是一种常数很低的$O(n\dot~log_2n)$的数据结构 不过作用范围不大。]]></content>
      <tags>
        <tag>树状数组</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络流dinic]]></title>
    <url>%2F2018%2F01%2F19%2F%E7%BD%91%E7%BB%9C%E6%B5%81%2F</url>
    <content type="text"><![CDATA[发现我有好多算法只是不想会写。。。]]></content>
      <tags>
        <tag>网络流</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[割点]]></title>
    <url>%2F2018%2F01%2F19%2F%E5%89%B2%E7%82%B9%2F</url>
    <content type="text"><![CDATA[割点，普遍使用tarjan算法，复杂度大概是$O(n+e)$级别（自己瞎猜的，错了欢迎指出） 模板题]]></content>
      <tags>
        <tag>割点</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[二分图匹配]]></title>
    <url>%2F2018%2F01%2F18%2F%E4%BA%8C%E5%88%86%E5%9B%BE%E5%8C%B9%E9%85%8D%2F</url>
    <content type="text"><![CDATA[二分图匹配，用得最多的是匈牙利算法。]]></content>
      <tags>
        <tag>二分图匹配</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu2634|国家集训队|聪聪可可]]></title>
    <url>%2F2018%2F01%2F18%2Fluogu2634%2F</url>
    <content type="text"><![CDATA[明显点分治 时间复杂度$O(n\dot~log_2n)$]]></content>
      <tags>
        <tag>luogu</tag>
        <tag>点分治</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu2444|POI2000|病毒]]></title>
    <url>%2F2018%2F01%2F18%2Fluogu2444%2F</url>
    <content type="text"><![CDATA[二进制病毒审查委员会最近发现了如下的规律：某些确定的二进制串是病毒的代码。如果某段代码中不存在任何一段病毒代码，那么我们就称这段代码是安全的。现在委员会已经找出了所有的病毒代码段，试问，是否存在一个无限长的安全的二进制代码。]]></content>
      <tags>
        <tag>luogu</tag>
        <tag>AC自动机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu2210|Haywire]]></title>
    <url>%2F2018%2F01%2F17%2Fluogu2210%2F</url>
    <content type="text"><![CDATA[做这道题，我仿佛回到了去年NOIP的考场 那是Day2，很毒瘤 让人暴力都不会打 然后，我就打了随机化，保证了父节点在子节点的前面，然后$O((n-1)!)$搜索 然后我脑残，强制循环$7!$次（暴力嘛，本来是根据$n$变的，然后循环哪里脑残了） 然后luogu上AC了，貌似CCF得的分也不少 回到了现在，我又打了一个随机。]]></content>
      <tags>
        <tag>luogu</tag>
        <tag>随机化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu1329|数列]]></title>
    <url>%2F2018%2F01%2F17%2Fluogu1329%2F</url>
    <content type="text"><![CDATA[准备搞数论，发现式子一个也不会推。。。 然后看到了这题，发现可做，于是我又做了一个省选/NOI-的假数论题]]></content>
      <tags>
        <tag>DP</tag>
        <tag>luogu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[主席树]]></title>
    <url>%2F2018%2F01%2F15%2F%E4%B8%BB%E5%B8%AD%E6%A0%91%2F</url>
    <content type="text"><![CDATA[主席树是动态开点可过的。。。 以为要写静态的。。。 于是一直不敢写。。。 贴个模板题]]></content>
      <tags>
        <tag>主席树</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu2152]]></title>
    <url>%2F2018%2F01%2F12%2Fluogu2152%2F</url>
    <content type="text"><![CDATA[求$gcd(a,b)$，（$a,b\le10^{10000}$）]]></content>
      <tags>
        <tag>math</tag>
        <tag>luogu</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu2106|Sam数]]></title>
    <url>%2F2018%2F01%2F08%2Fluogu2106%2F</url>
    <content type="text"><![CDATA[小Z最近发现了一种非常有趣的数，他将这种数称之为 Sam 数。Sam 数具有以下特征：相邻两位的数字之差不超过 2。小Z还将 Sam 数按位数进行了分类，他将一个 k 位 Sam 数称之为 k 阶 Sam 数。但不幸的是小Z发现他数不清第 k 阶的 Sam 数一共有多少个，这个时候机智的他想到了向你求助。 题目链接]]></content>
      <tags>
        <tag>math</tag>
        <tag>luogu</tag>
        <tag>矩阵快速幂</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu1972|SDOI2009|HH的项链]]></title>
    <url>%2F2018%2F01%2F07%2Fluogu1972%2F</url>
    <content type="text"><![CDATA[$ $]]></content>
      <tags>
        <tag>luogu</tag>
        <tag>莫队</tag>
        <tag>SDOI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[loj2323|luogu4005|清华集训|小Y和地铁]]></title>
    <url>%2F2018%2F01%2F07%2Floj2323luogu4005%E5%B0%8FY%E5%92%8C%E5%9C%B0%E9%93%81%2F</url>
    <content type="text"><![CDATA[$ $]]></content>
      <tags>
        <tag>loj</tag>
        <tag>luogu</tag>
        <tag>清华集训</tag>
        <tag>搜索</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[点分治]]></title>
    <url>%2F2018%2F01%2F07%2F%E7%82%B9%E5%88%86%E6%B2%BB%2F</url>
    <content type="text"><![CDATA[模板题 数组开小，身败名裂]]></content>
      <tags>
        <tag>点分治</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[莫队算法初步]]></title>
    <url>%2F2018%2F01%2F06%2F%E8%8E%AB%E9%98%9F%2F</url>
    <content type="text"><![CDATA[莫队——优雅的暴力]]></content>
      <tags>
        <tag>莫队</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu4006|loj2324|清华集训 2017|小Y和二叉树]]></title>
    <url>%2F2018%2F01%2F05%2Fluogu4006loj2324%2F</url>
    <content type="text"><![CDATA[给定点的连边情况，求字典序最小的中序遍历 Sample Input 1234543 2 3 41 11 11 1 Output 12 1 3 4]]></content>
      <tags>
        <tag>DP</tag>
        <tag>贪心</tag>
        <tag>loj</tag>
        <tag>luogu</tag>
        <tag>清华集训</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[KMP快速匹配字符串]]></title>
    <url>%2F2018%2F01%2F05%2FKMP%2F</url>
    <content type="text"><![CDATA[最近模板题搞得有点多啊。 还不是本蒟蒻太菜集训时候发现啥也不会来狂补]]></content>
      <tags>
        <tag>KMP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性基模板(luogu3812)]]></title>
    <url>%2F2018%2F01%2F05%2F%E7%BA%BF%E6%80%A7%E5%9F%BA%E6%A8%A1%E6%9D%BF-luogu3812%2F</url>
    <content type="text"><![CDATA[Luogu上的一道模板题，也是线性基最基础的运用。]]></content>
      <tags>
        <tag>luogu</tag>
        <tag>线性基</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu3808]]></title>
    <url>%2F2018%2F01%2F04%2Fluogu3808%2F</url>
    <content type="text"><![CDATA[模板题++]]></content>
      <tags>
        <tag>luogu</tag>
        <tag>AC自动机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[tarjan缩点]]></title>
    <url>%2F2018%2F01%2F04%2Ftarjan%E7%BC%A9%E7%82%B9%2F</url>
    <content type="text"><![CDATA[求有向图（边权为1）上最长链长度]]></content>
      <tags>
        <tag>tarjan</tag>
        <tag>缩点</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[51nod1491]]></title>
    <url>%2F2018%2F01%2F03%2F51nod1491%2F</url>
    <content type="text"><![CDATA[$q=\dfrac{\sqrt5+1}2$，在黄金系统下面$a_i(i\in[1,n])$等于$\sum_{i=0}^na_i\dot q^{n-i}$，其中$a_i\in{0,1}$。 现在给出两个黄金系统下面的数字，请比较他们的大小。]]></content>
      <tags>
        <tag>51nod</tag>
        <tag>斐波拉契数列</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu1439]]></title>
    <url>%2F2018%2F01%2F03%2Fluogu1439%2F</url>
    <content type="text"><![CDATA[给出1-n的两个排列P1和P2，求它们的最长公共子序列。]]></content>
      <tags>
        <tag>DP</tag>
        <tag>luogu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[prufer序列]]></title>
    <url>%2F2018%2F01%2F02%2Fprufer%2F</url>
    <content type="text"><![CDATA[prufer序列，可以将一个无向图转换为一个序列，这个序列叫做prufer序列（好像有语病？）]]></content>
      <tags>
        <tag>prufer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[luogu2330]]></title>
    <url>%2F2017%2F12%2F10%2Fluogu2330%2F</url>
    <content type="text"><![CDATA[题目好像好难看懂。。]]></content>
      <tags>
        <tag>luogu</tag>
        <tag>dijkstra</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[UOJ69]]></title>
    <url>%2F2017%2F12%2F09%2FUOJ69%2F</url>
    <content type="text"><![CDATA[一道我也不知道怎么AC的题]]></content>
      <tags>
        <tag>uoj</tag>
        <tag>提交答案</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[求LCS的长度和数量]]></title>
    <url>%2F2017%2F12%2F09%2FLCS%2F</url>
    <content type="text"><![CDATA[DP求LCS的长度和数量]]></content>
      <tags>
        <tag>DP</tag>
        <tag>LCS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[倍增算法求LCA]]></title>
    <url>%2F2017%2F12%2F09%2FLCA%2F</url>
    <content type="text"><![CDATA[LCA就是给定一棵有根树，和两个点，求他们的最近公共祖先（深度最大）]]></content>
      <tags>
        <tag>LCA</tag>
        <tag>倍增</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo下文章添加password]]></title>
    <url>%2F2017%2F12%2F09%2Fhexo-password%2F</url>
    <content type="text"><![CDATA[在hexo里面，有很多有趣的东西，现在来介绍一下怎么设置访问密码。 双击WoW即可阅读]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用hexo+next搭建coding博客]]></title>
    <url>%2F2017%2F12%2F09%2Fhexo%2F</url>
    <content type="text"><![CDATA[先来一波福利，就是给出我的博客下载地址 github]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
